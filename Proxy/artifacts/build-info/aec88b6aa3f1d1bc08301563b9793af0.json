{
	"id": "aec88b6aa3f1d1bc08301563b9793af0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			".git/Proxy/bankV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"./IBank.sol\";\r\n\r\ncontract Bank is Initializable, UUPSUpgradeable, OwnableUpgradeable, IBank {\r\n    mapping(address => uint256) private balances;\r\n\r\n    event Deposited(address indexed user, uint256 amount);\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n\r\n    constructor() {\r\n        _initialize(msg.sender);\r\n    }\r\n\r\n    function _initialize(address owner) private initializer {\r\n        __Ownable_init(owner);\r\n        __UUPSUpgradeable_init();\r\n    }\r\n\r\n    function _authorizeUpgrade(address newImplementation)\r\n        internal\r\n        override\r\n        onlyOwner\r\n    {}\r\n    // Permite que o usuário deposite ETH no contrato\r\n    function deposit() external payable override {\r\n        require(msg.value > 0, \"Must send ETH\");\r\n        balances[msg.sender] += msg.value;\r\n        emit Deposited(msg.sender, msg.value);\r\n    }\r\n\r\n    // Permite que o usuário saque ETH armazenado\r\n    function withdraw(uint256 amount) external override {\r\n        require(balances[msg.sender] >= amount, \"Insufficient balance\");\r\n        balances[msg.sender] -= amount;\r\n        payable(msg.sender).transfer(amount);\r\n        emit Withdrawn(msg.sender, amount);\r\n    }\r\n\r\n    // Consulta o saldo de um usuário\r\n    function getBalance(address user) external view override returns (uint256) {\r\n        return balances[user];\r\n    }\r\n\r\n    function transfer(address user, uint256 amount) external {\r\n        require(balances[msg.sender] >= amount, \"Insufficient balance\");\r\n        balances[msg.sender] -= amount;\r\n        payable(user).transfer(amount);\r\n        emit Withdrawn(user, amount);\r\n    }\r\n}\r\n"
			},
			".git/Proxy/IBank.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IBank {\r\n    function deposit() external payable;\r\n    function withdraw(uint256 amount) external;\r\n    function getBalance(address user) external view returns (uint256);\r\n}"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			".git/Proxy/IBank.sol": {
				"IBank": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"getBalance(address)": "f8b2cb4f",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".git/Proxy/IBank.sol\":\"IBank\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".git/Proxy/IBank.sol\":{\"keccak256\":\"0xeaee611b83509115665161a83238dbaa7633b9b81b693791600da737d4a149a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dc654a649cd8a0e82458fbff6245930412c318cf838af878e4a800bc3375a67\",\"dweb:/ipfs/Qmaw2yvhsb9Sa3vUyB1UbGkxna3bnfEBLDFFtxpQ2Z2ow4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".git/Proxy/bankV2.sol": {
				"Bank": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".git/Proxy/bankV2.sol\":319:1913  contract Bank is Initializable, UUPSUpgradeable, OwnableUpgradeable, IBank {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \".git/Proxy/bankV2.sol\":576:632  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \".git/Proxy/bankV2.sol\":601:624  _initialize(msg.sender) */\n  tag_4\n    /* \".git/Proxy/bankV2.sol\":613:623  msg.sender */\n  caller\n    /* \".git/Proxy/bankV2.sol\":601:612  _initialize */\n  shl(0x20, tag_5)\n    /* \".git/Proxy/bankV2.sol\":601:624  _initialize(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \".git/Proxy/bankV2.sol\":319:1913  contract Bank is Initializable, UUPSUpgradeable, OwnableUpgradeable, IBank {... */\n  jump(tag_6)\n    /* \".git/Proxy/bankV2.sol\":640:771  function _initialize(address owner) private initializer {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n  tag_8\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n  0x00\n  add\n  0x08\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n  iszero\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n  dup3\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n  0x00\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4721  bool initialSetup */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4739:4740  0 */\n  dup1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4735  initialized */\n  dup3\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n  0xffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n  dup1\n  iszero\n  tag_10\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n  dup3\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n  0x01\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n  dup4\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n  0xffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n  dup1\n  iszero\n  tag_11\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4837:4838  0 */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n  iszero\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n  dup1\n  iszero\n  tag_12\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n  dup1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n  iszero\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\ntag_12:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n  iszero\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n  mload(0x40)\n  0xf92ee8a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\ntag_13:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n  0x01\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4950  $ */\n  dup6\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4963  $._initialized */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4981:4995  isTopLevelCall */\n  dup4\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n  iszero\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5029:5033  true */\n  0x01\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5012  $ */\n  dup6\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5026  $._initializing */\n  0x00\n  add\n  0x08\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\ntag_14:\n    /* \".git/Proxy/bankV2.sol\":707:728  __Ownable_init(owner) */\n  tag_16\n    /* \".git/Proxy/bankV2.sol\":722:727  owner */\n  dup7\n    /* \".git/Proxy/bankV2.sol\":707:721  __Ownable_init */\n  shl(0x20, tag_17)\n    /* \".git/Proxy/bankV2.sol\":707:728  __Ownable_init(owner) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \".git/Proxy/bankV2.sol\":739:763  __UUPSUpgradeable_init() */\n  tag_18\n    /* \".git/Proxy/bankV2.sol\":739:761  __UUPSUpgradeable_init */\n  shl(0x20, tag_19)\n    /* \".git/Proxy/bankV2.sol\":739:763  __UUPSUpgradeable_init() */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n  dup4\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n  iszero\n  tag_20\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5116:5121  false */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5099  $ */\n  dup6\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5113  $._initializing */\n  0x00\n  add\n  0x08\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5152:5153  1 */\n  0x01\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n  mload(0x40)\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\ntag_20:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \".git/Proxy/bankV2.sol\":640:771  function _initialize(address owner) private initializer {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\ntag_9:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9183  bytes32 slot */\n  dup1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n  tag_24\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9211  _initializableStorageSlot */\n  shl(0x20, tag_25)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9256:9260  slot */\n  dup1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9246:9260  $.slot := slot */\n  swap2\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9232:9270  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\ntag_17:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n  tag_27\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n  tag_30\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n  shl(0x20, tag_31)\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\ntag_19:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n  tag_33\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n  0x20\n  shr\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\ntag_25:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8887:8894  bytes32 */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8913:8934  INITIALIZABLE_STORAGE */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8906:8934  return INITIALIZABLE_STORAGE */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\ntag_28:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n  tag_37\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n  shl(0x20, tag_38)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n  mload(0x40)\n  0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\ntag_39:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\ntag_31:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n  tag_41\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n  0x20\n  shr\n  jump\t// in\ntag_41:\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n  tag_43\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_44\n  swap2\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\ntag_43:\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n  tag_46\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n  shl(0x20, tag_47)\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_46:\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\ntag_38:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n  tag_49\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n  0x20\n  shr\n  jump\t// in\ntag_49:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n  0x00\n  add\n  0x08\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8551:8598  return _getInitializableStorage()._initializing */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\ntag_47:\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n  tag_51\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n  shl(0x20, tag_52)\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n  0x20\n  shr\n  jump\t// in\ntag_51:\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n  0x00\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n  dup3\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n  dup3\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n  dup3\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\ntag_52:\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n  0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:92   */\ntag_54:\n    /* \"#utility.yul\":52:59   */\n  0x00\n    /* \"#utility.yul\":81:86   */\n  dup2\n    /* \"#utility.yul\":70:86   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:92   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":98:199   */\ntag_55:\n    /* \"#utility.yul\":134:141   */\n  0x00\n    /* \"#utility.yul\":174:192   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":167:172   */\n  dup3\n    /* \"#utility.yul\":163:193   */\n  and\n    /* \"#utility.yul\":152:193   */\n  swap1\n  pop\n    /* \"#utility.yul\":98:199   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":205:265   */\ntag_56:\n    /* \"#utility.yul\":233:236   */\n  0x00\n    /* \"#utility.yul\":254:259   */\n  dup2\n    /* \"#utility.yul\":247:259   */\n  swap1\n  pop\n    /* \"#utility.yul\":205:265   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":271:427   */\ntag_57:\n    /* \"#utility.yul\":328:337   */\n  0x00\n    /* \"#utility.yul\":361:421   */\n  tag_67\n    /* \"#utility.yul\":378:420   */\n  tag_68\n    /* \"#utility.yul\":387:419   */\n  tag_69\n    /* \"#utility.yul\":413:418   */\n  dup5\n    /* \"#utility.yul\":387:419   */\n  tag_54\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":378:420   */\n  tag_56\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":361:421   */\n  tag_55\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":348:421   */\n  swap1\n  pop\n    /* \"#utility.yul\":271:427   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":433:578   */\ntag_58:\n    /* \"#utility.yul\":527:571   */\n  tag_71\n    /* \"#utility.yul\":565:570   */\n  dup2\n    /* \"#utility.yul\":527:571   */\n  tag_57\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":522:525   */\n  dup3\n    /* \"#utility.yul\":515:572   */\n  mstore\n    /* \"#utility.yul\":433:578   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":584:820   */\ntag_22:\n    /* \"#utility.yul\":684:688   */\n  0x00\n    /* \"#utility.yul\":722:724   */\n  0x20\n    /* \"#utility.yul\":711:720   */\n  dup3\n    /* \"#utility.yul\":707:725   */\n  add\n    /* \"#utility.yul\":699:725   */\n  swap1\n  pop\n    /* \"#utility.yul\":735:813   */\n  tag_73\n    /* \"#utility.yul\":810:811   */\n  0x00\n    /* \"#utility.yul\":799:808   */\n  dup4\n    /* \"#utility.yul\":795:812   */\n  add\n    /* \"#utility.yul\":786:792   */\n  dup5\n    /* \"#utility.yul\":735:813   */\n  tag_58\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":584:820   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:952   */\ntag_59:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":903:945   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":896:901   */\n  dup3\n    /* \"#utility.yul\":892:946   */\n  and\n    /* \"#utility.yul\":881:946   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:952   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":958:1054   */\ntag_60:\n    /* \"#utility.yul\":995:1002   */\n  0x00\n    /* \"#utility.yul\":1024:1048   */\n  tag_76\n    /* \"#utility.yul\":1042:1047   */\n  dup3\n    /* \"#utility.yul\":1024:1048   */\n  tag_59\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1013:1048   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1060:1178   */\ntag_61:\n    /* \"#utility.yul\":1147:1171   */\n  tag_78\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_60\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1142:1145   */\n  dup3\n    /* \"#utility.yul\":1135:1172   */\n  mstore\n    /* \"#utility.yul\":1060:1178   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1184:1406   */\ntag_45:\n    /* \"#utility.yul\":1277:1281   */\n  0x00\n    /* \"#utility.yul\":1315:1317   */\n  0x20\n    /* \"#utility.yul\":1304:1313   */\n  dup3\n    /* \"#utility.yul\":1300:1318   */\n  add\n    /* \"#utility.yul\":1292:1318   */\n  swap1\n  pop\n    /* \"#utility.yul\":1328:1399   */\n  tag_80\n    /* \"#utility.yul\":1396:1397   */\n  0x00\n    /* \"#utility.yul\":1385:1394   */\n  dup4\n    /* \"#utility.yul\":1381:1398   */\n  add\n    /* \"#utility.yul\":1372:1378   */\n  dup5\n    /* \"#utility.yul\":1328:1399   */\n  tag_61\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1184:1406   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \".git/Proxy/bankV2.sol\":319:1913  contract Bank is Initializable, UUPSUpgradeable, OwnableUpgradeable, IBank {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x62436f2808c4896b559574a20128c359e32d25d88f8026d5d47b3442a6b3eabd\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \".git/Proxy/bankV2.sol\":319:1913  contract Bank is Initializable, UUPSUpgradeable, OwnableUpgradeable, IBank {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa9059cbb\n      gt\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_12:\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \".git/Proxy/bankV2.sol\":1212:1479  function withdraw(uint256 amount) external override {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".git/Proxy/bankV2.sol\":1650:1910  function transfer(address user, uint256 amount) external {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".git/Proxy/bankV2.sol\":957:1152  function deposit() external payable override {... */\n    tag_9:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \".git/Proxy/bankV2.sol\":1527:1642  function getBalance(address user) external view override returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".git/Proxy/bankV2.sol\":1212:1479  function withdraw(uint256 amount) external override {... */\n    tag_17:\n        /* \".git/Proxy/bankV2.sol\":1307:1313  amount */\n      dup1\n        /* \".git/Proxy/bankV2.sol\":1283:1291  balances */\n      0x00\n        /* \".git/Proxy/bankV2.sol\":1283:1303  balances[msg.sender] */\n      dup1\n        /* \".git/Proxy/bankV2.sol\":1292:1302  msg.sender */\n      caller\n        /* \".git/Proxy/bankV2.sol\":1283:1303  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".git/Proxy/bankV2.sol\":1283:1313  balances[msg.sender] >= amount */\n      lt\n      iszero\n        /* \".git/Proxy/bankV2.sol\":1275:1338  require(balances[msg.sender] >= amount, \"Insufficient balance\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \".git/Proxy/bankV2.sol\":1373:1379  amount */\n      dup1\n        /* \".git/Proxy/bankV2.sol\":1349:1357  balances */\n      0x00\n        /* \".git/Proxy/bankV2.sol\":1349:1369  balances[msg.sender] */\n      dup1\n        /* \".git/Proxy/bankV2.sol\":1358:1368  msg.sender */\n      caller\n        /* \".git/Proxy/bankV2.sol\":1349:1369  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".git/Proxy/bankV2.sol\":1349:1379  balances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".git/Proxy/bankV2.sol\":1398:1408  msg.sender */\n      caller\n        /* \".git/Proxy/bankV2.sol\":1390:1418  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".git/Proxy/bankV2.sol\":1390:1426  payable(msg.sender).transfer(amount) */\n      0x08fc\n        /* \".git/Proxy/bankV2.sol\":1419:1425  amount */\n      dup3\n        /* \".git/Proxy/bankV2.sol\":1390:1426  payable(msg.sender).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n        /* \".git/Proxy/bankV2.sol\":1452:1462  msg.sender */\n      caller\n        /* \".git/Proxy/bankV2.sol\":1442:1471  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \".git/Proxy/bankV2.sol\":1464:1470  amount */\n      dup3\n        /* \".git/Proxy/bankV2.sol\":1442:1471  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \".git/Proxy/bankV2.sol\":1212:1479  function withdraw(uint256 amount) external override {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_21:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_68\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_69\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_71\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_72\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_76\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_77\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3803:3835  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3796:3835  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_83\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_84\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \".git/Proxy/bankV2.sol\":1650:1910  function transfer(address user, uint256 amount) external {... */\n    tag_39:\n        /* \".git/Proxy/bankV2.sol\":1750:1756  amount */\n      dup1\n        /* \".git/Proxy/bankV2.sol\":1726:1734  balances */\n      0x00\n        /* \".git/Proxy/bankV2.sol\":1726:1746  balances[msg.sender] */\n      dup1\n        /* \".git/Proxy/bankV2.sol\":1735:1745  msg.sender */\n      caller\n        /* \".git/Proxy/bankV2.sol\":1726:1746  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".git/Proxy/bankV2.sol\":1726:1756  balances[msg.sender] >= amount */\n      lt\n      iszero\n        /* \".git/Proxy/bankV2.sol\":1718:1781  require(balances[msg.sender] >= amount, \"Insufficient balance\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_61\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \".git/Proxy/bankV2.sol\":1816:1822  amount */\n      dup1\n        /* \".git/Proxy/bankV2.sol\":1792:1800  balances */\n      0x00\n        /* \".git/Proxy/bankV2.sol\":1792:1812  balances[msg.sender] */\n      dup1\n        /* \".git/Proxy/bankV2.sol\":1801:1811  msg.sender */\n      caller\n        /* \".git/Proxy/bankV2.sol\":1792:1812  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".git/Proxy/bankV2.sol\":1792:1822  balances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_91\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_91:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".git/Proxy/bankV2.sol\":1841:1845  user */\n      dup2\n        /* \".git/Proxy/bankV2.sol\":1833:1855  payable(user).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".git/Proxy/bankV2.sol\":1833:1863  payable(user).transfer(amount) */\n      0x08fc\n        /* \".git/Proxy/bankV2.sol\":1856:1862  amount */\n      dup3\n        /* \".git/Proxy/bankV2.sol\":1833:1863  payable(user).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n        /* \".git/Proxy/bankV2.sol\":1889:1893  user */\n      dup2\n        /* \".git/Proxy/bankV2.sol\":1879:1902  Withdrawn(user, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \".git/Proxy/bankV2.sol\":1895:1901  amount */\n      dup3\n        /* \".git/Proxy/bankV2.sol\":1879:1902  Withdrawn(user, amount) */\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \".git/Proxy/bankV2.sol\":1650:1910  function transfer(address user, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_42:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \".git/Proxy/bankV2.sol\":957:1152  function deposit() external payable override {... */\n    tag_46:\n        /* \".git/Proxy/bankV2.sol\":1033:1034  0 */\n      0x00\n        /* \".git/Proxy/bankV2.sol\":1021:1030  msg.value */\n      callvalue\n        /* \".git/Proxy/bankV2.sol\":1021:1034  msg.value > 0 */\n      gt\n        /* \".git/Proxy/bankV2.sol\":1013:1052  require(msg.value > 0, \"Must send ETH\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \".git/Proxy/bankV2.sol\":1087:1096  msg.value */\n      callvalue\n        /* \".git/Proxy/bankV2.sol\":1063:1071  balances */\n      0x00\n        /* \".git/Proxy/bankV2.sol\":1063:1083  balances[msg.sender] */\n      dup1\n        /* \".git/Proxy/bankV2.sol\":1072:1082  msg.sender */\n      caller\n        /* \".git/Proxy/bankV2.sol\":1063:1083  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".git/Proxy/bankV2.sol\":1063:1096  balances[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".git/Proxy/bankV2.sol\":1122:1132  msg.sender */\n      caller\n        /* \".git/Proxy/bankV2.sol\":1112:1144  Deposited(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4\n        /* \".git/Proxy/bankV2.sol\":1134:1143  msg.value */\n      callvalue\n        /* \".git/Proxy/bankV2.sol\":1112:1144  Deposited(msg.sender, msg.value) */\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \".git/Proxy/bankV2.sol\":957:1152  function deposit() external payable override {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_103\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_105\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_107\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_84\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \".git/Proxy/bankV2.sol\":1527:1642  function getBalance(address user) external view override returns (uint256) {... */\n    tag_55:\n        /* \".git/Proxy/bankV2.sol\":1593:1600  uint256 */\n      0x00\n        /* \".git/Proxy/bankV2.sol\":1620:1628  balances */\n      dup1\n        /* \".git/Proxy/bankV2.sol\":1620:1634  balances[user] */\n      0x00\n        /* \".git/Proxy/bankV2.sol\":1629:1633  user */\n      dup4\n        /* \".git/Proxy/bankV2.sol\":1620:1634  balances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".git/Proxy/bankV2.sol\":1613:1634  return balances[user] */\n      swap1\n      pop\n        /* \".git/Proxy/bankV2.sol\":1527:1642  function getBalance(address user) external view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4578:4890  function _checkProxy() internal view virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4667:4673  __self */\n      immutable(\"0x62436f2808c4896b559574a20128c359e32d25d88f8026d5d47b3442a6b3eabd\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4673  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4662  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4673  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4770  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_110\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4764:4770  __self */\n      immutable(\"0x62436f2808c4896b559574a20128c359e32d25d88f8026d5d47b3442a6b3eabd\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4770  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4760  ERC1967Utils.getImplementation() */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4758  ERC1967Utils.getImplementation */\n      tag_112\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4760  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4770  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4770  address(this) == __self || // Must be called through delegatecall... */\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4633:4884  if (... */\n      iszero\n      tag_113\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4844:4873  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4633:4884  if (... */\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4578:4890  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \".git/Proxy/bankV2.sol\":779:895  function _authorizeUpgrade(address newImplementation)... */\n    tag_72:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_115\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_115:\n        /* \".git/Proxy/bankV2.sol\":779:895  function _authorizeUpgrade(address newImplementation)... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6032:6570  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_74:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6149:6166  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6131:6181  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6131:6183  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_118\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      0x01\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6127:6564  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6535:6552  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6493:6553  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6127:6564  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6233:6265  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6225:6229  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6225:6265  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6221:6341  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6321:6325  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6292:6326  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6221:6341  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6408  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6384:6401  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6403:6407  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6383  ERC1967Utils.upgradeToAndCall */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6408  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6184:6419  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6032:6570  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5007:5220  function _checkNotDelegated() internal view virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5096  __self */\n      immutable(\"0x62436f2808c4896b559574a20128c359e32d25d88f8026d5d47b3442a6b3eabd\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5073:5096  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5081:5085  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5073:5096  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5069:5214  if (address(this) != __self) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5174:5203  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5069:5214  if (address(this) != __self) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5007:5220  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_81:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_136\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_32\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_138\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_141\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1493:1500  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_144\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1546:1565  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1545  StorageSlot.getAddressSlot */\n      tag_145\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1512:1572  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_147\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_148\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2425:2442  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2472:2473  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2462  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_150\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_151\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_150:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      jump(tag_152)\n    tag_149:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_153\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_154\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1960:1981  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2042:2046  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2032:2046  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1834:1851  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1928:1945  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_160\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1899:1918  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1898  StorageSlot.getAddressSlot */\n      tag_145\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1925  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3999:4011  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4024:4036  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4038:4061  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4071  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4084  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4085:4089  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4090  target.delegatecall(data) */\n      mload(0x40)\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_166\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_165)\n    tag_166:\n      0x60\n      swap2\n      pop\n    tag_165:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      tag_167\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4134:4140  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4142:4149  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4151:4161  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4133  verifyCallResultFromTarget */\n      tag_168\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4100:4162  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6175:6176  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4581:4593  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4610:4617  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      tag_173\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4641:4651  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4640  _revert */\n      tag_174\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      jump(tag_175)\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4878:4879  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4867  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4874  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4879  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4905:4906  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4889  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4901  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4906  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n    tag_176:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4956  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4992:5002  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4985:5002  return returndata */\n      swap1\n      pop\n      jump(tag_171)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_171:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5710:5711  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5700  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n      mload(0x40)\n      0xd6bda27500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_182:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_183:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_184:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_185:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_186:\n        /* \"#utility.yul\":490:514   */\n      tag_226\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_185\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_227:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_187:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_229\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_186\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_16:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_232\n      tag_183\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":766:885   */\n    tag_231:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_233\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_187\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_188:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_189:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_236\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_188\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_190:\n        /* \"#utility.yul\":1332:1356   */\n      tag_238\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_189\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      dup1\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_239:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_191:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_241\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_190\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1649   */\n    tag_192:\n        /* \"#utility.yul\":1641:1642   */\n      0x00\n        /* \"#utility.yul\":1638:1639   */\n      dup1\n        /* \"#utility.yul\":1631:1643   */\n      revert\n        /* \"#utility.yul\":1655:1772   */\n    tag_193:\n        /* \"#utility.yul\":1764:1765   */\n      0x00\n        /* \"#utility.yul\":1761:1762   */\n      dup1\n        /* \"#utility.yul\":1754:1766   */\n      revert\n        /* \"#utility.yul\":1778:1880   */\n    tag_194:\n        /* \"#utility.yul\":1819:1825   */\n      0x00\n        /* \"#utility.yul\":1870:1872   */\n      0x1f\n        /* \"#utility.yul\":1866:1873   */\n      not\n        /* \"#utility.yul\":1861:1863   */\n      0x1f\n        /* \"#utility.yul\":1854:1859   */\n      dup4\n        /* \"#utility.yul\":1850:1864   */\n      add\n        /* \"#utility.yul\":1846:1874   */\n      and\n        /* \"#utility.yul\":1836:1874   */\n      swap1\n      pop\n        /* \"#utility.yul\":1778:1880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1886:2066   */\n    tag_195:\n        /* \"#utility.yul\":1934:2011   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1931:1932   */\n      0x00\n        /* \"#utility.yul\":1924:2012   */\n      mstore\n        /* \"#utility.yul\":2031:2035   */\n      0x41\n        /* \"#utility.yul\":2028:2029   */\n      0x04\n        /* \"#utility.yul\":2021:2036   */\n      mstore\n        /* \"#utility.yul\":2055:2059   */\n      0x24\n        /* \"#utility.yul\":2052:2053   */\n      0x00\n        /* \"#utility.yul\":2045:2060   */\n      revert\n        /* \"#utility.yul\":2072:2353   */\n    tag_196:\n        /* \"#utility.yul\":2155:2182   */\n      tag_247\n        /* \"#utility.yul\":2177:2181   */\n      dup3\n        /* \"#utility.yul\":2155:2182   */\n      tag_194\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2147:2153   */\n      dup2\n        /* \"#utility.yul\":2143:2183   */\n      add\n        /* \"#utility.yul\":2285:2291   */\n      dup2\n        /* \"#utility.yul\":2273:2283   */\n      dup2\n        /* \"#utility.yul\":2270:2292   */\n      lt\n        /* \"#utility.yul\":2249:2267   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2237:2247   */\n      dup3\n        /* \"#utility.yul\":2234:2268   */\n      gt\n        /* \"#utility.yul\":2231:2293   */\n      or\n        /* \"#utility.yul\":2228:2316   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":2296:2314   */\n      tag_249\n      tag_195\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2228:2316   */\n    tag_248:\n        /* \"#utility.yul\":2336:2346   */\n      dup1\n        /* \"#utility.yul\":2332:2334   */\n      0x40\n        /* \"#utility.yul\":2325:2347   */\n      mstore\n        /* \"#utility.yul\":2115:2353   */\n      pop\n        /* \"#utility.yul\":2072:2353   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2359:2488   */\n    tag_197:\n        /* \"#utility.yul\":2393:2399   */\n      0x00\n        /* \"#utility.yul\":2420:2440   */\n      tag_251\n      tag_182\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2410:2440   */\n      swap1\n      pop\n        /* \"#utility.yul\":2449:2482   */\n      tag_252\n        /* \"#utility.yul\":2477:2481   */\n      dup3\n        /* \"#utility.yul\":2469:2475   */\n      dup3\n        /* \"#utility.yul\":2449:2482   */\n      tag_196\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2359:2488   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2494:2801   */\n    tag_198:\n        /* \"#utility.yul\":2555:2559   */\n      0x00\n        /* \"#utility.yul\":2645:2663   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2637:2643   */\n      dup3\n        /* \"#utility.yul\":2634:2664   */\n      gt\n        /* \"#utility.yul\":2631:2687   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":2667:2685   */\n      tag_255\n      tag_195\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2631:2687   */\n    tag_254:\n        /* \"#utility.yul\":2705:2734   */\n      tag_256\n        /* \"#utility.yul\":2727:2733   */\n      dup3\n        /* \"#utility.yul\":2705:2734   */\n      tag_194\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":2697:2734   */\n      swap1\n      pop\n        /* \"#utility.yul\":2789:2793   */\n      0x20\n        /* \"#utility.yul\":2783:2787   */\n      dup2\n        /* \"#utility.yul\":2779:2794   */\n      add\n        /* \"#utility.yul\":2771:2794   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2807:2955   */\n    tag_199:\n        /* \"#utility.yul\":2905:2911   */\n      dup3\n        /* \"#utility.yul\":2900:2903   */\n      dup2\n        /* \"#utility.yul\":2895:2898   */\n      dup4\n        /* \"#utility.yul\":2882:2912   */\n      calldatacopy\n        /* \"#utility.yul\":2946:2947   */\n      0x00\n        /* \"#utility.yul\":2937:2943   */\n      dup4\n        /* \"#utility.yul\":2932:2935   */\n      dup4\n        /* \"#utility.yul\":2928:2944   */\n      add\n        /* \"#utility.yul\":2921:2948   */\n      mstore\n        /* \"#utility.yul\":2807:2955   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2961:3384   */\n    tag_200:\n        /* \"#utility.yul\":3038:3043   */\n      0x00\n        /* \"#utility.yul\":3063:3128   */\n      tag_259\n        /* \"#utility.yul\":3079:3127   */\n      tag_260\n        /* \"#utility.yul\":3120:3126   */\n      dup5\n        /* \"#utility.yul\":3079:3127   */\n      tag_198\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3063:3128   */\n      tag_197\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3054:3128   */\n      swap1\n      pop\n        /* \"#utility.yul\":3151:3157   */\n      dup3\n        /* \"#utility.yul\":3144:3149   */\n      dup2\n        /* \"#utility.yul\":3137:3158   */\n      mstore\n        /* \"#utility.yul\":3189:3193   */\n      0x20\n        /* \"#utility.yul\":3182:3187   */\n      dup2\n        /* \"#utility.yul\":3178:3194   */\n      add\n        /* \"#utility.yul\":3227:3230   */\n      dup5\n        /* \"#utility.yul\":3218:3224   */\n      dup5\n        /* \"#utility.yul\":3213:3216   */\n      dup5\n        /* \"#utility.yul\":3209:3225   */\n      add\n        /* \"#utility.yul\":3206:3231   */\n      gt\n        /* \"#utility.yul\":3203:3315   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":3234:3313   */\n      tag_262\n      tag_193\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3203:3315   */\n    tag_261:\n        /* \"#utility.yul\":3324:3378   */\n      tag_263\n        /* \"#utility.yul\":3371:3377   */\n      dup5\n        /* \"#utility.yul\":3366:3369   */\n      dup3\n        /* \"#utility.yul\":3361:3364   */\n      dup6\n        /* \"#utility.yul\":3324:3378   */\n      tag_199\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3044:3384   */\n      pop\n        /* \"#utility.yul\":2961:3384   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3403:3741   */\n    tag_201:\n        /* \"#utility.yul\":3458:3463   */\n      0x00\n        /* \"#utility.yul\":3507:3510   */\n      dup3\n        /* \"#utility.yul\":3500:3504   */\n      0x1f\n        /* \"#utility.yul\":3492:3498   */\n      dup4\n        /* \"#utility.yul\":3488:3505   */\n      add\n        /* \"#utility.yul\":3484:3511   */\n      slt\n        /* \"#utility.yul\":3474:3596   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":3515:3594   */\n      tag_266\n      tag_192\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3474:3596   */\n    tag_265:\n        /* \"#utility.yul\":3632:3638   */\n      dup2\n        /* \"#utility.yul\":3619:3639   */\n      calldataload\n        /* \"#utility.yul\":3657:3735   */\n      tag_267\n        /* \"#utility.yul\":3731:3734   */\n      dup5\n        /* \"#utility.yul\":3723:3729   */\n      dup3\n        /* \"#utility.yul\":3716:3720   */\n      0x20\n        /* \"#utility.yul\":3708:3714   */\n      dup7\n        /* \"#utility.yul\":3704:3721   */\n      add\n        /* \"#utility.yul\":3657:3735   */\n      tag_200\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3648:3735   */\n      swap2\n      pop\n        /* \"#utility.yul\":3464:3741   */\n      pop\n        /* \"#utility.yul\":3403:3741   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3747:4399   */\n    tag_20:\n        /* \"#utility.yul\":3824:3830   */\n      0x00\n        /* \"#utility.yul\":3832:3838   */\n      dup1\n        /* \"#utility.yul\":3881:3883   */\n      0x40\n        /* \"#utility.yul\":3869:3878   */\n      dup4\n        /* \"#utility.yul\":3860:3867   */\n      dup6\n        /* \"#utility.yul\":3856:3879   */\n      sub\n        /* \"#utility.yul\":3852:3884   */\n      slt\n        /* \"#utility.yul\":3849:3968   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":3887:3966   */\n      tag_270\n      tag_183\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3849:3968   */\n    tag_269:\n        /* \"#utility.yul\":4007:4008   */\n      0x00\n        /* \"#utility.yul\":4032:4085   */\n      tag_271\n        /* \"#utility.yul\":4077:4084   */\n      dup6\n        /* \"#utility.yul\":4068:4074   */\n      dup3\n        /* \"#utility.yul\":4057:4066   */\n      dup7\n        /* \"#utility.yul\":4053:4075   */\n      add\n        /* \"#utility.yul\":4032:4085   */\n      tag_191\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4022:4085   */\n      swap3\n      pop\n        /* \"#utility.yul\":3978:4095   */\n      pop\n        /* \"#utility.yul\":4162:4164   */\n      0x20\n        /* \"#utility.yul\":4151:4160   */\n      dup4\n        /* \"#utility.yul\":4147:4165   */\n      add\n        /* \"#utility.yul\":4134:4166   */\n      calldataload\n        /* \"#utility.yul\":4193:4211   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4185:4191   */\n      dup2\n        /* \"#utility.yul\":4182:4212   */\n      gt\n        /* \"#utility.yul\":4179:4296   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":4215:4294   */\n      tag_273\n      tag_184\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4179:4296   */\n    tag_272:\n        /* \"#utility.yul\":4320:4382   */\n      tag_274\n        /* \"#utility.yul\":4374:4381   */\n      dup6\n        /* \"#utility.yul\":4365:4371   */\n      dup3\n        /* \"#utility.yul\":4354:4363   */\n      dup7\n        /* \"#utility.yul\":4350:4372   */\n      add\n        /* \"#utility.yul\":4320:4382   */\n      tag_201\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4310:4382   */\n      swap2\n      pop\n        /* \"#utility.yul\":4105:4392   */\n      pop\n        /* \"#utility.yul\":3747:4399   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4405:4482   */\n    tag_202:\n        /* \"#utility.yul\":4442:4449   */\n      0x00\n        /* \"#utility.yul\":4471:4476   */\n      dup2\n        /* \"#utility.yul\":4460:4476   */\n      swap1\n      pop\n        /* \"#utility.yul\":4405:4482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4488:4606   */\n    tag_203:\n        /* \"#utility.yul\":4575:4599   */\n      tag_277\n        /* \"#utility.yul\":4593:4598   */\n      dup2\n        /* \"#utility.yul\":4575:4599   */\n      tag_202\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4570:4573   */\n      dup3\n        /* \"#utility.yul\":4563:4600   */\n      mstore\n        /* \"#utility.yul\":4488:4606   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4612:4834   */\n    tag_26:\n        /* \"#utility.yul\":4705:4709   */\n      0x00\n        /* \"#utility.yul\":4743:4745   */\n      0x20\n        /* \"#utility.yul\":4732:4741   */\n      dup3\n        /* \"#utility.yul\":4728:4746   */\n      add\n        /* \"#utility.yul\":4720:4746   */\n      swap1\n      pop\n        /* \"#utility.yul\":4756:4827   */\n      tag_279\n        /* \"#utility.yul\":4824:4825   */\n      0x00\n        /* \"#utility.yul\":4813:4822   */\n      dup4\n        /* \"#utility.yul\":4809:4826   */\n      add\n        /* \"#utility.yul\":4800:4806   */\n      dup5\n        /* \"#utility.yul\":4756:4827   */\n      tag_203\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":4612:4834   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4840:4958   */\n    tag_204:\n        /* \"#utility.yul\":4927:4951   */\n      tag_281\n        /* \"#utility.yul\":4945:4950   */\n      dup2\n        /* \"#utility.yul\":4927:4951   */\n      tag_189\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4922:4925   */\n      dup3\n        /* \"#utility.yul\":4915:4952   */\n      mstore\n        /* \"#utility.yul\":4840:4958   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4964:5186   */\n    tag_34:\n        /* \"#utility.yul\":5057:5061   */\n      0x00\n        /* \"#utility.yul\":5095:5097   */\n      0x20\n        /* \"#utility.yul\":5084:5093   */\n      dup3\n        /* \"#utility.yul\":5080:5098   */\n      add\n        /* \"#utility.yul\":5072:5098   */\n      swap1\n      pop\n        /* \"#utility.yul\":5108:5179   */\n      tag_283\n        /* \"#utility.yul\":5176:5177   */\n      0x00\n        /* \"#utility.yul\":5165:5174   */\n      dup4\n        /* \"#utility.yul\":5161:5178   */\n      add\n        /* \"#utility.yul\":5152:5158   */\n      dup5\n        /* \"#utility.yul\":5108:5179   */\n      tag_204\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4964:5186   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5192:5666   */\n    tag_38:\n        /* \"#utility.yul\":5260:5266   */\n      0x00\n        /* \"#utility.yul\":5268:5274   */\n      dup1\n        /* \"#utility.yul\":5317:5319   */\n      0x40\n        /* \"#utility.yul\":5305:5314   */\n      dup4\n        /* \"#utility.yul\":5296:5303   */\n      dup6\n        /* \"#utility.yul\":5292:5315   */\n      sub\n        /* \"#utility.yul\":5288:5320   */\n      slt\n        /* \"#utility.yul\":5285:5404   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":5323:5402   */\n      tag_286\n      tag_183\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5285:5404   */\n    tag_285:\n        /* \"#utility.yul\":5443:5444   */\n      0x00\n        /* \"#utility.yul\":5468:5521   */\n      tag_287\n        /* \"#utility.yul\":5513:5520   */\n      dup6\n        /* \"#utility.yul\":5504:5510   */\n      dup3\n        /* \"#utility.yul\":5493:5502   */\n      dup7\n        /* \"#utility.yul\":5489:5511   */\n      add\n        /* \"#utility.yul\":5468:5521   */\n      tag_191\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5458:5521   */\n      swap3\n      pop\n        /* \"#utility.yul\":5414:5531   */\n      pop\n        /* \"#utility.yul\":5570:5572   */\n      0x20\n        /* \"#utility.yul\":5596:5649   */\n      tag_288\n        /* \"#utility.yul\":5641:5648   */\n      dup6\n        /* \"#utility.yul\":5632:5638   */\n      dup3\n        /* \"#utility.yul\":5621:5630   */\n      dup7\n        /* \"#utility.yul\":5617:5639   */\n      add\n        /* \"#utility.yul\":5596:5649   */\n      tag_187\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5586:5649   */\n      swap2\n      pop\n        /* \"#utility.yul\":5541:5659   */\n      pop\n        /* \"#utility.yul\":5192:5666   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5672:5771   */\n    tag_205:\n        /* \"#utility.yul\":5724:5730   */\n      0x00\n        /* \"#utility.yul\":5758:5763   */\n      dup2\n        /* \"#utility.yul\":5752:5764   */\n      mload\n        /* \"#utility.yul\":5742:5764   */\n      swap1\n      pop\n        /* \"#utility.yul\":5672:5771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5777:5946   */\n    tag_206:\n        /* \"#utility.yul\":5861:5872   */\n      0x00\n        /* \"#utility.yul\":5895:5901   */\n      dup3\n        /* \"#utility.yul\":5890:5893   */\n      dup3\n        /* \"#utility.yul\":5883:5902   */\n      mstore\n        /* \"#utility.yul\":5935:5939   */\n      0x20\n        /* \"#utility.yul\":5930:5933   */\n      dup3\n        /* \"#utility.yul\":5926:5940   */\n      add\n        /* \"#utility.yul\":5911:5940   */\n      swap1\n      pop\n        /* \"#utility.yul\":5777:5946   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5952:6091   */\n    tag_207:\n        /* \"#utility.yul\":6041:6047   */\n      dup3\n        /* \"#utility.yul\":6036:6039   */\n      dup2\n        /* \"#utility.yul\":6031:6034   */\n      dup4\n        /* \"#utility.yul\":6025:6048   */\n      mcopy\n        /* \"#utility.yul\":6082:6083   */\n      0x00\n        /* \"#utility.yul\":6073:6079   */\n      dup4\n        /* \"#utility.yul\":6068:6071   */\n      dup4\n        /* \"#utility.yul\":6064:6080   */\n      add\n        /* \"#utility.yul\":6057:6084   */\n      mstore\n        /* \"#utility.yul\":5952:6091   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6097:6474   */\n    tag_208:\n        /* \"#utility.yul\":6185:6188   */\n      0x00\n        /* \"#utility.yul\":6213:6252   */\n      tag_293\n        /* \"#utility.yul\":6246:6251   */\n      dup3\n        /* \"#utility.yul\":6213:6252   */\n      tag_205\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":6268:6339   */\n      tag_294\n        /* \"#utility.yul\":6332:6338   */\n      dup2\n        /* \"#utility.yul\":6327:6330   */\n      dup6\n        /* \"#utility.yul\":6268:6339   */\n      tag_206\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":6261:6339   */\n      swap4\n      pop\n        /* \"#utility.yul\":6348:6413   */\n      tag_295\n        /* \"#utility.yul\":6406:6412   */\n      dup2\n        /* \"#utility.yul\":6401:6404   */\n      dup6\n        /* \"#utility.yul\":6394:6398   */\n      0x20\n        /* \"#utility.yul\":6387:6392   */\n      dup7\n        /* \"#utility.yul\":6383:6399   */\n      add\n        /* \"#utility.yul\":6348:6413   */\n      tag_207\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":6438:6467   */\n      tag_296\n        /* \"#utility.yul\":6460:6466   */\n      dup2\n        /* \"#utility.yul\":6438:6467   */\n      tag_194\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":6433:6436   */\n      dup5\n        /* \"#utility.yul\":6429:6468   */\n      add\n        /* \"#utility.yul\":6422:6468   */\n      swap2\n      pop\n        /* \"#utility.yul\":6189:6474   */\n      pop\n        /* \"#utility.yul\":6097:6474   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6480:6793   */\n    tag_44:\n        /* \"#utility.yul\":6593:6597   */\n      0x00\n        /* \"#utility.yul\":6631:6633   */\n      0x20\n        /* \"#utility.yul\":6620:6629   */\n      dup3\n        /* \"#utility.yul\":6616:6634   */\n      add\n        /* \"#utility.yul\":6608:6634   */\n      swap1\n      pop\n        /* \"#utility.yul\":6680:6689   */\n      dup2\n        /* \"#utility.yul\":6674:6678   */\n      dup2\n        /* \"#utility.yul\":6670:6690   */\n      sub\n        /* \"#utility.yul\":6666:6667   */\n      0x00\n        /* \"#utility.yul\":6655:6664   */\n      dup4\n        /* \"#utility.yul\":6651:6668   */\n      add\n        /* \"#utility.yul\":6644:6691   */\n      mstore\n        /* \"#utility.yul\":6708:6786   */\n      tag_298\n        /* \"#utility.yul\":6781:6785   */\n      dup2\n        /* \"#utility.yul\":6772:6778   */\n      dup5\n        /* \"#utility.yul\":6708:6786   */\n      tag_208\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":6700:6786   */\n      swap1\n      pop\n        /* \"#utility.yul\":6480:6793   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6799:7128   */\n    tag_50:\n        /* \"#utility.yul\":6858:6864   */\n      0x00\n        /* \"#utility.yul\":6907:6909   */\n      0x20\n        /* \"#utility.yul\":6895:6904   */\n      dup3\n        /* \"#utility.yul\":6886:6893   */\n      dup5\n        /* \"#utility.yul\":6882:6905   */\n      sub\n        /* \"#utility.yul\":6878:6910   */\n      slt\n        /* \"#utility.yul\":6875:6994   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":6913:6992   */\n      tag_301\n      tag_183\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":6875:6994   */\n    tag_300:\n        /* \"#utility.yul\":7033:7034   */\n      0x00\n        /* \"#utility.yul\":7058:7111   */\n      tag_302\n        /* \"#utility.yul\":7103:7110   */\n      dup5\n        /* \"#utility.yul\":7094:7100   */\n      dup3\n        /* \"#utility.yul\":7083:7092   */\n      dup6\n        /* \"#utility.yul\":7079:7101   */\n      add\n        /* \"#utility.yul\":7058:7111   */\n      tag_191\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":7048:7111   */\n      swap2\n      pop\n        /* \"#utility.yul\":7004:7121   */\n      pop\n        /* \"#utility.yul\":6799:7128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7134:7252   */\n    tag_209:\n        /* \"#utility.yul\":7221:7245   */\n      tag_304\n        /* \"#utility.yul\":7239:7244   */\n      dup2\n        /* \"#utility.yul\":7221:7245   */\n      tag_185\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7216:7219   */\n      dup3\n        /* \"#utility.yul\":7209:7246   */\n      mstore\n        /* \"#utility.yul\":7134:7252   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7258:7480   */\n    tag_57:\n        /* \"#utility.yul\":7351:7355   */\n      0x00\n        /* \"#utility.yul\":7389:7391   */\n      0x20\n        /* \"#utility.yul\":7378:7387   */\n      dup3\n        /* \"#utility.yul\":7374:7392   */\n      add\n        /* \"#utility.yul\":7366:7392   */\n      swap1\n      pop\n        /* \"#utility.yul\":7402:7473   */\n      tag_306\n        /* \"#utility.yul\":7470:7471   */\n      0x00\n        /* \"#utility.yul\":7459:7468   */\n      dup4\n        /* \"#utility.yul\":7455:7472   */\n      add\n        /* \"#utility.yul\":7446:7452   */\n      dup5\n        /* \"#utility.yul\":7402:7473   */\n      tag_209\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":7258:7480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7486:7656   */\n    tag_210:\n        /* \"#utility.yul\":7626:7648   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":7622:7623   */\n      0x00\n        /* \"#utility.yul\":7614:7620   */\n      dup3\n        /* \"#utility.yul\":7610:7624   */\n      add\n        /* \"#utility.yul\":7603:7649   */\n      mstore\n        /* \"#utility.yul\":7486:7656   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7662:8028   */\n    tag_211:\n        /* \"#utility.yul\":7804:7807   */\n      0x00\n        /* \"#utility.yul\":7825:7892   */\n      tag_309\n        /* \"#utility.yul\":7889:7891   */\n      0x14\n        /* \"#utility.yul\":7884:7887   */\n      dup4\n        /* \"#utility.yul\":7825:7892   */\n      tag_206\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7818:7892   */\n      swap2\n      pop\n        /* \"#utility.yul\":7901:7994   */\n      tag_310\n        /* \"#utility.yul\":7990:7993   */\n      dup3\n        /* \"#utility.yul\":7901:7994   */\n      tag_210\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":8019:8021   */\n      0x20\n        /* \"#utility.yul\":8014:8017   */\n      dup3\n        /* \"#utility.yul\":8010:8022   */\n      add\n        /* \"#utility.yul\":8003:8022   */\n      swap1\n      pop\n        /* \"#utility.yul\":7662:8028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8034:8453   */\n    tag_61:\n        /* \"#utility.yul\":8200:8204   */\n      0x00\n        /* \"#utility.yul\":8238:8240   */\n      0x20\n        /* \"#utility.yul\":8227:8236   */\n      dup3\n        /* \"#utility.yul\":8223:8241   */\n      add\n        /* \"#utility.yul\":8215:8241   */\n      swap1\n      pop\n        /* \"#utility.yul\":8287:8296   */\n      dup2\n        /* \"#utility.yul\":8281:8285   */\n      dup2\n        /* \"#utility.yul\":8277:8297   */\n      sub\n        /* \"#utility.yul\":8273:8274   */\n      0x00\n        /* \"#utility.yul\":8262:8271   */\n      dup4\n        /* \"#utility.yul\":8258:8275   */\n      add\n        /* \"#utility.yul\":8251:8298   */\n      mstore\n        /* \"#utility.yul\":8315:8446   */\n      tag_312\n        /* \"#utility.yul\":8441:8445   */\n      dup2\n        /* \"#utility.yul\":8315:8446   */\n      tag_211\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":8307:8446   */\n      swap1\n      pop\n        /* \"#utility.yul\":8034:8453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8459:8639   */\n    tag_212:\n        /* \"#utility.yul\":8507:8584   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8504:8505   */\n      0x00\n        /* \"#utility.yul\":8497:8585   */\n      mstore\n        /* \"#utility.yul\":8604:8608   */\n      0x11\n        /* \"#utility.yul\":8601:8602   */\n      0x04\n        /* \"#utility.yul\":8594:8609   */\n      mstore\n        /* \"#utility.yul\":8628:8632   */\n      0x24\n        /* \"#utility.yul\":8625:8626   */\n      0x00\n        /* \"#utility.yul\":8618:8633   */\n      revert\n        /* \"#utility.yul\":8645:8839   */\n    tag_63:\n        /* \"#utility.yul\":8685:8689   */\n      0x00\n        /* \"#utility.yul\":8705:8725   */\n      tag_315\n        /* \"#utility.yul\":8723:8724   */\n      dup3\n        /* \"#utility.yul\":8705:8725   */\n      tag_185\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":8700:8725   */\n      swap2\n      pop\n        /* \"#utility.yul\":8739:8759   */\n      tag_316\n        /* \"#utility.yul\":8757:8758   */\n      dup4\n        /* \"#utility.yul\":8739:8759   */\n      tag_185\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":8734:8759   */\n      swap3\n      pop\n        /* \"#utility.yul\":8783:8784   */\n      dup3\n        /* \"#utility.yul\":8780:8781   */\n      dup3\n        /* \"#utility.yul\":8776:8785   */\n      sub\n        /* \"#utility.yul\":8768:8785   */\n      swap1\n      pop\n        /* \"#utility.yul\":8807:8808   */\n      dup2\n        /* \"#utility.yul\":8801:8805   */\n      dup2\n        /* \"#utility.yul\":8798:8809   */\n      gt\n        /* \"#utility.yul\":8795:8832   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":8812:8830   */\n      tag_318\n      tag_212\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":8795:8832   */\n    tag_317:\n        /* \"#utility.yul\":8645:8839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8845:9008   */\n    tag_213:\n        /* \"#utility.yul\":8985:9000   */\n      0x4d7573742073656e642045544800000000000000000000000000000000000000\n        /* \"#utility.yul\":8981:8982   */\n      0x00\n        /* \"#utility.yul\":8973:8979   */\n      dup3\n        /* \"#utility.yul\":8969:8983   */\n      add\n        /* \"#utility.yul\":8962:9001   */\n      mstore\n        /* \"#utility.yul\":8845:9008   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9014:9380   */\n    tag_214:\n        /* \"#utility.yul\":9156:9159   */\n      0x00\n        /* \"#utility.yul\":9177:9244   */\n      tag_321\n        /* \"#utility.yul\":9241:9243   */\n      0x0d\n        /* \"#utility.yul\":9236:9239   */\n      dup4\n        /* \"#utility.yul\":9177:9244   */\n      tag_206\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":9170:9244   */\n      swap2\n      pop\n        /* \"#utility.yul\":9253:9346   */\n      tag_322\n        /* \"#utility.yul\":9342:9345   */\n      dup3\n        /* \"#utility.yul\":9253:9346   */\n      tag_213\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":9371:9373   */\n      0x20\n        /* \"#utility.yul\":9366:9369   */\n      dup3\n        /* \"#utility.yul\":9362:9374   */\n      add\n        /* \"#utility.yul\":9355:9374   */\n      swap1\n      pop\n        /* \"#utility.yul\":9014:9380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9386:9805   */\n    tag_98:\n        /* \"#utility.yul\":9552:9556   */\n      0x00\n        /* \"#utility.yul\":9590:9592   */\n      0x20\n        /* \"#utility.yul\":9579:9588   */\n      dup3\n        /* \"#utility.yul\":9575:9593   */\n      add\n        /* \"#utility.yul\":9567:9593   */\n      swap1\n      pop\n        /* \"#utility.yul\":9639:9648   */\n      dup2\n        /* \"#utility.yul\":9633:9637   */\n      dup2\n        /* \"#utility.yul\":9629:9649   */\n      sub\n        /* \"#utility.yul\":9625:9626   */\n      0x00\n        /* \"#utility.yul\":9614:9623   */\n      dup4\n        /* \"#utility.yul\":9610:9627   */\n      add\n        /* \"#utility.yul\":9603:9650   */\n      mstore\n        /* \"#utility.yul\":9667:9798   */\n      tag_324\n        /* \"#utility.yul\":9793:9797   */\n      dup2\n        /* \"#utility.yul\":9667:9798   */\n      tag_214\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":9659:9798   */\n      swap1\n      pop\n        /* \"#utility.yul\":9386:9805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9811:10002   */\n    tag_100:\n        /* \"#utility.yul\":9851:9854   */\n      0x00\n        /* \"#utility.yul\":9870:9890   */\n      tag_326\n        /* \"#utility.yul\":9888:9889   */\n      dup3\n        /* \"#utility.yul\":9870:9890   */\n      tag_185\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":9865:9890   */\n      swap2\n      pop\n        /* \"#utility.yul\":9904:9924   */\n      tag_327\n        /* \"#utility.yul\":9922:9923   */\n      dup4\n        /* \"#utility.yul\":9904:9924   */\n      tag_185\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":9899:9924   */\n      swap3\n      pop\n        /* \"#utility.yul\":9947:9948   */\n      dup3\n        /* \"#utility.yul\":9944:9945   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      add\n        /* \"#utility.yul\":9933:9949   */\n      swap1\n      pop\n        /* \"#utility.yul\":9968:9971   */\n      dup1\n        /* \"#utility.yul\":9965:9966   */\n      dup3\n        /* \"#utility.yul\":9962:9972   */\n      gt\n        /* \"#utility.yul\":9959:9995   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":9975:9993   */\n      tag_329\n      tag_212\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":9959:9995   */\n    tag_328:\n        /* \"#utility.yul\":9811:10002   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10008:10130   */\n    tag_215:\n        /* \"#utility.yul\":10081:10105   */\n      tag_331\n        /* \"#utility.yul\":10099:10104   */\n      dup2\n        /* \"#utility.yul\":10081:10105   */\n      tag_202\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":10074:10079   */\n      dup2\n        /* \"#utility.yul\":10071:10106   */\n      eq\n        /* \"#utility.yul\":10061:10124   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":10120:10121   */\n      0x00\n        /* \"#utility.yul\":10117:10118   */\n      dup1\n        /* \"#utility.yul\":10110:10122   */\n      revert\n        /* \"#utility.yul\":10061:10124   */\n    tag_332:\n        /* \"#utility.yul\":10008:10130   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10136:10279   */\n    tag_216:\n        /* \"#utility.yul\":10193:10198   */\n      0x00\n        /* \"#utility.yul\":10224:10230   */\n      dup2\n        /* \"#utility.yul\":10218:10231   */\n      mload\n        /* \"#utility.yul\":10209:10231   */\n      swap1\n      pop\n        /* \"#utility.yul\":10240:10273   */\n      tag_334\n        /* \"#utility.yul\":10267:10272   */\n      dup2\n        /* \"#utility.yul\":10240:10273   */\n      tag_215\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":10136:10279   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10285:10636   */\n    tag_120:\n        /* \"#utility.yul\":10355:10361   */\n      0x00\n        /* \"#utility.yul\":10404:10406   */\n      0x20\n        /* \"#utility.yul\":10392:10401   */\n      dup3\n        /* \"#utility.yul\":10383:10390   */\n      dup5\n        /* \"#utility.yul\":10379:10402   */\n      sub\n        /* \"#utility.yul\":10375:10407   */\n      slt\n        /* \"#utility.yul\":10372:10491   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":10410:10489   */\n      tag_337\n      tag_183\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":10372:10491   */\n    tag_336:\n        /* \"#utility.yul\":10530:10531   */\n      0x00\n        /* \"#utility.yul\":10555:10619   */\n      tag_338\n        /* \"#utility.yul\":10611:10618   */\n      dup5\n        /* \"#utility.yul\":10602:10608   */\n      dup3\n        /* \"#utility.yul\":10591:10600   */\n      dup6\n        /* \"#utility.yul\":10587:10609   */\n      add\n        /* \"#utility.yul\":10555:10619   */\n      tag_216\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":10545:10619   */\n      swap2\n      pop\n        /* \"#utility.yul\":10501:10629   */\n      pop\n        /* \"#utility.yul\":10285:10636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10642:10740   */\n    tag_217:\n        /* \"#utility.yul\":10693:10699   */\n      0x00\n        /* \"#utility.yul\":10727:10732   */\n      dup2\n        /* \"#utility.yul\":10721:10733   */\n      mload\n        /* \"#utility.yul\":10711:10733   */\n      swap1\n      pop\n        /* \"#utility.yul\":10642:10740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10746:10893   */\n    tag_218:\n        /* \"#utility.yul\":10847:10858   */\n      0x00\n        /* \"#utility.yul\":10884:10887   */\n      dup2\n        /* \"#utility.yul\":10869:10887   */\n      swap1\n      pop\n        /* \"#utility.yul\":10746:10893   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10899:11285   */\n    tag_219:\n        /* \"#utility.yul\":11003:11006   */\n      0x00\n        /* \"#utility.yul\":11031:11069   */\n      tag_342\n        /* \"#utility.yul\":11063:11068   */\n      dup3\n        /* \"#utility.yul\":11031:11069   */\n      tag_217\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":11085:11173   */\n      tag_343\n        /* \"#utility.yul\":11166:11172   */\n      dup2\n        /* \"#utility.yul\":11161:11164   */\n      dup6\n        /* \"#utility.yul\":11085:11173   */\n      tag_218\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":11078:11173   */\n      swap4\n      pop\n        /* \"#utility.yul\":11182:11247   */\n      tag_344\n        /* \"#utility.yul\":11240:11246   */\n      dup2\n        /* \"#utility.yul\":11235:11238   */\n      dup6\n        /* \"#utility.yul\":11228:11232   */\n      0x20\n        /* \"#utility.yul\":11221:11226   */\n      dup7\n        /* \"#utility.yul\":11217:11233   */\n      add\n        /* \"#utility.yul\":11182:11247   */\n      tag_207\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":11272:11278   */\n      dup1\n        /* \"#utility.yul\":11267:11270   */\n      dup5\n        /* \"#utility.yul\":11263:11279   */\n      add\n        /* \"#utility.yul\":11256:11279   */\n      swap2\n      pop\n        /* \"#utility.yul\":11007:11285   */\n      pop\n        /* \"#utility.yul\":10899:11285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11291:11562   */\n    tag_163:\n        /* \"#utility.yul\":11421:11424   */\n      0x00\n        /* \"#utility.yul\":11443:11536   */\n      tag_346\n        /* \"#utility.yul\":11532:11535   */\n      dup3\n        /* \"#utility.yul\":11523:11529   */\n      dup5\n        /* \"#utility.yul\":11443:11536   */\n      tag_219\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":11436:11536   */\n      swap2\n      pop\n        /* \"#utility.yul\":11553:11556   */\n      dup2\n        /* \"#utility.yul\":11546:11556   */\n      swap1\n      pop\n        /* \"#utility.yul\":11291:11562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cb213de6a705fca07ba3a58ea560471395dd5d65262d584e6d08981d5fc7166764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_56": {
									"entryPoint": null,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_254": {
									"entryPoint": 523,
									"id": 254,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_281": {
									"entryPoint": 682,
									"id": 281,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_716": {
									"entryPoint": 555,
									"id": 716,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkInitializing_570": {
									"entryPoint": 612,
									"id": 570,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_661": {
									"entryPoint": 498,
									"id": 661,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_225": {
									"entryPoint": 1077,
									"id": 225,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_647": {
									"entryPoint": 571,
									"id": 647,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initialize_71": {
									"entryPoint": 87,
									"id": 71,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_isInitializing_638": {
									"entryPoint": 826,
									"id": 638,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_393": {
									"entryPoint": 862,
									"id": 393,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 1186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 1116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 1125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 1153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1409:13",
										"nodeType": "YulBlock",
										"src": "0:1409:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "60:32:13",
													"nodeType": "YulBlock",
													"src": "60:32:13",
													"statements": [
														{
															"nativeSrc": "70:16:13",
															"nodeType": "YulAssignment",
															"src": "70:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "81:5:13",
																"nodeType": "YulIdentifier",
																"src": "81:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "70:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "70:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "7:85:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "42:5:13",
														"nodeType": "YulTypedName",
														"src": "42:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "52:7:13",
														"nodeType": "YulTypedName",
														"src": "52:7:13",
														"type": ""
													}
												],
												"src": "7:85:13"
											},
											{
												"body": {
													"nativeSrc": "142:57:13",
													"nodeType": "YulBlock",
													"src": "142:57:13",
													"statements": [
														{
															"nativeSrc": "152:41:13",
															"nodeType": "YulAssignment",
															"src": "152:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "167:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "167:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "174:18:13",
																		"nodeType": "YulLiteral",
																		"src": "174:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "163:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "163:3:13"
																},
																"nativeSrc": "163:30:13",
																"nodeType": "YulFunctionCall",
																"src": "163:30:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "152:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "152:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "98:101:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "124:5:13",
														"nodeType": "YulTypedName",
														"src": "124:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "134:7:13",
														"nodeType": "YulTypedName",
														"src": "134:7:13",
														"type": ""
													}
												],
												"src": "98:101:13"
											},
											{
												"body": {
													"nativeSrc": "237:28:13",
													"nodeType": "YulBlock",
													"src": "237:28:13",
													"statements": [
														{
															"nativeSrc": "247:12:13",
															"nodeType": "YulAssignment",
															"src": "247:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "254:5:13",
																"nodeType": "YulIdentifier",
																"src": "254:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "247:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "205:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "223:5:13",
														"nodeType": "YulTypedName",
														"src": "223:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "233:3:13",
														"nodeType": "YulTypedName",
														"src": "233:3:13",
														"type": ""
													}
												],
												"src": "205:60:13"
											},
											{
												"body": {
													"nativeSrc": "338:89:13",
													"nodeType": "YulBlock",
													"src": "338:89:13",
													"statements": [
														{
															"nativeSrc": "348:73:13",
															"nodeType": "YulAssignment",
															"src": "348:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "413:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "413:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "387:25:13",
																					"nodeType": "YulIdentifier",
																					"src": "387:25:13"
																				},
																				"nativeSrc": "387:32:13",
																				"nodeType": "YulFunctionCall",
																				"src": "387:32:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "378:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "378:8:13"
																		},
																		"nativeSrc": "378:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "378:42:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "361:16:13",
																	"nodeType": "YulIdentifier",
																	"src": "361:16:13"
																},
																"nativeSrc": "361:60:13",
																"nodeType": "YulFunctionCall",
																"src": "361:60:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "348:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "348:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "271:156:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "318:5:13",
														"nodeType": "YulTypedName",
														"src": "318:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "328:9:13",
														"nodeType": "YulTypedName",
														"src": "328:9:13",
														"type": ""
													}
												],
												"src": "271:156:13"
											},
											{
												"body": {
													"nativeSrc": "505:73:13",
													"nodeType": "YulBlock",
													"src": "505:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "522:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "522:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "565:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "565:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "527:37:13",
																			"nodeType": "YulIdentifier",
																			"src": "527:37:13"
																		},
																		"nativeSrc": "527:44:13",
																		"nodeType": "YulFunctionCall",
																		"src": "527:44:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "515:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:13"
																},
																"nativeSrc": "515:57:13",
																"nodeType": "YulFunctionCall",
																"src": "515:57:13"
															},
															"nativeSrc": "515:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "515:57:13"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "433:145:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "500:3:13",
														"nodeType": "YulTypedName",
														"src": "500:3:13",
														"type": ""
													}
												],
												"src": "433:145:13"
											},
											{
												"body": {
													"nativeSrc": "689:131:13",
													"nodeType": "YulBlock",
													"src": "689:131:13",
													"statements": [
														{
															"nativeSrc": "699:26:13",
															"nodeType": "YulAssignment",
															"src": "699:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "711:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "711:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "722:2:13",
																		"nodeType": "YulLiteral",
																		"src": "722:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "707:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "707:3:13"
																},
																"nativeSrc": "707:18:13",
																"nodeType": "YulFunctionCall",
																"src": "707:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "699:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "699:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "786:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "786:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "799:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "799:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "810:1:13",
																				"nodeType": "YulLiteral",
																				"src": "810:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "795:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "795:3:13"
																		},
																		"nativeSrc": "795:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "795:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "735:50:13",
																	"nodeType": "YulIdentifier",
																	"src": "735:50:13"
																},
																"nativeSrc": "735:78:13",
																"nodeType": "YulFunctionCall",
																"src": "735:78:13"
															},
															"nativeSrc": "735:78:13",
															"nodeType": "YulExpressionStatement",
															"src": "735:78:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "584:236:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "661:9:13",
														"nodeType": "YulTypedName",
														"src": "661:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "673:6:13",
														"nodeType": "YulTypedName",
														"src": "673:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "684:4:13",
														"nodeType": "YulTypedName",
														"src": "684:4:13",
														"type": ""
													}
												],
												"src": "584:236:13"
											},
											{
												"body": {
													"nativeSrc": "871:81:13",
													"nodeType": "YulBlock",
													"src": "871:81:13",
													"statements": [
														{
															"nativeSrc": "881:65:13",
															"nodeType": "YulAssignment",
															"src": "881:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "896:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "896:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "903:42:13",
																		"nodeType": "YulLiteral",
																		"src": "903:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "892:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "892:3:13"
																},
																"nativeSrc": "892:54:13",
																"nodeType": "YulFunctionCall",
																"src": "892:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "881:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "826:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "853:5:13",
														"nodeType": "YulTypedName",
														"src": "853:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "863:7:13",
														"nodeType": "YulTypedName",
														"src": "863:7:13",
														"type": ""
													}
												],
												"src": "826:126:13"
											},
											{
												"body": {
													"nativeSrc": "1003:51:13",
													"nodeType": "YulBlock",
													"src": "1003:51:13",
													"statements": [
														{
															"nativeSrc": "1013:35:13",
															"nodeType": "YulAssignment",
															"src": "1013:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1042:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1042:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1024:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "1024:17:13"
																},
																"nativeSrc": "1024:24:13",
																"nodeType": "YulFunctionCall",
																"src": "1024:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1013:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1013:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "958:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "985:5:13",
														"nodeType": "YulTypedName",
														"src": "985:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "995:7:13",
														"nodeType": "YulTypedName",
														"src": "995:7:13",
														"type": ""
													}
												],
												"src": "958:96:13"
											},
											{
												"body": {
													"nativeSrc": "1125:53:13",
													"nodeType": "YulBlock",
													"src": "1125:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1142:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1142:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1165:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1165:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1147:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1147:17:13"
																		},
																		"nativeSrc": "1147:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1147:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1135:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1135:6:13"
																},
																"nativeSrc": "1135:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1135:37:13"
															},
															"nativeSrc": "1135:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1135:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1060:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1113:5:13",
														"nodeType": "YulTypedName",
														"src": "1113:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1120:3:13",
														"nodeType": "YulTypedName",
														"src": "1120:3:13",
														"type": ""
													}
												],
												"src": "1060:118:13"
											},
											{
												"body": {
													"nativeSrc": "1282:124:13",
													"nodeType": "YulBlock",
													"src": "1282:124:13",
													"statements": [
														{
															"nativeSrc": "1292:26:13",
															"nodeType": "YulAssignment",
															"src": "1292:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1304:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1304:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1315:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1315:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1300:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:13"
																},
																"nativeSrc": "1300:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1300:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1292:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1292:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1372:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1372:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1385:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1385:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1396:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1396:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1381:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1381:3:13"
																		},
																		"nativeSrc": "1381:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1381:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1328:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1328:43:13"
																},
																"nativeSrc": "1328:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1328:71:13"
															},
															"nativeSrc": "1328:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1328:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1184:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1254:9:13",
														"nodeType": "YulTypedName",
														"src": "1254:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1266:6:13",
														"nodeType": "YulTypedName",
														"src": "1266:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1277:4:13",
														"nodeType": "YulTypedName",
														"src": "1277:4:13",
														"type": ""
													}
												],
												"src": "1184:222:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff16815250348015610042575f80fd5b506100523361005760201b60201c565b610522565b5f6100666101f260201b60201c565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156100ae5750825b90505f60018367ffffffffffffffff161480156100e157505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156100ef575080155b15610126576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610173576001855f0160086101000a81548160ff0219169083151502179055505b6101828661020b60201b60201c565b61019061022b60201b60201c565b83156101ea575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516101e191906104b1565b60405180910390a15b505050505050565b5f8061020261023b60201b60201c565b90508091505090565b61021961026460201b60201c565b610228816102aa60201b60201c565b50565b61023961026460201b60201c565b565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b61027261033a60201b60201c565b6102a8576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6102b861026460201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610328575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161031f9190610509565b60405180910390fd5b6103378161035e60201b60201c565b50565b5f6103496101f260201b60201c565b5f0160089054906101000a900460ff16905090565b5f61036d61043560201b60201c565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61049b6104966104918461045c565b610478565b610465565b9050919050565b6104ab81610481565b82525050565b5f6020820190506104c45f8301846104a2565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104f3826104ca565b9050919050565b610503816104e9565b82525050565b5f60208201905061051c5f8301846104fa565b92915050565b60805161149e6105485f395f818161074f015281816107a4015261095e015261149e5ff3fe608060405260043610610090575f3560e01c8063a9059cbb11610058578063a9059cbb14610142578063ad3cb1cc1461016a578063d0e30db014610194578063f2fde38b1461019e578063f8b2cb4f146101c657610090565b80632e1a7d4d146100945780634f1ef286146100bc57806352d1902d146100d8578063715018a6146101025780638da5cb5b14610118575b5f80fd5b34801561009f575f80fd5b506100ba60048036038101906100b59190610ed1565b610202565b005b6100d660048036038101906100d19190611092565b610368565b005b3480156100e3575f80fd5b506100ec610387565b6040516100f99190611104565b60405180910390f35b34801561010d575f80fd5b506101166103b8565b005b348015610123575f80fd5b5061012c6103cb565b604051610139919061112c565b60405180910390f35b34801561014d575f80fd5b5061016860048036038101906101639190611145565b610400565b005b348015610175575f80fd5b5061017e610567565b60405161018b91906111e3565b60405180910390f35b61019c6105a0565b005b3480156101a9575f80fd5b506101c460048036038101906101bf9190611203565b610684565b005b3480156101d1575f80fd5b506101ec60048036038101906101e79190611203565b610708565b6040516101f9919061123d565b60405180910390f35b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610281576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610278906112a0565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102cc91906112eb565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610316573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161035d919061123d565b60405180910390a250565b61037061074d565b61037982610833565b610383828261083e565b5050565b5f61039061095c565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b6103c06109e3565b6103c95f610a6a565b565b5f806103d5610b3b565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561047f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610476906112a0565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104ca91906112eb565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610514573d5f803e3d5ffd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161055b919061123d565b60405180910390a25050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b5f34116105e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d990611368565b60405180910390fd5b345f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461062d9190611386565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c43460405161067a919061123d565b60405180910390a2565b61068c6109e3565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106fc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106f3919061112c565b60405180910390fd5b61070581610a6a565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614806107fa57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166107e1610b62565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610831576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61083b6109e3565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156108a657506040513d601f19601f820116820180604052508101906108a391906113e3565b60015b6108e757816040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016108de919061112c565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b811461094d57806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016109449190611104565b60405180910390fd5b6109578383610bb5565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146109e1576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6109eb610c27565b73ffffffffffffffffffffffffffffffffffffffff16610a096103cb565b73ffffffffffffffffffffffffffffffffffffffff1614610a6857610a2c610c27565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a5f919061112c565b60405180910390fd5b565b5f610a73610b3b565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f610b8e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b610c2e565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610bbe82610c37565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f81511115610c1a57610c148282610d00565b50610c23565b610c22610d80565b5b5050565b5f33905090565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b03610c9257806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610c89919061112c565b60405180910390fd5b80610cbe7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b610c2e565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff1684604051610d299190611452565b5f60405180830381855af49150503d805f8114610d61576040519150601f19603f3d011682016040523d82523d5f602084013e610d66565b606091505b5091509150610d76858383610dbc565b9250505092915050565b5f341115610dba576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b606082610dd157610dcc82610e49565b610e41565b5f8251148015610df757505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610e3957836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610e30919061112c565b60405180910390fd5b819050610e42565b5b9392505050565b5f81511115610e5b5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b610eb081610e9e565b8114610eba575f80fd5b50565b5f81359050610ecb81610ea7565b92915050565b5f60208284031215610ee657610ee5610e96565b5b5f610ef384828501610ebd565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f2582610efc565b9050919050565b610f3581610f1b565b8114610f3f575f80fd5b50565b5f81359050610f5081610f2c565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610fa482610f5e565b810181811067ffffffffffffffff82111715610fc357610fc2610f6e565b5b80604052505050565b5f610fd5610e8d565b9050610fe18282610f9b565b919050565b5f67ffffffffffffffff82111561100057610fff610f6e565b5b61100982610f5e565b9050602081019050919050565b828183375f83830152505050565b5f61103661103184610fe6565b610fcc565b90508281526020810184848401111561105257611051610f5a565b5b61105d848285611016565b509392505050565b5f82601f83011261107957611078610f56565b5b8135611089848260208601611024565b91505092915050565b5f80604083850312156110a8576110a7610e96565b5b5f6110b585828601610f42565b925050602083013567ffffffffffffffff8111156110d6576110d5610e9a565b5b6110e285828601611065565b9150509250929050565b5f819050919050565b6110fe816110ec565b82525050565b5f6020820190506111175f8301846110f5565b92915050565b61112681610f1b565b82525050565b5f60208201905061113f5f83018461111d565b92915050565b5f806040838503121561115b5761115a610e96565b5b5f61116885828601610f42565b925050602061117985828601610ebd565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f6111b582611183565b6111bf818561118d565b93506111cf81856020860161119d565b6111d881610f5e565b840191505092915050565b5f6020820190508181035f8301526111fb81846111ab565b905092915050565b5f6020828403121561121857611217610e96565b5b5f61122584828501610f42565b91505092915050565b61123781610e9e565b82525050565b5f6020820190506112505f83018461122e565b92915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f61128a60148361118d565b915061129582611256565b602082019050919050565b5f6020820190508181035f8301526112b78161127e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6112f582610e9e565b915061130083610e9e565b9250828203905081811115611318576113176112be565b5b92915050565b7f4d7573742073656e6420455448000000000000000000000000000000000000005f82015250565b5f611352600d8361118d565b915061135d8261131e565b602082019050919050565b5f6020820190508181035f83015261137f81611346565b9050919050565b5f61139082610e9e565b915061139b83610e9e565b92508282019050808211156113b3576113b26112be565b5b92915050565b6113c2816110ec565b81146113cc575f80fd5b50565b5f815190506113dd816113b9565b92915050565b5f602082840312156113f8576113f7610e96565b5b5f611405848285016113cf565b91505092915050565b5f81519050919050565b5f81905092915050565b5f61142c8261140e565b6114368185611418565b935061144681856020860161119d565b80840191505092915050565b5f61145d8284611422565b91508190509291505056fea2646970667358221220cb213de6a705fca07ba3a58ea560471395dd5d65262d584e6d08981d5fc7166764736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x52 CALLER PUSH2 0x57 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH0 PUSH2 0x66 PUSH2 0x1F2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAE JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xE1 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xEF JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x126 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x173 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x182 DUP7 PUSH2 0x20B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x190 PUSH2 0x22B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1EA JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x202 PUSH2 0x23B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x219 PUSH2 0x264 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x228 DUP2 PUSH2 0x2AA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x239 PUSH2 0x264 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x33A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x264 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x328 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x337 DUP2 PUSH2 0x35E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x349 PUSH2 0x1F2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x36D PUSH2 0x435 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x49B PUSH2 0x496 PUSH2 0x491 DUP5 PUSH2 0x45C JUMP JUMPDEST PUSH2 0x478 JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AB DUP2 PUSH2 0x481 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C4 PUSH0 DUP4 ADD DUP5 PUSH2 0x4A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4F3 DUP3 PUSH2 0x4CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x503 DUP2 PUSH2 0x4E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x51C PUSH0 DUP4 ADD DUP5 PUSH2 0x4FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x149E PUSH2 0x548 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x74F ADD MSTORE DUP2 DUP2 PUSH2 0x7A4 ADD MSTORE PUSH2 0x95E ADD MSTORE PUSH2 0x149E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9059CBB GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x1C6 JUMPI PUSH2 0x90 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x118 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1092 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH2 0x3B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x112C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x175 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH2 0x5A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x281 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x278 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x316 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x370 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x379 DUP3 PUSH2 0x833 JUMP JUMPDEST PUSH2 0x383 DUP3 DUP3 PUSH2 0x83E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x390 PUSH2 0x95C JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3C0 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x3C9 PUSH0 PUSH2 0xA6A JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3D5 PUSH2 0xB3B JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x514 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D9 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x1386 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x68C PUSH2 0x9E3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6FC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x112C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x705 DUP2 PUSH2 0xA6A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x7FA JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7E1 PUSH2 0xB62 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x83B PUSH2 0x9E3 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8A6 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x8E7 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DE SWAP2 SWAP1 PUSH2 0x112C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x94D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x944 SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x957 DUP4 DUP4 PUSH2 0xBB5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x9EB PUSH2 0xC27 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA09 PUSH2 0x3CB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA68 JUMPI PUSH2 0xA2C PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5F SWAP2 SWAP1 PUSH2 0x112C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xA73 PUSH2 0xB3B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xB8E PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0xC2E JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBBE DUP3 PUSH2 0xC37 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xC1A JUMPI PUSH2 0xC14 DUP3 DUP3 PUSH2 0xD00 JUMP JUMPDEST POP PUSH2 0xC23 JUMP JUMPDEST PUSH2 0xC22 PUSH2 0xD80 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0xC92 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC89 SWAP2 SWAP1 PUSH2 0x112C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xCBE PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0xC2E JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xD29 SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD61 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xD76 DUP6 DUP4 DUP4 PUSH2 0xDBC JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0xDBA JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xDD1 JUMPI PUSH2 0xDCC DUP3 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0xE41 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xDF7 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xE39 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE30 SWAP2 SWAP1 PUSH2 0x112C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xE42 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xE5B JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB0 DUP2 PUSH2 0xE9E JUMP JUMPDEST DUP2 EQ PUSH2 0xEBA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xECB DUP2 PUSH2 0xEA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE6 JUMPI PUSH2 0xEE5 PUSH2 0xE96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEF3 DUP5 DUP3 DUP6 ADD PUSH2 0xEBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF25 DUP3 PUSH2 0xEFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF35 DUP2 PUSH2 0xF1B JUMP JUMPDEST DUP2 EQ PUSH2 0xF3F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF50 DUP2 PUSH2 0xF2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xFA4 DUP3 PUSH2 0xF5E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xFC3 JUMPI PUSH2 0xFC2 PUSH2 0xF6E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFD5 PUSH2 0xE8D JUMP JUMPDEST SWAP1 POP PUSH2 0xFE1 DUP3 DUP3 PUSH2 0xF9B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1000 JUMPI PUSH2 0xFFF PUSH2 0xF6E JUMP JUMPDEST JUMPDEST PUSH2 0x1009 DUP3 PUSH2 0xF5E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1036 PUSH2 0x1031 DUP5 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1052 JUMPI PUSH2 0x1051 PUSH2 0xF5A JUMP JUMPDEST JUMPDEST PUSH2 0x105D DUP5 DUP3 DUP6 PUSH2 0x1016 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1079 JUMPI PUSH2 0x1078 PUSH2 0xF56 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1089 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1024 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10A8 JUMPI PUSH2 0x10A7 PUSH2 0xE96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10B5 DUP6 DUP3 DUP7 ADD PUSH2 0xF42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D6 JUMPI PUSH2 0x10D5 PUSH2 0xE9A JUMP JUMPDEST JUMPDEST PUSH2 0x10E2 DUP6 DUP3 DUP7 ADD PUSH2 0x1065 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10FE DUP2 PUSH2 0x10EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1117 PUSH0 DUP4 ADD DUP5 PUSH2 0x10F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1126 DUP2 PUSH2 0xF1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x113F PUSH0 DUP4 ADD DUP5 PUSH2 0x111D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x115B JUMPI PUSH2 0x115A PUSH2 0xE96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1168 DUP6 DUP3 DUP7 ADD PUSH2 0xF42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1179 DUP6 DUP3 DUP7 ADD PUSH2 0xEBD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11B5 DUP3 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x11BF DUP2 DUP6 PUSH2 0x118D JUMP JUMPDEST SWAP4 POP PUSH2 0x11CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x119D JUMP JUMPDEST PUSH2 0x11D8 DUP2 PUSH2 0xF5E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11FB DUP2 DUP5 PUSH2 0x11AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1218 JUMPI PUSH2 0x1217 PUSH2 0xE96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1225 DUP5 DUP3 DUP6 ADD PUSH2 0xF42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1237 DUP2 PUSH2 0xE9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1250 PUSH0 DUP4 ADD DUP5 PUSH2 0x122E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x128A PUSH1 0x14 DUP4 PUSH2 0x118D JUMP JUMPDEST SWAP2 POP PUSH2 0x1295 DUP3 PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12B7 DUP2 PUSH2 0x127E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x12F5 DUP3 PUSH2 0xE9E JUMP JUMPDEST SWAP2 POP PUSH2 0x1300 DUP4 PUSH2 0xE9E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1318 JUMPI PUSH2 0x1317 PUSH2 0x12BE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642045544800000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1352 PUSH1 0xD DUP4 PUSH2 0x118D JUMP JUMPDEST SWAP2 POP PUSH2 0x135D DUP3 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x137F DUP2 PUSH2 0x1346 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1390 DUP3 PUSH2 0xE9E JUMP JUMPDEST SWAP2 POP PUSH2 0x139B DUP4 PUSH2 0xE9E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x13B3 JUMPI PUSH2 0x13B2 PUSH2 0x12BE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C2 DUP2 PUSH2 0x10EC JUMP JUMPDEST DUP2 EQ PUSH2 0x13CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x13DD DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F8 JUMPI PUSH2 0x13F7 PUSH2 0xE96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1405 DUP5 DUP3 DUP6 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x142C DUP3 PUSH2 0x140E JUMP JUMPDEST PUSH2 0x1436 DUP2 DUP6 PUSH2 0x1418 JUMP JUMPDEST SWAP4 POP PUSH2 0x1446 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x119D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x145D DUP3 DUP5 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0x21 RETURNDATASIZE 0xE6 0xA7 SDIV 0xFC LOG0 PUSH28 0xA3A58EA560471395DD5D65262D584E6D08981D5FC7166764736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "319:1594:1:-:0;;;1171:4:4;1128:48;;;;;;;;;576:56:1;;;;;;;;;;601:23;613:10;601:11;;;:23;;:::i;:::-;319:1594;;640:131;4158:30:3;4191:26;:24;;;:26;;:::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;707:21:1::1;722:5;707:14;;;:21;;:::i;:::-;739:24;:22;;;:24;;:::i;:::-;5068:14:3::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;640:131:1;:::o;9071:205:3:-;9129:30;9171:12;9186:27;:25;;;:27;;:::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;1847:127:2:-;6929:20:3;:18;;;:20;;:::i;:::-;1929:38:2::1;1954:12;1929:24;;;:38;;:::i;:::-;1847:127:::0;:::o;2970:67:4:-;6929:20:3;:18;;;:20;;:::i;:::-;2970:67:4:o;8819:122:3:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7082:141::-;7149:17;:15;;;:17;;:::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;1980:235:2:-;6929:20:3;:18;;;:20;;:::i;:::-;2100:1:2::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;;;:32;;:::i;:::-;1980:235:::0;:::o;8485:120:3:-;8535:4;8558:26;:24;;;:26;;:::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;3774:248:2:-;3847:24;3874:20;:18;;;:20;;:::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;7:85:13:-;52:7;81:5;70:16;;7:85;;;:::o;98:101::-;134:7;174:18;167:5;163:30;152:41;;98:101;;;:::o;205:60::-;233:3;254:5;247:12;;205:60;;;:::o;271:156::-;328:9;361:60;378:42;387:32;413:5;387:32;:::i;:::-;378:42;:::i;:::-;361:60;:::i;:::-;348:73;;271:156;;;:::o;433:145::-;527:44;565:5;527:44;:::i;:::-;522:3;515:57;433:145;;:::o;584:236::-;684:4;722:2;711:9;707:18;699:26;;735:78;810:1;799:9;795:17;786:6;735:78;:::i;:::-;584:236;;;;:::o;826:126::-;863:7;903:42;896:5;892:54;881:65;;826:126;;;:::o;958:96::-;995:7;1024:24;1042:5;1024:24;:::i;:::-;1013:35;;958:96;;;:::o;1060:118::-;1147:24;1165:5;1147:24;:::i;:::-;1142:3;1135:37;1060:118;;:::o;1184:222::-;1277:4;1315:2;1304:9;1300:18;1292:26;;1328:71;1396:1;1385:9;1381:17;1372:6;1328:71;:::i;:::-;1184:222;;;;:::o;319:1594:1:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_686": {
									"entryPoint": 1383,
									"id": 686,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_80": {
									"entryPoint": 2099,
									"id": 80,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkNonPayable_1214": {
									"entryPoint": 3456,
									"id": 1214,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_792": {
									"entryPoint": 2396,
									"id": 792,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_322": {
									"entryPoint": 2531,
									"id": 322,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_776": {
									"entryPoint": 1869,
									"id": 776,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getOwnableStorage_225": {
									"entryPoint": 2875,
									"id": 225,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_872": {
									"entryPoint": 3111,
									"id": 872,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1484": {
									"entryPoint": 3657,
									"id": 1484,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_994": {
									"entryPoint": 3127,
									"id": 994,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_393": {
									"entryPoint": 2666,
									"id": 393,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_843": {
									"entryPoint": 2110,
									"id": 843,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deposit_108": {
									"entryPoint": 1440,
									"id": 108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1402": {
									"entryPoint": 3328,
									"id": 1402,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1542": {
									"entryPoint": 3118,
									"id": 1542,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalance_160": {
									"entryPoint": 1800,
									"id": 160,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_967": {
									"entryPoint": 2914,
									"id": 967,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_305": {
									"entryPoint": 971,
									"id": 305,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_734": {
									"entryPoint": 903,
									"id": 734,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_336": {
									"entryPoint": 952,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_364": {
									"entryPoint": 1668,
									"id": 364,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_198": {
									"entryPoint": 1024,
									"id": 198,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1030": {
									"entryPoint": 2997,
									"id": 1030,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_754": {
									"entryPoint": 872,
									"id": 754,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1442": {
									"entryPoint": 3516,
									"id": 1442,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_147": {
									"entryPoint": 514,
									"id": 147,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 4132,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 5071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 4197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 4242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 5091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 4341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 4356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3725,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 4070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 5134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 4118,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4509,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 3995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4798,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3950,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3926,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 3930,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3738,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3734,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 4694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480": {
									"entryPoint": 4894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11565:13",
										"nodeType": "YulBlock",
										"src": "0:11565:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:32:13",
													"nodeType": "YulBlock",
													"src": "379:32:13",
													"statements": [
														{
															"nativeSrc": "389:16:13",
															"nodeType": "YulAssignment",
															"src": "389:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:13",
																"nodeType": "YulIdentifier",
																"src": "400:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:77:13"
											},
											{
												"body": {
													"nativeSrc": "460:79:13",
													"nodeType": "YulBlock",
													"src": "460:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:13",
																"nodeType": "YulBlock",
																"src": "517:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:13",
																					"nodeType": "YulLiteral",
																					"src": "526:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:13",
																					"nodeType": "YulLiteral",
																					"src": "529:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:13"
																			},
																			"nativeSrc": "519:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:13"
																		},
																		"nativeSrc": "519:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:13"
																				},
																				"nativeSrc": "490:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:13"
																		},
																		"nativeSrc": "480:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:13"
																},
																"nativeSrc": "473:43:13",
																"nodeType": "YulFunctionCall",
																"src": "473:43:13"
															},
															"nativeSrc": "470:63:13",
															"nodeType": "YulIf",
															"src": "470:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:13",
														"nodeType": "YulTypedName",
														"src": "453:5:13",
														"type": ""
													}
												],
												"src": "417:122:13"
											},
											{
												"body": {
													"nativeSrc": "597:87:13",
													"nodeType": "YulBlock",
													"src": "597:87:13",
													"statements": [
														{
															"nativeSrc": "607:29:13",
															"nodeType": "YulAssignment",
															"src": "607:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:13"
																},
																"nativeSrc": "616:20:13",
																"nodeType": "YulFunctionCall",
																"src": "616:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:13"
																},
																"nativeSrc": "645:33:13",
																"nodeType": "YulFunctionCall",
																"src": "645:33:13"
															},
															"nativeSrc": "645:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:13",
														"nodeType": "YulTypedName",
														"src": "575:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:13",
														"nodeType": "YulTypedName",
														"src": "583:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:13",
														"nodeType": "YulTypedName",
														"src": "591:5:13",
														"type": ""
													}
												],
												"src": "545:139:13"
											},
											{
												"body": {
													"nativeSrc": "756:263:13",
													"nodeType": "YulBlock",
													"src": "756:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:13",
																"nodeType": "YulBlock",
																"src": "802:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:13"
																			},
																			"nativeSrc": "804:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:13"
																		},
																		"nativeSrc": "804:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:13"
																		},
																		"nativeSrc": "773:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:13",
																		"nodeType": "YulLiteral",
																		"src": "798:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:13"
																},
																"nativeSrc": "769:32:13",
																"nodeType": "YulFunctionCall",
																"src": "769:32:13"
															},
															"nativeSrc": "766:119:13",
															"nodeType": "YulIf",
															"src": "766:119:13"
														},
														{
															"nativeSrc": "895:117:13",
															"nodeType": "YulBlock",
															"src": "895:117:13",
															"statements": [
																{
																	"nativeSrc": "910:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:13",
																		"nodeType": "YulLiteral",
																		"src": "924:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:13",
																			"nodeType": "YulTypedName",
																			"src": "914:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:13",
																	"nodeType": "YulAssignment",
																	"src": "939:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:13"
																				},
																				"nativeSrc": "970:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:13"
																		},
																		"nativeSrc": "949:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:13",
														"nodeType": "YulTypedName",
														"src": "726:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:13",
														"nodeType": "YulTypedName",
														"src": "737:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:13",
														"nodeType": "YulTypedName",
														"src": "749:6:13",
														"type": ""
													}
												],
												"src": "690:329:13"
											},
											{
												"body": {
													"nativeSrc": "1070:81:13",
													"nodeType": "YulBlock",
													"src": "1070:81:13",
													"statements": [
														{
															"nativeSrc": "1080:65:13",
															"nodeType": "YulAssignment",
															"src": "1080:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:13",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:13"
																},
																"nativeSrc": "1091:54:13",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:13",
														"nodeType": "YulTypedName",
														"src": "1052:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:13",
														"nodeType": "YulTypedName",
														"src": "1062:7:13",
														"type": ""
													}
												],
												"src": "1025:126:13"
											},
											{
												"body": {
													"nativeSrc": "1202:51:13",
													"nodeType": "YulBlock",
													"src": "1202:51:13",
													"statements": [
														{
															"nativeSrc": "1212:35:13",
															"nodeType": "YulAssignment",
															"src": "1212:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1241:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1223:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:13"
																},
																"nativeSrc": "1223:24:13",
																"nodeType": "YulFunctionCall",
																"src": "1223:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1157:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:13",
														"nodeType": "YulTypedName",
														"src": "1184:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:13",
														"nodeType": "YulTypedName",
														"src": "1194:7:13",
														"type": ""
													}
												],
												"src": "1157:96:13"
											},
											{
												"body": {
													"nativeSrc": "1302:79:13",
													"nodeType": "YulBlock",
													"src": "1302:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1359:16:13",
																"nodeType": "YulBlock",
																"src": "1359:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1368:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1371:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1361:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:13"
																			},
																			"nativeSrc": "1361:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:13"
																		},
																		"nativeSrc": "1361:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1325:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1350:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1332:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:13"
																				},
																				"nativeSrc": "1332:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1322:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:13"
																		},
																		"nativeSrc": "1322:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1315:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:13"
																},
																"nativeSrc": "1315:43:13",
																"nodeType": "YulFunctionCall",
																"src": "1315:43:13"
															},
															"nativeSrc": "1312:63:13",
															"nodeType": "YulIf",
															"src": "1312:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1259:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1295:5:13",
														"nodeType": "YulTypedName",
														"src": "1295:5:13",
														"type": ""
													}
												],
												"src": "1259:122:13"
											},
											{
												"body": {
													"nativeSrc": "1439:87:13",
													"nodeType": "YulBlock",
													"src": "1439:87:13",
													"statements": [
														{
															"nativeSrc": "1449:29:13",
															"nodeType": "YulAssignment",
															"src": "1449:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1471:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1458:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:13"
																},
																"nativeSrc": "1458:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1458:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1449:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1514:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1487:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:13"
																},
																"nativeSrc": "1487:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1487:33:13"
															},
															"nativeSrc": "1487:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1387:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1417:6:13",
														"nodeType": "YulTypedName",
														"src": "1417:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1425:3:13",
														"nodeType": "YulTypedName",
														"src": "1425:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1433:5:13",
														"nodeType": "YulTypedName",
														"src": "1433:5:13",
														"type": ""
													}
												],
												"src": "1387:139:13"
											},
											{
												"body": {
													"nativeSrc": "1621:28:13",
													"nodeType": "YulBlock",
													"src": "1621:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1638:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1638:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1641:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1641:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1631:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1631:6:13"
																},
																"nativeSrc": "1631:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1631:12:13"
															},
															"nativeSrc": "1631:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1631:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1532:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1532:117:13"
											},
											{
												"body": {
													"nativeSrc": "1744:28:13",
													"nodeType": "YulBlock",
													"src": "1744:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1761:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1761:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1764:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1754:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1754:6:13"
																},
																"nativeSrc": "1754:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1754:12:13"
															},
															"nativeSrc": "1754:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1754:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "1655:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1655:117:13"
											},
											{
												"body": {
													"nativeSrc": "1826:54:13",
													"nodeType": "YulBlock",
													"src": "1826:54:13",
													"statements": [
														{
															"nativeSrc": "1836:38:13",
															"nodeType": "YulAssignment",
															"src": "1836:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1854:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1854:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1861:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1861:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1850:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1850:3:13"
																		},
																		"nativeSrc": "1850:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1850:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1870:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1870:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1866:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1866:3:13"
																		},
																		"nativeSrc": "1866:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1846:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1846:3:13"
																},
																"nativeSrc": "1846:28:13",
																"nodeType": "YulFunctionCall",
																"src": "1846:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1836:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1778:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1809:5:13",
														"nodeType": "YulTypedName",
														"src": "1809:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1819:6:13",
														"nodeType": "YulTypedName",
														"src": "1819:6:13",
														"type": ""
													}
												],
												"src": "1778:102:13"
											},
											{
												"body": {
													"nativeSrc": "1914:152:13",
													"nodeType": "YulBlock",
													"src": "1914:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1931:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1931:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1934:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1934:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1924:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1924:6:13"
																},
																"nativeSrc": "1924:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1924:88:13"
															},
															"nativeSrc": "1924:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1924:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2028:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2028:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2031:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2031:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2021:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2021:6:13"
																},
																"nativeSrc": "2021:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2021:15:13"
															},
															"nativeSrc": "2021:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2021:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2052:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2052:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2055:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2055:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2045:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2045:6:13"
																},
																"nativeSrc": "2045:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2045:15:13"
															},
															"nativeSrc": "2045:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2045:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1886:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1886:180:13"
											},
											{
												"body": {
													"nativeSrc": "2115:238:13",
													"nodeType": "YulBlock",
													"src": "2115:238:13",
													"statements": [
														{
															"nativeSrc": "2125:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2125:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2147:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2147:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "2177:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2177:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2155:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2155:21:13"
																		},
																		"nativeSrc": "2155:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2155:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2143:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2143:3:13"
																},
																"nativeSrc": "2143:40:13",
																"nodeType": "YulFunctionCall",
																"src": "2143:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2129:10:13",
																	"nodeType": "YulTypedName",
																	"src": "2129:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2294:22:13",
																"nodeType": "YulBlock",
																"src": "2294:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2296:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "2296:16:13"
																			},
																			"nativeSrc": "2296:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2296:18:13"
																		},
																		"nativeSrc": "2296:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2296:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2237:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "2237:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2249:18:13",
																				"nodeType": "YulLiteral",
																				"src": "2249:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2234:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2234:2:13"
																		},
																		"nativeSrc": "2234:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2234:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2273:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "2273:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2285:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2285:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2270:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2270:2:13"
																		},
																		"nativeSrc": "2270:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2270:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2231:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2231:2:13"
																},
																"nativeSrc": "2231:62:13",
																"nodeType": "YulFunctionCall",
																"src": "2231:62:13"
															},
															"nativeSrc": "2228:88:13",
															"nodeType": "YulIf",
															"src": "2228:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2332:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2332:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2336:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "2336:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2325:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2325:6:13"
																},
																"nativeSrc": "2325:22:13",
																"nodeType": "YulFunctionCall",
																"src": "2325:22:13"
															},
															"nativeSrc": "2325:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "2325:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "2072:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2101:6:13",
														"nodeType": "YulTypedName",
														"src": "2101:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "2109:4:13",
														"nodeType": "YulTypedName",
														"src": "2109:4:13",
														"type": ""
													}
												],
												"src": "2072:281:13"
											},
											{
												"body": {
													"nativeSrc": "2400:88:13",
													"nodeType": "YulBlock",
													"src": "2400:88:13",
													"statements": [
														{
															"nativeSrc": "2410:30:13",
															"nodeType": "YulAssignment",
															"src": "2410:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "2420:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2420:18:13"
																},
																"nativeSrc": "2420:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2420:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2410:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2410:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2469:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2469:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "2477:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2477:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "2449:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "2449:19:13"
																},
																"nativeSrc": "2449:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2449:33:13"
															},
															"nativeSrc": "2449:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2449:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2359:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2384:4:13",
														"nodeType": "YulTypedName",
														"src": "2384:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2393:6:13",
														"nodeType": "YulTypedName",
														"src": "2393:6:13",
														"type": ""
													}
												],
												"src": "2359:129:13"
											},
											{
												"body": {
													"nativeSrc": "2560:241:13",
													"nodeType": "YulBlock",
													"src": "2560:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2665:22:13",
																"nodeType": "YulBlock",
																"src": "2665:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2667:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "2667:16:13"
																			},
																			"nativeSrc": "2667:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2667:18:13"
																		},
																		"nativeSrc": "2667:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2667:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2637:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2637:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2645:18:13",
																		"nodeType": "YulLiteral",
																		"src": "2645:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2634:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2634:2:13"
																},
																"nativeSrc": "2634:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2634:30:13"
															},
															"nativeSrc": "2631:56:13",
															"nodeType": "YulIf",
															"src": "2631:56:13"
														},
														{
															"nativeSrc": "2697:37:13",
															"nodeType": "YulAssignment",
															"src": "2697:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2727:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2727:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2705:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "2705:21:13"
																},
																"nativeSrc": "2705:29:13",
																"nodeType": "YulFunctionCall",
																"src": "2705:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2697:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2697:4:13"
																}
															]
														},
														{
															"nativeSrc": "2771:23:13",
															"nodeType": "YulAssignment",
															"src": "2771:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2783:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2783:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2789:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2779:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2779:3:13"
																},
																"nativeSrc": "2779:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2779:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2771:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2771:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "2494:307:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2544:6:13",
														"nodeType": "YulTypedName",
														"src": "2544:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2555:4:13",
														"nodeType": "YulTypedName",
														"src": "2555:4:13",
														"type": ""
													}
												],
												"src": "2494:307:13"
											},
											{
												"body": {
													"nativeSrc": "2871:84:13",
													"nodeType": "YulBlock",
													"src": "2871:84:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2895:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2895:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2900:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2900:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2905:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2905:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2882:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2882:12:13"
																},
																"nativeSrc": "2882:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2882:30:13"
															},
															"nativeSrc": "2882:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "2882:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2932:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2932:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2937:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2937:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2928:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2928:3:13"
																		},
																		"nativeSrc": "2928:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2928:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2946:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2946:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2921:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2921:6:13"
																},
																"nativeSrc": "2921:27:13",
																"nodeType": "YulFunctionCall",
																"src": "2921:27:13"
															},
															"nativeSrc": "2921:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "2921:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "2807:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2853:3:13",
														"nodeType": "YulTypedName",
														"src": "2853:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2858:3:13",
														"nodeType": "YulTypedName",
														"src": "2858:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2863:6:13",
														"nodeType": "YulTypedName",
														"src": "2863:6:13",
														"type": ""
													}
												],
												"src": "2807:148:13"
											},
											{
												"body": {
													"nativeSrc": "3044:340:13",
													"nodeType": "YulBlock",
													"src": "3044:340:13",
													"statements": [
														{
															"nativeSrc": "3054:74:13",
															"nodeType": "YulAssignment",
															"src": "3054:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3120:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3120:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "3079:40:13",
																			"nodeType": "YulIdentifier",
																			"src": "3079:40:13"
																		},
																		"nativeSrc": "3079:48:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3079:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3063:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "3063:15:13"
																},
																"nativeSrc": "3063:65:13",
																"nodeType": "YulFunctionCall",
																"src": "3063:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3054:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3054:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3144:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3144:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3151:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3151:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3137:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3137:6:13"
																},
																"nativeSrc": "3137:21:13",
																"nodeType": "YulFunctionCall",
																"src": "3137:21:13"
															},
															"nativeSrc": "3137:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "3137:21:13"
														},
														{
															"nativeSrc": "3167:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3167:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3182:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3182:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3189:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3189:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3178:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3178:3:13"
																},
																"nativeSrc": "3178:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3178:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "3171:3:13",
																	"nodeType": "YulTypedName",
																	"src": "3171:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3232:83:13",
																"nodeType": "YulBlock",
																"src": "3232:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "3234:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3234:77:13"
																			},
																			"nativeSrc": "3234:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3234:79:13"
																		},
																		"nativeSrc": "3234:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3234:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "3213:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3213:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3218:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3218:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3209:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3209:3:13"
																		},
																		"nativeSrc": "3209:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3209:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3227:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3227:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3206:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3206:2:13"
																},
																"nativeSrc": "3206:25:13",
																"nodeType": "YulFunctionCall",
																"src": "3206:25:13"
															},
															"nativeSrc": "3203:112:13",
															"nodeType": "YulIf",
															"src": "3203:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3361:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3361:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "3366:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3366:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3371:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3371:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "3324:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "3324:36:13"
																},
																"nativeSrc": "3324:54:13",
																"nodeType": "YulFunctionCall",
																"src": "3324:54:13"
															},
															"nativeSrc": "3324:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "3324:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "2961:423:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3017:3:13",
														"nodeType": "YulTypedName",
														"src": "3017:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3022:6:13",
														"nodeType": "YulTypedName",
														"src": "3022:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3030:3:13",
														"nodeType": "YulTypedName",
														"src": "3030:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3038:5:13",
														"nodeType": "YulTypedName",
														"src": "3038:5:13",
														"type": ""
													}
												],
												"src": "2961:423:13"
											},
											{
												"body": {
													"nativeSrc": "3464:277:13",
													"nodeType": "YulBlock",
													"src": "3464:277:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3513:83:13",
																"nodeType": "YulBlock",
																"src": "3513:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3515:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3515:77:13"
																			},
																			"nativeSrc": "3515:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3515:79:13"
																		},
																		"nativeSrc": "3515:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3515:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3492:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3492:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3500:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3500:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3488:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3488:3:13"
																				},
																				"nativeSrc": "3488:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3488:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3507:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3507:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3484:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3484:3:13"
																		},
																		"nativeSrc": "3484:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3484:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3477:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3477:6:13"
																},
																"nativeSrc": "3477:35:13",
																"nodeType": "YulFunctionCall",
																"src": "3477:35:13"
															},
															"nativeSrc": "3474:122:13",
															"nodeType": "YulIf",
															"src": "3474:122:13"
														},
														{
															"nativeSrc": "3605:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3605:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3632:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3632:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3619:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3619:12:13"
																},
																"nativeSrc": "3619:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3619:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3609:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3609:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3648:87:13",
															"nodeType": "YulAssignment",
															"src": "3648:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3708:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3708:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3716:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3716:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3704:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3704:3:13"
																		},
																		"nativeSrc": "3704:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3704:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3723:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3723:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3731:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3731:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "3657:46:13",
																	"nodeType": "YulIdentifier",
																	"src": "3657:46:13"
																},
																"nativeSrc": "3657:78:13",
																"nodeType": "YulFunctionCall",
																"src": "3657:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3648:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3648:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "3403:338:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3442:6:13",
														"nodeType": "YulTypedName",
														"src": "3442:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3450:3:13",
														"nodeType": "YulTypedName",
														"src": "3450:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3458:5:13",
														"nodeType": "YulTypedName",
														"src": "3458:5:13",
														"type": ""
													}
												],
												"src": "3403:338:13"
											},
											{
												"body": {
													"nativeSrc": "3839:560:13",
													"nodeType": "YulBlock",
													"src": "3839:560:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3885:83:13",
																"nodeType": "YulBlock",
																"src": "3885:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3887:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3887:77:13"
																			},
																			"nativeSrc": "3887:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3887:79:13"
																		},
																		"nativeSrc": "3887:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3887:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3860:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3860:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3869:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3869:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3856:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3856:3:13"
																		},
																		"nativeSrc": "3856:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3856:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3881:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3881:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3852:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3852:3:13"
																},
																"nativeSrc": "3852:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3852:32:13"
															},
															"nativeSrc": "3849:119:13",
															"nodeType": "YulIf",
															"src": "3849:119:13"
														},
														{
															"nativeSrc": "3978:117:13",
															"nodeType": "YulBlock",
															"src": "3978:117:13",
															"statements": [
																{
																	"nativeSrc": "3993:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3993:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4007:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4007:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3997:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3997:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4022:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4022:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4057:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4057:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4068:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4068:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4053:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4053:3:13"
																				},
																				"nativeSrc": "4053:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4053:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4077:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4077:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4032:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4032:20:13"
																		},
																		"nativeSrc": "4032:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4032:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4022:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4022:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4105:287:13",
															"nodeType": "YulBlock",
															"src": "4105:287:13",
															"statements": [
																{
																	"nativeSrc": "4120:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4120:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4151:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4151:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4162:2:13",
																						"nodeType": "YulLiteral",
																						"src": "4162:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4147:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4147:3:13"
																				},
																				"nativeSrc": "4147:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4147:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4134:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "4134:12:13"
																		},
																		"nativeSrc": "4134:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4134:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4124:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4124:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4213:83:13",
																		"nodeType": "YulBlock",
																		"src": "4213:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4215:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "4215:77:13"
																					},
																					"nativeSrc": "4215:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4215:79:13"
																				},
																				"nativeSrc": "4215:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4215:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4185:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4185:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4193:18:13",
																				"nodeType": "YulLiteral",
																				"src": "4193:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4182:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4182:2:13"
																		},
																		"nativeSrc": "4182:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4182:30:13"
																	},
																	"nativeSrc": "4179:117:13",
																	"nodeType": "YulIf",
																	"src": "4179:117:13"
																},
																{
																	"nativeSrc": "4310:72:13",
																	"nodeType": "YulAssignment",
																	"src": "4310:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4354:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4354:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4365:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4365:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4350:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4350:3:13"
																				},
																				"nativeSrc": "4350:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4350:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4374:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4374:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "4320:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "4320:29:13"
																		},
																		"nativeSrc": "4320:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4320:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4310:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4310:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "3747:652:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3801:9:13",
														"nodeType": "YulTypedName",
														"src": "3801:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3812:7:13",
														"nodeType": "YulTypedName",
														"src": "3812:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3824:6:13",
														"nodeType": "YulTypedName",
														"src": "3824:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3832:6:13",
														"nodeType": "YulTypedName",
														"src": "3832:6:13",
														"type": ""
													}
												],
												"src": "3747:652:13"
											},
											{
												"body": {
													"nativeSrc": "4450:32:13",
													"nodeType": "YulBlock",
													"src": "4450:32:13",
													"statements": [
														{
															"nativeSrc": "4460:16:13",
															"nodeType": "YulAssignment",
															"src": "4460:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "4471:5:13",
																"nodeType": "YulIdentifier",
																"src": "4471:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4460:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "4460:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4405:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4432:5:13",
														"nodeType": "YulTypedName",
														"src": "4432:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4442:7:13",
														"nodeType": "YulTypedName",
														"src": "4442:7:13",
														"type": ""
													}
												],
												"src": "4405:77:13"
											},
											{
												"body": {
													"nativeSrc": "4553:53:13",
													"nodeType": "YulBlock",
													"src": "4553:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4570:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4570:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4593:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4593:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "4575:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "4575:17:13"
																		},
																		"nativeSrc": "4575:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4563:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4563:6:13"
																},
																"nativeSrc": "4563:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4563:37:13"
															},
															"nativeSrc": "4563:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "4563:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4488:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4541:5:13",
														"nodeType": "YulTypedName",
														"src": "4541:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4548:3:13",
														"nodeType": "YulTypedName",
														"src": "4548:3:13",
														"type": ""
													}
												],
												"src": "4488:118:13"
											},
											{
												"body": {
													"nativeSrc": "4710:124:13",
													"nodeType": "YulBlock",
													"src": "4710:124:13",
													"statements": [
														{
															"nativeSrc": "4720:26:13",
															"nodeType": "YulAssignment",
															"src": "4720:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4732:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4732:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4743:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4728:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4728:3:13"
																},
																"nativeSrc": "4728:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4728:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4720:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4720:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4800:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4800:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4813:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4813:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4824:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4824:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4809:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4809:3:13"
																		},
																		"nativeSrc": "4809:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4809:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "4756:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4756:43:13"
																},
																"nativeSrc": "4756:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4756:71:13"
															},
															"nativeSrc": "4756:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4756:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "4612:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4682:9:13",
														"nodeType": "YulTypedName",
														"src": "4682:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4694:6:13",
														"nodeType": "YulTypedName",
														"src": "4694:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4705:4:13",
														"nodeType": "YulTypedName",
														"src": "4705:4:13",
														"type": ""
													}
												],
												"src": "4612:222:13"
											},
											{
												"body": {
													"nativeSrc": "4905:53:13",
													"nodeType": "YulBlock",
													"src": "4905:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4922:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4922:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4945:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4945:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4927:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "4927:17:13"
																		},
																		"nativeSrc": "4927:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4915:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4915:6:13"
																},
																"nativeSrc": "4915:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4915:37:13"
															},
															"nativeSrc": "4915:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "4915:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4840:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4893:5:13",
														"nodeType": "YulTypedName",
														"src": "4893:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4900:3:13",
														"nodeType": "YulTypedName",
														"src": "4900:3:13",
														"type": ""
													}
												],
												"src": "4840:118:13"
											},
											{
												"body": {
													"nativeSrc": "5062:124:13",
													"nodeType": "YulBlock",
													"src": "5062:124:13",
													"statements": [
														{
															"nativeSrc": "5072:26:13",
															"nodeType": "YulAssignment",
															"src": "5072:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5084:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5084:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5095:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5095:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5080:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5080:3:13"
																},
																"nativeSrc": "5080:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5080:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5072:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5072:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5152:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5152:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5165:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5165:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5176:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5176:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5161:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5161:3:13"
																		},
																		"nativeSrc": "5161:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5108:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5108:43:13"
																},
																"nativeSrc": "5108:71:13",
																"nodeType": "YulFunctionCall",
																"src": "5108:71:13"
															},
															"nativeSrc": "5108:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "5108:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4964:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5034:9:13",
														"nodeType": "YulTypedName",
														"src": "5034:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5046:6:13",
														"nodeType": "YulTypedName",
														"src": "5046:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5057:4:13",
														"nodeType": "YulTypedName",
														"src": "5057:4:13",
														"type": ""
													}
												],
												"src": "4964:222:13"
											},
											{
												"body": {
													"nativeSrc": "5275:391:13",
													"nodeType": "YulBlock",
													"src": "5275:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5321:83:13",
																"nodeType": "YulBlock",
																"src": "5321:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5323:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5323:77:13"
																			},
																			"nativeSrc": "5323:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5323:79:13"
																		},
																		"nativeSrc": "5323:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5323:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5296:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5296:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5305:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5305:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5292:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5292:3:13"
																		},
																		"nativeSrc": "5292:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5292:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5317:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5317:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5288:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5288:3:13"
																},
																"nativeSrc": "5288:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5288:32:13"
															},
															"nativeSrc": "5285:119:13",
															"nodeType": "YulIf",
															"src": "5285:119:13"
														},
														{
															"nativeSrc": "5414:117:13",
															"nodeType": "YulBlock",
															"src": "5414:117:13",
															"statements": [
																{
																	"nativeSrc": "5429:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5429:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5443:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5443:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5433:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5433:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5458:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5458:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5493:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5493:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5504:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5504:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5489:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5489:3:13"
																				},
																				"nativeSrc": "5489:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5489:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5513:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5513:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5468:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5468:20:13"
																		},
																		"nativeSrc": "5468:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5468:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5458:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5458:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5541:118:13",
															"nodeType": "YulBlock",
															"src": "5541:118:13",
															"statements": [
																{
																	"nativeSrc": "5556:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5556:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5570:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5570:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5560:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5560:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5586:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5586:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5621:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5621:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5632:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5632:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5617:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5617:3:13"
																				},
																				"nativeSrc": "5617:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5617:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5641:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5641:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5596:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5596:20:13"
																		},
																		"nativeSrc": "5596:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5596:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5586:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5586:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "5192:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5237:9:13",
														"nodeType": "YulTypedName",
														"src": "5237:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5248:7:13",
														"nodeType": "YulTypedName",
														"src": "5248:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5260:6:13",
														"nodeType": "YulTypedName",
														"src": "5260:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5268:6:13",
														"nodeType": "YulTypedName",
														"src": "5268:6:13",
														"type": ""
													}
												],
												"src": "5192:474:13"
											},
											{
												"body": {
													"nativeSrc": "5731:40:13",
													"nodeType": "YulBlock",
													"src": "5731:40:13",
													"statements": [
														{
															"nativeSrc": "5742:22:13",
															"nodeType": "YulAssignment",
															"src": "5742:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5758:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5758:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5752:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5752:5:13"
																},
																"nativeSrc": "5752:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5752:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5742:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5742:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5672:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5714:5:13",
														"nodeType": "YulTypedName",
														"src": "5714:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5724:6:13",
														"nodeType": "YulTypedName",
														"src": "5724:6:13",
														"type": ""
													}
												],
												"src": "5672:99:13"
											},
											{
												"body": {
													"nativeSrc": "5873:73:13",
													"nodeType": "YulBlock",
													"src": "5873:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5890:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5890:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5895:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5895:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5883:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5883:6:13"
																},
																"nativeSrc": "5883:19:13",
																"nodeType": "YulFunctionCall",
																"src": "5883:19:13"
															},
															"nativeSrc": "5883:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "5883:19:13"
														},
														{
															"nativeSrc": "5911:29:13",
															"nodeType": "YulAssignment",
															"src": "5911:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5930:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5930:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5935:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5935:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5926:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5926:3:13"
																},
																"nativeSrc": "5926:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5926:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5911:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "5911:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5777:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5845:3:13",
														"nodeType": "YulTypedName",
														"src": "5845:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5850:6:13",
														"nodeType": "YulTypedName",
														"src": "5850:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5861:11:13",
														"nodeType": "YulTypedName",
														"src": "5861:11:13",
														"type": ""
													}
												],
												"src": "5777:169:13"
											},
											{
												"body": {
													"nativeSrc": "6014:77:13",
													"nodeType": "YulBlock",
													"src": "6014:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6031:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6031:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6036:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6036:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6041:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6041:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6025:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6025:5:13"
																},
																"nativeSrc": "6025:23:13",
																"nodeType": "YulFunctionCall",
																"src": "6025:23:13"
															},
															"nativeSrc": "6025:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "6025:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6068:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6068:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6073:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6073:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6064:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6064:3:13"
																		},
																		"nativeSrc": "6064:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6064:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6082:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6057:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6057:6:13"
																},
																"nativeSrc": "6057:27:13",
																"nodeType": "YulFunctionCall",
																"src": "6057:27:13"
															},
															"nativeSrc": "6057:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "6057:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "5952:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5996:3:13",
														"nodeType": "YulTypedName",
														"src": "5996:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6001:3:13",
														"nodeType": "YulTypedName",
														"src": "6001:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6006:6:13",
														"nodeType": "YulTypedName",
														"src": "6006:6:13",
														"type": ""
													}
												],
												"src": "5952:139:13"
											},
											{
												"body": {
													"nativeSrc": "6189:285:13",
													"nodeType": "YulBlock",
													"src": "6189:285:13",
													"statements": [
														{
															"nativeSrc": "6199:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6199:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6246:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6246:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6213:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "6213:32:13"
																},
																"nativeSrc": "6213:39:13",
																"nodeType": "YulFunctionCall",
																"src": "6213:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6203:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6203:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6261:78:13",
															"nodeType": "YulAssignment",
															"src": "6261:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6327:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6327:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6332:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6332:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6268:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "6268:58:13"
																},
																"nativeSrc": "6268:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6268:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6261:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6261:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6387:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6387:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6394:4:13",
																				"nodeType": "YulLiteral",
																				"src": "6394:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6383:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6383:3:13"
																		},
																		"nativeSrc": "6383:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6383:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6401:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6401:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6406:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6406:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6348:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "6348:34:13"
																},
																"nativeSrc": "6348:65:13",
																"nodeType": "YulFunctionCall",
																"src": "6348:65:13"
															},
															"nativeSrc": "6348:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "6348:65:13"
														},
														{
															"nativeSrc": "6422:46:13",
															"nodeType": "YulAssignment",
															"src": "6422:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6433:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6433:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6460:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6460:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6438:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "6438:21:13"
																		},
																		"nativeSrc": "6438:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6438:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6429:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6429:3:13"
																},
																"nativeSrc": "6429:39:13",
																"nodeType": "YulFunctionCall",
																"src": "6429:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6422:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6422:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6097:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6170:5:13",
														"nodeType": "YulTypedName",
														"src": "6170:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6177:3:13",
														"nodeType": "YulTypedName",
														"src": "6177:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6185:3:13",
														"nodeType": "YulTypedName",
														"src": "6185:3:13",
														"type": ""
													}
												],
												"src": "6097:377:13"
											},
											{
												"body": {
													"nativeSrc": "6598:195:13",
													"nodeType": "YulBlock",
													"src": "6598:195:13",
													"statements": [
														{
															"nativeSrc": "6608:26:13",
															"nodeType": "YulAssignment",
															"src": "6608:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6620:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6620:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6631:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6631:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6616:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6616:3:13"
																},
																"nativeSrc": "6616:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6616:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6608:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6608:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6655:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6655:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6666:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6666:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6651:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6651:3:13"
																		},
																		"nativeSrc": "6651:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6651:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6674:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6674:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6680:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6680:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6670:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6670:3:13"
																		},
																		"nativeSrc": "6670:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6670:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6644:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6644:6:13"
																},
																"nativeSrc": "6644:47:13",
																"nodeType": "YulFunctionCall",
																"src": "6644:47:13"
															},
															"nativeSrc": "6644:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "6644:47:13"
														},
														{
															"nativeSrc": "6700:86:13",
															"nodeType": "YulAssignment",
															"src": "6700:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6772:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6772:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "6781:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6781:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6708:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "6708:63:13"
																},
																"nativeSrc": "6708:78:13",
																"nodeType": "YulFunctionCall",
																"src": "6708:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6700:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6700:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6480:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6570:9:13",
														"nodeType": "YulTypedName",
														"src": "6570:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6582:6:13",
														"nodeType": "YulTypedName",
														"src": "6582:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6593:4:13",
														"nodeType": "YulTypedName",
														"src": "6593:4:13",
														"type": ""
													}
												],
												"src": "6480:313:13"
											},
											{
												"body": {
													"nativeSrc": "6865:263:13",
													"nodeType": "YulBlock",
													"src": "6865:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6911:83:13",
																"nodeType": "YulBlock",
																"src": "6911:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6913:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6913:77:13"
																			},
																			"nativeSrc": "6913:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6913:79:13"
																		},
																		"nativeSrc": "6913:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6913:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6886:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6886:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6895:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6895:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6882:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6882:3:13"
																		},
																		"nativeSrc": "6882:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6882:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6907:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6907:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6878:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6878:3:13"
																},
																"nativeSrc": "6878:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6878:32:13"
															},
															"nativeSrc": "6875:119:13",
															"nodeType": "YulIf",
															"src": "6875:119:13"
														},
														{
															"nativeSrc": "7004:117:13",
															"nodeType": "YulBlock",
															"src": "7004:117:13",
															"statements": [
																{
																	"nativeSrc": "7019:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7019:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7033:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7033:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7023:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7023:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7048:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7048:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7083:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7083:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7094:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7094:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7079:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7079:3:13"
																				},
																				"nativeSrc": "7079:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7079:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7103:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7103:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7058:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7058:20:13"
																		},
																		"nativeSrc": "7058:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7058:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7048:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7048:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6799:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6835:9:13",
														"nodeType": "YulTypedName",
														"src": "6835:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6846:7:13",
														"nodeType": "YulTypedName",
														"src": "6846:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6858:6:13",
														"nodeType": "YulTypedName",
														"src": "6858:6:13",
														"type": ""
													}
												],
												"src": "6799:329:13"
											},
											{
												"body": {
													"nativeSrc": "7199:53:13",
													"nodeType": "YulBlock",
													"src": "7199:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7216:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7216:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7239:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7239:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7221:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "7221:17:13"
																		},
																		"nativeSrc": "7221:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7221:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7209:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7209:6:13"
																},
																"nativeSrc": "7209:37:13",
																"nodeType": "YulFunctionCall",
																"src": "7209:37:13"
															},
															"nativeSrc": "7209:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "7209:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7134:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7187:5:13",
														"nodeType": "YulTypedName",
														"src": "7187:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7194:3:13",
														"nodeType": "YulTypedName",
														"src": "7194:3:13",
														"type": ""
													}
												],
												"src": "7134:118:13"
											},
											{
												"body": {
													"nativeSrc": "7356:124:13",
													"nodeType": "YulBlock",
													"src": "7356:124:13",
													"statements": [
														{
															"nativeSrc": "7366:26:13",
															"nodeType": "YulAssignment",
															"src": "7366:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7378:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7378:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7389:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7389:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7374:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7374:3:13"
																},
																"nativeSrc": "7374:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7374:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7366:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7366:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7446:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7446:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7459:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7459:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7470:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7470:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7455:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7455:3:13"
																		},
																		"nativeSrc": "7455:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7455:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7402:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7402:43:13"
																},
																"nativeSrc": "7402:71:13",
																"nodeType": "YulFunctionCall",
																"src": "7402:71:13"
															},
															"nativeSrc": "7402:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "7402:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7258:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7328:9:13",
														"nodeType": "YulTypedName",
														"src": "7328:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7340:6:13",
														"nodeType": "YulTypedName",
														"src": "7340:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7351:4:13",
														"nodeType": "YulTypedName",
														"src": "7351:4:13",
														"type": ""
													}
												],
												"src": "7258:222:13"
											},
											{
												"body": {
													"nativeSrc": "7592:64:13",
													"nodeType": "YulBlock",
													"src": "7592:64:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7614:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7614:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7622:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7622:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7610:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7610:3:13"
																		},
																		"nativeSrc": "7610:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7610:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "7626:22:13",
																		"nodeType": "YulLiteral",
																		"src": "7626:22:13",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7603:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7603:6:13"
																},
																"nativeSrc": "7603:46:13",
																"nodeType": "YulFunctionCall",
																"src": "7603:46:13"
															},
															"nativeSrc": "7603:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "7603:46:13"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "7486:170:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7584:6:13",
														"nodeType": "YulTypedName",
														"src": "7584:6:13",
														"type": ""
													}
												],
												"src": "7486:170:13"
											},
											{
												"body": {
													"nativeSrc": "7808:220:13",
													"nodeType": "YulBlock",
													"src": "7808:220:13",
													"statements": [
														{
															"nativeSrc": "7818:74:13",
															"nodeType": "YulAssignment",
															"src": "7818:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7884:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7884:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7889:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7889:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7825:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "7825:58:13"
																},
																"nativeSrc": "7825:67:13",
																"nodeType": "YulFunctionCall",
																"src": "7825:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7818:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7818:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7990:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7990:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "7901:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "7901:88:13"
																},
																"nativeSrc": "7901:93:13",
																"nodeType": "YulFunctionCall",
																"src": "7901:93:13"
															},
															"nativeSrc": "7901:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "7901:93:13"
														},
														{
															"nativeSrc": "8003:19:13",
															"nodeType": "YulAssignment",
															"src": "8003:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8014:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8014:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8019:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8019:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8010:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8010:3:13"
																},
																"nativeSrc": "8010:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8010:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8003:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8003:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7662:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7796:3:13",
														"nodeType": "YulTypedName",
														"src": "7796:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7804:3:13",
														"nodeType": "YulTypedName",
														"src": "7804:3:13",
														"type": ""
													}
												],
												"src": "7662:366:13"
											},
											{
												"body": {
													"nativeSrc": "8205:248:13",
													"nodeType": "YulBlock",
													"src": "8205:248:13",
													"statements": [
														{
															"nativeSrc": "8215:26:13",
															"nodeType": "YulAssignment",
															"src": "8215:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8227:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8227:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8238:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8238:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8223:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8223:3:13"
																},
																"nativeSrc": "8223:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8223:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8215:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8215:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8262:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8262:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8273:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8273:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8258:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8258:3:13"
																		},
																		"nativeSrc": "8258:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8258:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8281:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8281:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8287:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8287:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8277:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8277:3:13"
																		},
																		"nativeSrc": "8277:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8277:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8251:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8251:6:13"
																},
																"nativeSrc": "8251:47:13",
																"nodeType": "YulFunctionCall",
																"src": "8251:47:13"
															},
															"nativeSrc": "8251:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "8251:47:13"
														},
														{
															"nativeSrc": "8307:139:13",
															"nodeType": "YulAssignment",
															"src": "8307:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8441:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8441:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8315:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "8315:124:13"
																},
																"nativeSrc": "8315:131:13",
																"nodeType": "YulFunctionCall",
																"src": "8315:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8307:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8307:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8034:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8185:9:13",
														"nodeType": "YulTypedName",
														"src": "8185:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8200:4:13",
														"nodeType": "YulTypedName",
														"src": "8200:4:13",
														"type": ""
													}
												],
												"src": "8034:419:13"
											},
											{
												"body": {
													"nativeSrc": "8487:152:13",
													"nodeType": "YulBlock",
													"src": "8487:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8504:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8504:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8507:77:13",
																		"nodeType": "YulLiteral",
																		"src": "8507:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8497:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8497:6:13"
																},
																"nativeSrc": "8497:88:13",
																"nodeType": "YulFunctionCall",
																"src": "8497:88:13"
															},
															"nativeSrc": "8497:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "8497:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8601:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8601:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8604:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8604:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8594:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8594:6:13"
																},
																"nativeSrc": "8594:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8594:15:13"
															},
															"nativeSrc": "8594:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8594:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8625:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8625:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8628:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8628:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8618:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8618:6:13"
																},
																"nativeSrc": "8618:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8618:15:13"
															},
															"nativeSrc": "8618:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8618:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8459:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "8459:180:13"
											},
											{
												"body": {
													"nativeSrc": "8690:149:13",
													"nodeType": "YulBlock",
													"src": "8690:149:13",
													"statements": [
														{
															"nativeSrc": "8700:25:13",
															"nodeType": "YulAssignment",
															"src": "8700:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8723:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8723:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8705:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "8705:17:13"
																},
																"nativeSrc": "8705:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8705:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8700:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "8700:1:13"
																}
															]
														},
														{
															"nativeSrc": "8734:25:13",
															"nodeType": "YulAssignment",
															"src": "8734:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8757:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8757:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8739:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "8739:17:13"
																},
																"nativeSrc": "8739:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8739:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8734:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "8734:1:13"
																}
															]
														},
														{
															"nativeSrc": "8768:17:13",
															"nodeType": "YulAssignment",
															"src": "8768:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8780:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8780:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8783:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8783:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8776:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8776:3:13"
																},
																"nativeSrc": "8776:9:13",
																"nodeType": "YulFunctionCall",
																"src": "8776:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8768:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8768:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8810:22:13",
																"nodeType": "YulBlock",
																"src": "8810:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8812:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8812:16:13"
																			},
																			"nativeSrc": "8812:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8812:18:13"
																		},
																		"nativeSrc": "8812:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8812:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8801:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8801:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8807:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8807:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8798:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8798:2:13"
																},
																"nativeSrc": "8798:11:13",
																"nodeType": "YulFunctionCall",
																"src": "8798:11:13"
															},
															"nativeSrc": "8795:37:13",
															"nodeType": "YulIf",
															"src": "8795:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8645:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8676:1:13",
														"nodeType": "YulTypedName",
														"src": "8676:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8679:1:13",
														"nodeType": "YulTypedName",
														"src": "8679:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8685:4:13",
														"nodeType": "YulTypedName",
														"src": "8685:4:13",
														"type": ""
													}
												],
												"src": "8645:194:13"
											},
											{
												"body": {
													"nativeSrc": "8951:57:13",
													"nodeType": "YulBlock",
													"src": "8951:57:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8973:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8973:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8981:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8981:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8969:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8969:3:13"
																		},
																		"nativeSrc": "8969:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8969:14:13"
																	},
																	{
																		"hexValue": "4d7573742073656e6420455448",
																		"kind": "string",
																		"nativeSrc": "8985:15:13",
																		"nodeType": "YulLiteral",
																		"src": "8985:15:13",
																		"type": "",
																		"value": "Must send ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8962:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8962:6:13"
																},
																"nativeSrc": "8962:39:13",
																"nodeType": "YulFunctionCall",
																"src": "8962:39:13"
															},
															"nativeSrc": "8962:39:13",
															"nodeType": "YulExpressionStatement",
															"src": "8962:39:13"
														}
													]
												},
												"name": "store_literal_in_memory_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480",
												"nativeSrc": "8845:163:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8943:6:13",
														"nodeType": "YulTypedName",
														"src": "8943:6:13",
														"type": ""
													}
												],
												"src": "8845:163:13"
											},
											{
												"body": {
													"nativeSrc": "9160:220:13",
													"nodeType": "YulBlock",
													"src": "9160:220:13",
													"statements": [
														{
															"nativeSrc": "9170:74:13",
															"nodeType": "YulAssignment",
															"src": "9170:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9236:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9236:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9241:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9241:2:13",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9177:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "9177:58:13"
																},
																"nativeSrc": "9177:67:13",
																"nodeType": "YulFunctionCall",
																"src": "9177:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9170:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9170:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9342:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9342:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480",
																	"nativeSrc": "9253:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "9253:88:13"
																},
																"nativeSrc": "9253:93:13",
																"nodeType": "YulFunctionCall",
																"src": "9253:93:13"
															},
															"nativeSrc": "9253:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "9253:93:13"
														},
														{
															"nativeSrc": "9355:19:13",
															"nodeType": "YulAssignment",
															"src": "9355:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9366:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9366:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9371:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9371:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9362:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9362:3:13"
																},
																"nativeSrc": "9362:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9362:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9355:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9355:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9014:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9148:3:13",
														"nodeType": "YulTypedName",
														"src": "9148:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9156:3:13",
														"nodeType": "YulTypedName",
														"src": "9156:3:13",
														"type": ""
													}
												],
												"src": "9014:366:13"
											},
											{
												"body": {
													"nativeSrc": "9557:248:13",
													"nodeType": "YulBlock",
													"src": "9557:248:13",
													"statements": [
														{
															"nativeSrc": "9567:26:13",
															"nodeType": "YulAssignment",
															"src": "9567:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9579:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9579:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9590:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9590:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9575:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9575:3:13"
																},
																"nativeSrc": "9575:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9575:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9567:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9567:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9614:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9614:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9625:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9625:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9610:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9610:3:13"
																		},
																		"nativeSrc": "9610:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9610:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9633:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "9633:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9639:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9639:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9629:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9629:3:13"
																		},
																		"nativeSrc": "9629:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9629:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9603:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9603:6:13"
																},
																"nativeSrc": "9603:47:13",
																"nodeType": "YulFunctionCall",
																"src": "9603:47:13"
															},
															"nativeSrc": "9603:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "9603:47:13"
														},
														{
															"nativeSrc": "9659:139:13",
															"nodeType": "YulAssignment",
															"src": "9659:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9793:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9793:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9667:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "9667:124:13"
																},
																"nativeSrc": "9667:131:13",
																"nodeType": "YulFunctionCall",
																"src": "9667:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9659:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9659:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9386:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9537:9:13",
														"nodeType": "YulTypedName",
														"src": "9537:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9552:4:13",
														"nodeType": "YulTypedName",
														"src": "9552:4:13",
														"type": ""
													}
												],
												"src": "9386:419:13"
											},
											{
												"body": {
													"nativeSrc": "9855:147:13",
													"nodeType": "YulBlock",
													"src": "9855:147:13",
													"statements": [
														{
															"nativeSrc": "9865:25:13",
															"nodeType": "YulAssignment",
															"src": "9865:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9888:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9888:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9870:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9870:17:13"
																},
																"nativeSrc": "9870:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9870:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9865:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "9865:1:13"
																}
															]
														},
														{
															"nativeSrc": "9899:25:13",
															"nodeType": "YulAssignment",
															"src": "9899:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9922:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9922:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9904:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9904:17:13"
																},
																"nativeSrc": "9904:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9904:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9899:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "9899:1:13"
																}
															]
														},
														{
															"nativeSrc": "9933:16:13",
															"nodeType": "YulAssignment",
															"src": "9933:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9944:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9944:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9947:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9947:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9940:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9940:3:13"
																},
																"nativeSrc": "9940:9:13",
																"nodeType": "YulFunctionCall",
																"src": "9940:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9933:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9933:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9973:22:13",
																"nodeType": "YulBlock",
																"src": "9973:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9975:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9975:16:13"
																			},
																			"nativeSrc": "9975:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9975:18:13"
																		},
																		"nativeSrc": "9975:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9975:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9965:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9965:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9968:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9968:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9962:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9962:2:13"
																},
																"nativeSrc": "9962:10:13",
																"nodeType": "YulFunctionCall",
																"src": "9962:10:13"
															},
															"nativeSrc": "9959:36:13",
															"nodeType": "YulIf",
															"src": "9959:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9811:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9842:1:13",
														"nodeType": "YulTypedName",
														"src": "9842:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9845:1:13",
														"nodeType": "YulTypedName",
														"src": "9845:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9851:3:13",
														"nodeType": "YulTypedName",
														"src": "9851:3:13",
														"type": ""
													}
												],
												"src": "9811:191:13"
											},
											{
												"body": {
													"nativeSrc": "10051:79:13",
													"nodeType": "YulBlock",
													"src": "10051:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10108:16:13",
																"nodeType": "YulBlock",
																"src": "10108:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10117:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10117:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10120:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10120:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10110:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10110:6:13"
																			},
																			"nativeSrc": "10110:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10110:12:13"
																		},
																		"nativeSrc": "10110:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10110:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10074:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "10074:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10099:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "10099:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "10081:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "10081:17:13"
																				},
																				"nativeSrc": "10081:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10081:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10071:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "10071:2:13"
																		},
																		"nativeSrc": "10071:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10071:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10064:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10064:6:13"
																},
																"nativeSrc": "10064:43:13",
																"nodeType": "YulFunctionCall",
																"src": "10064:43:13"
															},
															"nativeSrc": "10061:63:13",
															"nodeType": "YulIf",
															"src": "10061:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "10008:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10044:5:13",
														"nodeType": "YulTypedName",
														"src": "10044:5:13",
														"type": ""
													}
												],
												"src": "10008:122:13"
											},
											{
												"body": {
													"nativeSrc": "10199:80:13",
													"nodeType": "YulBlock",
													"src": "10199:80:13",
													"statements": [
														{
															"nativeSrc": "10209:22:13",
															"nodeType": "YulAssignment",
															"src": "10209:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10224:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10224:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10218:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10218:5:13"
																},
																"nativeSrc": "10218:13:13",
																"nodeType": "YulFunctionCall",
																"src": "10218:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10209:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10209:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10267:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10267:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "10240:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "10240:26:13"
																},
																"nativeSrc": "10240:33:13",
																"nodeType": "YulFunctionCall",
																"src": "10240:33:13"
															},
															"nativeSrc": "10240:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "10240:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "10136:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10177:6:13",
														"nodeType": "YulTypedName",
														"src": "10177:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10185:3:13",
														"nodeType": "YulTypedName",
														"src": "10185:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10193:5:13",
														"nodeType": "YulTypedName",
														"src": "10193:5:13",
														"type": ""
													}
												],
												"src": "10136:143:13"
											},
											{
												"body": {
													"nativeSrc": "10362:274:13",
													"nodeType": "YulBlock",
													"src": "10362:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10408:83:13",
																"nodeType": "YulBlock",
																"src": "10408:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10410:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10410:77:13"
																			},
																			"nativeSrc": "10410:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10410:79:13"
																		},
																		"nativeSrc": "10410:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10410:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10383:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10383:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10392:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10392:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10379:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10379:3:13"
																		},
																		"nativeSrc": "10379:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10379:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10404:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10404:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10375:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10375:3:13"
																},
																"nativeSrc": "10375:32:13",
																"nodeType": "YulFunctionCall",
																"src": "10375:32:13"
															},
															"nativeSrc": "10372:119:13",
															"nodeType": "YulIf",
															"src": "10372:119:13"
														},
														{
															"nativeSrc": "10501:128:13",
															"nodeType": "YulBlock",
															"src": "10501:128:13",
															"statements": [
																{
																	"nativeSrc": "10516:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10516:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10530:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10530:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10520:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10520:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10545:74:13",
																	"nodeType": "YulAssignment",
																	"src": "10545:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10591:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10591:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10602:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10602:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10587:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10587:3:13"
																				},
																				"nativeSrc": "10587:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10587:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10611:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10611:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "10555:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "10555:31:13"
																		},
																		"nativeSrc": "10555:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10555:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10545:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10545:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "10285:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10332:9:13",
														"nodeType": "YulTypedName",
														"src": "10332:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10343:7:13",
														"nodeType": "YulTypedName",
														"src": "10343:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10355:6:13",
														"nodeType": "YulTypedName",
														"src": "10355:6:13",
														"type": ""
													}
												],
												"src": "10285:351:13"
											},
											{
												"body": {
													"nativeSrc": "10700:40:13",
													"nodeType": "YulBlock",
													"src": "10700:40:13",
													"statements": [
														{
															"nativeSrc": "10711:22:13",
															"nodeType": "YulAssignment",
															"src": "10711:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10727:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10727:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10721:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10721:5:13"
																},
																"nativeSrc": "10721:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10721:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10711:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10711:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "10642:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10683:5:13",
														"nodeType": "YulTypedName",
														"src": "10683:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10693:6:13",
														"nodeType": "YulTypedName",
														"src": "10693:6:13",
														"type": ""
													}
												],
												"src": "10642:98:13"
											},
											{
												"body": {
													"nativeSrc": "10859:34:13",
													"nodeType": "YulBlock",
													"src": "10859:34:13",
													"statements": [
														{
															"nativeSrc": "10869:18:13",
															"nodeType": "YulAssignment",
															"src": "10869:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "10884:3:13",
																"nodeType": "YulIdentifier",
																"src": "10884:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10869:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "10869:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10746:147:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10831:3:13",
														"nodeType": "YulTypedName",
														"src": "10831:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10836:6:13",
														"nodeType": "YulTypedName",
														"src": "10836:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10847:11:13",
														"nodeType": "YulTypedName",
														"src": "10847:11:13",
														"type": ""
													}
												],
												"src": "10746:147:13"
											},
											{
												"body": {
													"nativeSrc": "11007:278:13",
													"nodeType": "YulBlock",
													"src": "11007:278:13",
													"statements": [
														{
															"nativeSrc": "11017:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11017:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11063:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11063:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "11031:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "11031:31:13"
																},
																"nativeSrc": "11031:38:13",
																"nodeType": "YulFunctionCall",
																"src": "11031:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11021:6:13",
																	"nodeType": "YulTypedName",
																	"src": "11021:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11078:95:13",
															"nodeType": "YulAssignment",
															"src": "11078:95:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11161:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11161:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11166:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11166:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11085:75:13",
																	"nodeType": "YulIdentifier",
																	"src": "11085:75:13"
																},
																"nativeSrc": "11085:88:13",
																"nodeType": "YulFunctionCall",
																"src": "11085:88:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11078:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11078:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11221:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "11221:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11228:4:13",
																				"nodeType": "YulLiteral",
																				"src": "11228:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11217:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11217:3:13"
																		},
																		"nativeSrc": "11217:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11217:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11235:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11235:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11240:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11240:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11182:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "11182:34:13"
																},
																"nativeSrc": "11182:65:13",
																"nodeType": "YulFunctionCall",
																"src": "11182:65:13"
															},
															"nativeSrc": "11182:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "11182:65:13"
														},
														{
															"nativeSrc": "11256:23:13",
															"nodeType": "YulAssignment",
															"src": "11256:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11267:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11267:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11272:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11272:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11263:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11263:3:13"
																},
																"nativeSrc": "11263:16:13",
																"nodeType": "YulFunctionCall",
																"src": "11263:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11256:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11256:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10899:386:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10988:5:13",
														"nodeType": "YulTypedName",
														"src": "10988:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10995:3:13",
														"nodeType": "YulTypedName",
														"src": "10995:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11003:3:13",
														"nodeType": "YulTypedName",
														"src": "11003:3:13",
														"type": ""
													}
												],
												"src": "10899:386:13"
											},
											{
												"body": {
													"nativeSrc": "11425:137:13",
													"nodeType": "YulBlock",
													"src": "11425:137:13",
													"statements": [
														{
															"nativeSrc": "11436:100:13",
															"nodeType": "YulAssignment",
															"src": "11436:100:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11523:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11523:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11532:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11532:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11443:79:13",
																	"nodeType": "YulIdentifier",
																	"src": "11443:79:13"
																},
																"nativeSrc": "11443:93:13",
																"nodeType": "YulFunctionCall",
																"src": "11443:93:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11436:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11436:3:13"
																}
															]
														},
														{
															"nativeSrc": "11546:10:13",
															"nodeType": "YulAssignment",
															"src": "11546:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "11553:3:13",
																"nodeType": "YulIdentifier",
																"src": "11553:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11546:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11546:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11291:271:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11404:3:13",
														"nodeType": "YulTypedName",
														"src": "11404:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11410:6:13",
														"nodeType": "YulTypedName",
														"src": "11410:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11421:3:13",
														"nodeType": "YulTypedName",
														"src": "11421:3:13",
														"type": ""
													}
												],
												"src": "11291:271:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must send ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"682": [
									{
										"length": 32,
										"start": 1871
									},
									{
										"length": 32,
										"start": 1956
									},
									{
										"length": 32,
										"start": 2398
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610090575f3560e01c8063a9059cbb11610058578063a9059cbb14610142578063ad3cb1cc1461016a578063d0e30db014610194578063f2fde38b1461019e578063f8b2cb4f146101c657610090565b80632e1a7d4d146100945780634f1ef286146100bc57806352d1902d146100d8578063715018a6146101025780638da5cb5b14610118575b5f80fd5b34801561009f575f80fd5b506100ba60048036038101906100b59190610ed1565b610202565b005b6100d660048036038101906100d19190611092565b610368565b005b3480156100e3575f80fd5b506100ec610387565b6040516100f99190611104565b60405180910390f35b34801561010d575f80fd5b506101166103b8565b005b348015610123575f80fd5b5061012c6103cb565b604051610139919061112c565b60405180910390f35b34801561014d575f80fd5b5061016860048036038101906101639190611145565b610400565b005b348015610175575f80fd5b5061017e610567565b60405161018b91906111e3565b60405180910390f35b61019c6105a0565b005b3480156101a9575f80fd5b506101c460048036038101906101bf9190611203565b610684565b005b3480156101d1575f80fd5b506101ec60048036038101906101e79190611203565b610708565b6040516101f9919061123d565b60405180910390f35b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610281576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610278906112a0565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102cc91906112eb565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610316573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161035d919061123d565b60405180910390a250565b61037061074d565b61037982610833565b610383828261083e565b5050565b5f61039061095c565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b6103c06109e3565b6103c95f610a6a565b565b5f806103d5610b3b565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561047f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610476906112a0565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104ca91906112eb565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610514573d5f803e3d5ffd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161055b919061123d565b60405180910390a25050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b5f34116105e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d990611368565b60405180910390fd5b345f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461062d9190611386565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c43460405161067a919061123d565b60405180910390a2565b61068c6109e3565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106fc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106f3919061112c565b60405180910390fd5b61070581610a6a565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614806107fa57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166107e1610b62565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610831576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61083b6109e3565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156108a657506040513d601f19601f820116820180604052508101906108a391906113e3565b60015b6108e757816040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016108de919061112c565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b811461094d57806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016109449190611104565b60405180910390fd5b6109578383610bb5565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146109e1576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6109eb610c27565b73ffffffffffffffffffffffffffffffffffffffff16610a096103cb565b73ffffffffffffffffffffffffffffffffffffffff1614610a6857610a2c610c27565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a5f919061112c565b60405180910390fd5b565b5f610a73610b3b565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f610b8e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b610c2e565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610bbe82610c37565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f81511115610c1a57610c148282610d00565b50610c23565b610c22610d80565b5b5050565b5f33905090565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b03610c9257806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610c89919061112c565b60405180910390fd5b80610cbe7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b610c2e565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff1684604051610d299190611452565b5f60405180830381855af49150503d805f8114610d61576040519150601f19603f3d011682016040523d82523d5f602084013e610d66565b606091505b5091509150610d76858383610dbc565b9250505092915050565b5f341115610dba576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b606082610dd157610dcc82610e49565b610e41565b5f8251148015610df757505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610e3957836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610e30919061112c565b60405180910390fd5b819050610e42565b5b9392505050565b5f81511115610e5b5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b610eb081610e9e565b8114610eba575f80fd5b50565b5f81359050610ecb81610ea7565b92915050565b5f60208284031215610ee657610ee5610e96565b5b5f610ef384828501610ebd565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f2582610efc565b9050919050565b610f3581610f1b565b8114610f3f575f80fd5b50565b5f81359050610f5081610f2c565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610fa482610f5e565b810181811067ffffffffffffffff82111715610fc357610fc2610f6e565b5b80604052505050565b5f610fd5610e8d565b9050610fe18282610f9b565b919050565b5f67ffffffffffffffff82111561100057610fff610f6e565b5b61100982610f5e565b9050602081019050919050565b828183375f83830152505050565b5f61103661103184610fe6565b610fcc565b90508281526020810184848401111561105257611051610f5a565b5b61105d848285611016565b509392505050565b5f82601f83011261107957611078610f56565b5b8135611089848260208601611024565b91505092915050565b5f80604083850312156110a8576110a7610e96565b5b5f6110b585828601610f42565b925050602083013567ffffffffffffffff8111156110d6576110d5610e9a565b5b6110e285828601611065565b9150509250929050565b5f819050919050565b6110fe816110ec565b82525050565b5f6020820190506111175f8301846110f5565b92915050565b61112681610f1b565b82525050565b5f60208201905061113f5f83018461111d565b92915050565b5f806040838503121561115b5761115a610e96565b5b5f61116885828601610f42565b925050602061117985828601610ebd565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f6111b582611183565b6111bf818561118d565b93506111cf81856020860161119d565b6111d881610f5e565b840191505092915050565b5f6020820190508181035f8301526111fb81846111ab565b905092915050565b5f6020828403121561121857611217610e96565b5b5f61122584828501610f42565b91505092915050565b61123781610e9e565b82525050565b5f6020820190506112505f83018461122e565b92915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f61128a60148361118d565b915061129582611256565b602082019050919050565b5f6020820190508181035f8301526112b78161127e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6112f582610e9e565b915061130083610e9e565b9250828203905081811115611318576113176112be565b5b92915050565b7f4d7573742073656e6420455448000000000000000000000000000000000000005f82015250565b5f611352600d8361118d565b915061135d8261131e565b602082019050919050565b5f6020820190508181035f83015261137f81611346565b9050919050565b5f61139082610e9e565b915061139b83610e9e565b92508282019050808211156113b3576113b26112be565b5b92915050565b6113c2816110ec565b81146113cc575f80fd5b50565b5f815190506113dd816113b9565b92915050565b5f602082840312156113f8576113f7610e96565b5b5f611405848285016113cf565b91505092915050565b5f81519050919050565b5f81905092915050565b5f61142c8261140e565b6114368185611418565b935061144681856020860161119d565b80840191505092915050565b5f61145d8284611422565b91508190509291505056fea2646970667358221220cb213de6a705fca07ba3a58ea560471395dd5d65262d584e6d08981d5fc7166764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9059CBB GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x1C6 JUMPI PUSH2 0x90 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x118 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1092 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH2 0x3B8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x112C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x175 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH2 0x5A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x281 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x278 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x316 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x370 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x379 DUP3 PUSH2 0x833 JUMP JUMPDEST PUSH2 0x383 DUP3 DUP3 PUSH2 0x83E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x390 PUSH2 0x95C JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3C0 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x3C9 PUSH0 PUSH2 0xA6A JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3D5 PUSH2 0xB3B JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x514 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D9 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x1386 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x68C PUSH2 0x9E3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6FC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x112C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x705 DUP2 PUSH2 0xA6A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x7FA JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7E1 PUSH2 0xB62 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x83B PUSH2 0x9E3 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8A6 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x8E7 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DE SWAP2 SWAP1 PUSH2 0x112C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x94D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x944 SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x957 DUP4 DUP4 PUSH2 0xBB5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x9EB PUSH2 0xC27 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA09 PUSH2 0x3CB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA68 JUMPI PUSH2 0xA2C PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5F SWAP2 SWAP1 PUSH2 0x112C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xA73 PUSH2 0xB3B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xB8E PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0xC2E JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBBE DUP3 PUSH2 0xC37 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xC1A JUMPI PUSH2 0xC14 DUP3 DUP3 PUSH2 0xD00 JUMP JUMPDEST POP PUSH2 0xC23 JUMP JUMPDEST PUSH2 0xC22 PUSH2 0xD80 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0xC92 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC89 SWAP2 SWAP1 PUSH2 0x112C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xCBE PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0xC2E JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xD29 SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD61 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xD76 DUP6 DUP4 DUP4 PUSH2 0xDBC JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0xDBA JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xDD1 JUMPI PUSH2 0xDCC DUP3 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0xE41 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xDF7 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xE39 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE30 SWAP2 SWAP1 PUSH2 0x112C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xE42 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xE5B JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB0 DUP2 PUSH2 0xE9E JUMP JUMPDEST DUP2 EQ PUSH2 0xEBA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xECB DUP2 PUSH2 0xEA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE6 JUMPI PUSH2 0xEE5 PUSH2 0xE96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEF3 DUP5 DUP3 DUP6 ADD PUSH2 0xEBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF25 DUP3 PUSH2 0xEFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF35 DUP2 PUSH2 0xF1B JUMP JUMPDEST DUP2 EQ PUSH2 0xF3F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF50 DUP2 PUSH2 0xF2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xFA4 DUP3 PUSH2 0xF5E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xFC3 JUMPI PUSH2 0xFC2 PUSH2 0xF6E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFD5 PUSH2 0xE8D JUMP JUMPDEST SWAP1 POP PUSH2 0xFE1 DUP3 DUP3 PUSH2 0xF9B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1000 JUMPI PUSH2 0xFFF PUSH2 0xF6E JUMP JUMPDEST JUMPDEST PUSH2 0x1009 DUP3 PUSH2 0xF5E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1036 PUSH2 0x1031 DUP5 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1052 JUMPI PUSH2 0x1051 PUSH2 0xF5A JUMP JUMPDEST JUMPDEST PUSH2 0x105D DUP5 DUP3 DUP6 PUSH2 0x1016 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1079 JUMPI PUSH2 0x1078 PUSH2 0xF56 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1089 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1024 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10A8 JUMPI PUSH2 0x10A7 PUSH2 0xE96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10B5 DUP6 DUP3 DUP7 ADD PUSH2 0xF42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10D6 JUMPI PUSH2 0x10D5 PUSH2 0xE9A JUMP JUMPDEST JUMPDEST PUSH2 0x10E2 DUP6 DUP3 DUP7 ADD PUSH2 0x1065 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10FE DUP2 PUSH2 0x10EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1117 PUSH0 DUP4 ADD DUP5 PUSH2 0x10F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1126 DUP2 PUSH2 0xF1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x113F PUSH0 DUP4 ADD DUP5 PUSH2 0x111D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x115B JUMPI PUSH2 0x115A PUSH2 0xE96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1168 DUP6 DUP3 DUP7 ADD PUSH2 0xF42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1179 DUP6 DUP3 DUP7 ADD PUSH2 0xEBD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11B5 DUP3 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x11BF DUP2 DUP6 PUSH2 0x118D JUMP JUMPDEST SWAP4 POP PUSH2 0x11CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x119D JUMP JUMPDEST PUSH2 0x11D8 DUP2 PUSH2 0xF5E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11FB DUP2 DUP5 PUSH2 0x11AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1218 JUMPI PUSH2 0x1217 PUSH2 0xE96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1225 DUP5 DUP3 DUP6 ADD PUSH2 0xF42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1237 DUP2 PUSH2 0xE9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1250 PUSH0 DUP4 ADD DUP5 PUSH2 0x122E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x128A PUSH1 0x14 DUP4 PUSH2 0x118D JUMP JUMPDEST SWAP2 POP PUSH2 0x1295 DUP3 PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12B7 DUP2 PUSH2 0x127E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x12F5 DUP3 PUSH2 0xE9E JUMP JUMPDEST SWAP2 POP PUSH2 0x1300 DUP4 PUSH2 0xE9E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1318 JUMPI PUSH2 0x1317 PUSH2 0x12BE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642045544800000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1352 PUSH1 0xD DUP4 PUSH2 0x118D JUMP JUMPDEST SWAP2 POP PUSH2 0x135D DUP3 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x137F DUP2 PUSH2 0x1346 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1390 DUP3 PUSH2 0xE9E JUMP JUMPDEST SWAP2 POP PUSH2 0x139B DUP4 PUSH2 0xE9E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x13B3 JUMPI PUSH2 0x13B2 PUSH2 0x12BE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C2 DUP2 PUSH2 0x10EC JUMP JUMPDEST DUP2 EQ PUSH2 0x13CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x13DD DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F8 JUMPI PUSH2 0x13F7 PUSH2 0xE96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1405 DUP5 DUP3 DUP6 ADD PUSH2 0x13CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x142C DUP3 PUSH2 0x140E JUMP JUMPDEST PUSH2 0x1436 DUP2 DUP6 PUSH2 0x1418 JUMP JUMPDEST SWAP4 POP PUSH2 0x1446 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x119D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x145D DUP3 DUP5 PUSH2 0x1422 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0x21 RETURNDATASIZE 0xE6 0xA7 SDIV 0xFC LOG0 PUSH28 0xA3A58EA560471395DD5D65262D584E6D08981D5FC7166764736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "319:1594:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1212:267;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4161:214:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:2;;;;;;;;;;;;;:::i;:::-;;2441:144;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1650:260:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1819:58:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;957:195:1;;;:::i;:::-;;3405:215:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1527:115:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1212:267;1307:6;1283:8;:20;1292:10;1283:20;;;;;;;;;;;;;;;;:30;;1275:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1373:6;1349:8;:20;1358:10;1349:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;1398:10;1390:28;;:36;1419:6;1390:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1452:10;1442:29;;;1464:6;1442:29;;;;;;:::i;:::-;;;;;;;;1212:267;:::o;4161:214:4:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;811:66:8::1;3803:32:4;;3796:39;;3708:134:::0;:::o;3155:101:2:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2441:144::-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;1650:260:1:-;1750:6;1726:8;:20;1735:10;1726:20;;;;;;;;;;;;;;;;:30;;1718:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1816:6;1792:8;:20;1801:10;1792:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;1841:4;1833:22;;:30;1856:6;1833:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1889:4;1879:23;;;1895:6;1879:23;;;;;;:::i;:::-;;;;;;;;1650:260;;:::o;1819:58:4:-;;;;;;;;;;;;;;;;;;;:::o;957:195:1:-;1033:1;1021:9;:13;1013:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;1087:9;1063:8;:20;1072:10;1063:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;1122:10;1112:32;;;1134:9;1112:32;;;;;;:::i;:::-;;;;;;;;957:195::o;3405:215:2:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1527:115:1:-;1593:7;1620:8;:14;1629:4;1620:14;;;;;;;;;;;;;;;;1613:21;;1527:115;;;:::o;4578:312:4:-;4667:6;4650:23;;4658:4;4650:23;;;:120;;;;4764:6;4728:42;;:32;:30;:32::i;:::-;:42;;;;4650:120;4633:251;;;4844:29;;;;;;;;;;;;;;4633:251;4578:312::o;779:116:1:-;2334:13:2;:11;:13::i;:::-;779:116:1;:::o;6032:538:4:-;6149:17;6131:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6127:437;;6535:17;6493:60;;;;;;;;;;;:::i;:::-;;;;;;;;6127:437;811:66:8;6233:32:4;;6225:4;:40;6221:120;;6321:4;6292:34;;;;;;;;;;;:::i;:::-;;;;;;;;6221:120;6354:54;6384:17;6403:4;6354:29;:54::i;:::-;6184:235;6032:538;;:::o;5007:213::-;5090:6;5073:23;;5081:4;5073:23;;;5069:145;;5174:29;;;;;;;;;;;;;;5069:145;5007:213::o;2658:162:2:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;1441:138:8:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;887:96:5:-;940:7;966:10;959:17;;887:96;:::o;1899:163:12:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:8:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3916:253:10:-;3999:12;4024;4038:23;4065:6;:19;;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;;;;3916:253;;;;:::o;6113:122:8:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;4437:582:10:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4878:1;4857:10;:17;:22;:49;;;;;4905:1;4883:6;:18;;;:23;4857:49;4853:119;;;4950:6;4933:24;;;;;;;;;;;:::i;:::-;;;;;;;;4853:119;4992:10;4985:17;;;;4605:408;4437:582;;;;;;:::o;5559:487::-;5710:1;5690:10;:17;:21;5686:354;;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;;;;;;;;;;;;;7:75:13;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:117::-;1641:1;1638;1631:12;1655:117;1764:1;1761;1754:12;1778:102;1819:6;1870:2;1866:7;1861:2;1854:5;1850:14;1846:28;1836:38;;1778:102;;;:::o;1886:180::-;1934:77;1931:1;1924:88;2031:4;2028:1;2021:15;2055:4;2052:1;2045:15;2072:281;2155:27;2177:4;2155:27;:::i;:::-;2147:6;2143:40;2285:6;2273:10;2270:22;2249:18;2237:10;2234:34;2231:62;2228:88;;;2296:18;;:::i;:::-;2228:88;2336:10;2332:2;2325:22;2115:238;2072:281;;:::o;2359:129::-;2393:6;2420:20;;:::i;:::-;2410:30;;2449:33;2477:4;2469:6;2449:33;:::i;:::-;2359:129;;;:::o;2494:307::-;2555:4;2645:18;2637:6;2634:30;2631:56;;;2667:18;;:::i;:::-;2631:56;2705:29;2727:6;2705:29;:::i;:::-;2697:37;;2789:4;2783;2779:15;2771:23;;2494:307;;;:::o;2807:148::-;2905:6;2900:3;2895;2882:30;2946:1;2937:6;2932:3;2928:16;2921:27;2807:148;;;:::o;2961:423::-;3038:5;3063:65;3079:48;3120:6;3079:48;:::i;:::-;3063:65;:::i;:::-;3054:74;;3151:6;3144:5;3137:21;3189:4;3182:5;3178:16;3227:3;3218:6;3213:3;3209:16;3206:25;3203:112;;;3234:79;;:::i;:::-;3203:112;3324:54;3371:6;3366:3;3361;3324:54;:::i;:::-;3044:340;2961:423;;;;;:::o;3403:338::-;3458:5;3507:3;3500:4;3492:6;3488:17;3484:27;3474:122;;3515:79;;:::i;:::-;3474:122;3632:6;3619:20;3657:78;3731:3;3723:6;3716:4;3708:6;3704:17;3657:78;:::i;:::-;3648:87;;3464:277;3403:338;;;;:::o;3747:652::-;3824:6;3832;3881:2;3869:9;3860:7;3856:23;3852:32;3849:119;;;3887:79;;:::i;:::-;3849:119;4007:1;4032:53;4077:7;4068:6;4057:9;4053:22;4032:53;:::i;:::-;4022:63;;3978:117;4162:2;4151:9;4147:18;4134:32;4193:18;4185:6;4182:30;4179:117;;;4215:79;;:::i;:::-;4179:117;4320:62;4374:7;4365:6;4354:9;4350:22;4320:62;:::i;:::-;4310:72;;4105:287;3747:652;;;;;:::o;4405:77::-;4442:7;4471:5;4460:16;;4405:77;;;:::o;4488:118::-;4575:24;4593:5;4575:24;:::i;:::-;4570:3;4563:37;4488:118;;:::o;4612:222::-;4705:4;4743:2;4732:9;4728:18;4720:26;;4756:71;4824:1;4813:9;4809:17;4800:6;4756:71;:::i;:::-;4612:222;;;;:::o;4840:118::-;4927:24;4945:5;4927:24;:::i;:::-;4922:3;4915:37;4840:118;;:::o;4964:222::-;5057:4;5095:2;5084:9;5080:18;5072:26;;5108:71;5176:1;5165:9;5161:17;5152:6;5108:71;:::i;:::-;4964:222;;;;:::o;5192:474::-;5260:6;5268;5317:2;5305:9;5296:7;5292:23;5288:32;5285:119;;;5323:79;;:::i;:::-;5285:119;5443:1;5468:53;5513:7;5504:6;5493:9;5489:22;5468:53;:::i;:::-;5458:63;;5414:117;5570:2;5596:53;5641:7;5632:6;5621:9;5617:22;5596:53;:::i;:::-;5586:63;;5541:118;5192:474;;;;;:::o;5672:99::-;5724:6;5758:5;5752:12;5742:22;;5672:99;;;:::o;5777:169::-;5861:11;5895:6;5890:3;5883:19;5935:4;5930:3;5926:14;5911:29;;5777:169;;;;:::o;5952:139::-;6041:6;6036:3;6031;6025:23;6082:1;6073:6;6068:3;6064:16;6057:27;5952:139;;;:::o;6097:377::-;6185:3;6213:39;6246:5;6213:39;:::i;:::-;6268:71;6332:6;6327:3;6268:71;:::i;:::-;6261:78;;6348:65;6406:6;6401:3;6394:4;6387:5;6383:16;6348:65;:::i;:::-;6438:29;6460:6;6438:29;:::i;:::-;6433:3;6429:39;6422:46;;6189:285;6097:377;;;;:::o;6480:313::-;6593:4;6631:2;6620:9;6616:18;6608:26;;6680:9;6674:4;6670:20;6666:1;6655:9;6651:17;6644:47;6708:78;6781:4;6772:6;6708:78;:::i;:::-;6700:86;;6480:313;;;;:::o;6799:329::-;6858:6;6907:2;6895:9;6886:7;6882:23;6878:32;6875:119;;;6913:79;;:::i;:::-;6875:119;7033:1;7058:53;7103:7;7094:6;7083:9;7079:22;7058:53;:::i;:::-;7048:63;;7004:117;6799:329;;;;:::o;7134:118::-;7221:24;7239:5;7221:24;:::i;:::-;7216:3;7209:37;7134:118;;:::o;7258:222::-;7351:4;7389:2;7378:9;7374:18;7366:26;;7402:71;7470:1;7459:9;7455:17;7446:6;7402:71;:::i;:::-;7258:222;;;;:::o;7486:170::-;7626:22;7622:1;7614:6;7610:14;7603:46;7486:170;:::o;7662:366::-;7804:3;7825:67;7889:2;7884:3;7825:67;:::i;:::-;7818:74;;7901:93;7990:3;7901:93;:::i;:::-;8019:2;8014:3;8010:12;8003:19;;7662:366;;;:::o;8034:419::-;8200:4;8238:2;8227:9;8223:18;8215:26;;8287:9;8281:4;8277:20;8273:1;8262:9;8258:17;8251:47;8315:131;8441:4;8315:131;:::i;:::-;8307:139;;8034:419;;;:::o;8459:180::-;8507:77;8504:1;8497:88;8604:4;8601:1;8594:15;8628:4;8625:1;8618:15;8645:194;8685:4;8705:20;8723:1;8705:20;:::i;:::-;8700:25;;8739:20;8757:1;8739:20;:::i;:::-;8734:25;;8783:1;8780;8776:9;8768:17;;8807:1;8801:4;8798:11;8795:37;;;8812:18;;:::i;:::-;8795:37;8645:194;;;;:::o;8845:163::-;8985:15;8981:1;8973:6;8969:14;8962:39;8845:163;:::o;9014:366::-;9156:3;9177:67;9241:2;9236:3;9177:67;:::i;:::-;9170:74;;9253:93;9342:3;9253:93;:::i;:::-;9371:2;9366:3;9362:12;9355:19;;9014:366;;;:::o;9386:419::-;9552:4;9590:2;9579:9;9575:18;9567:26;;9639:9;9633:4;9629:20;9625:1;9614:9;9610:17;9603:47;9667:131;9793:4;9667:131;:::i;:::-;9659:139;;9386:419;;;:::o;9811:191::-;9851:3;9870:20;9888:1;9870:20;:::i;:::-;9865:25;;9904:20;9922:1;9904:20;:::i;:::-;9899:25;;9947:1;9944;9940:9;9933:16;;9968:3;9965:1;9962:10;9959:36;;;9975:18;;:::i;:::-;9959:36;9811:191;;;;:::o;10008:122::-;10081:24;10099:5;10081:24;:::i;:::-;10074:5;10071:35;10061:63;;10120:1;10117;10110:12;10061:63;10008:122;:::o;10136:143::-;10193:5;10224:6;10218:13;10209:22;;10240:33;10267:5;10240:33;:::i;:::-;10136:143;;;;:::o;10285:351::-;10355:6;10404:2;10392:9;10383:7;10379:23;10375:32;10372:119;;;10410:79;;:::i;:::-;10372:119;10530:1;10555:64;10611:7;10602:6;10591:9;10587:22;10555:64;:::i;:::-;10545:74;;10501:128;10285:351;;;;:::o;10642:98::-;10693:6;10727:5;10721:12;10711:22;;10642:98;;;:::o;10746:147::-;10847:11;10884:3;10869:18;;10746:147;;;;:::o;10899:386::-;11003:3;11031:38;11063:5;11031:38;:::i;:::-;11085:88;11166:6;11161:3;11085:88;:::i;:::-;11078:95;;11182:65;11240:6;11235:3;11228:4;11221:5;11217:16;11182:65;:::i;:::-;11272:6;11267:3;11263:16;11256:23;;11007:278;10899:386;;;;:::o;11291:271::-;11421:3;11443:93;11532:3;11523:6;11443:93;:::i;:::-;11436:100;;11553:3;11546:10;;11291:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1055600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"deposit()": "infinite",
								"getBalance(address)": "2917",
								"owner()": "2656",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite",
								"_initialize(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 319,
									"end": 1913,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 576,
									"end": 632,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 576,
									"end": 632,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 576,
									"end": 632,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 576,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 576,
									"end": 632,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 576,
									"end": 632,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 576,
									"end": 632,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 576,
									"end": 632,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 576,
									"end": 632,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 576,
									"end": 632,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 576,
									"end": 632,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 601,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 613,
									"end": 623,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 601,
									"end": 612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 601,
									"end": 612,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 601,
									"end": 612,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 601,
									"end": 624,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 601,
									"end": 624,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 601,
									"end": 624,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 601,
									"end": 624,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 601,
									"end": 624,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 771,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 640,
									"end": 771,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4158,
									"end": 4188,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4191,
									"end": 4217,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 4191,
									"end": 4215,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 4191,
									"end": 4215,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4191,
									"end": 4215,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 4191,
									"end": 4217,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4191,
									"end": 4217,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 4191,
									"end": 4217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4191,
									"end": 4217,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 4191,
									"end": 4217,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4158,
									"end": 4217,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4158,
									"end": 4217,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4279,
									"end": 4298,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4302,
									"end": 4303,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4302,
									"end": 4317,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4302,
									"end": 4317,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4302,
									"end": 4317,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 4302,
									"end": 4317,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4302,
									"end": 4317,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 4302,
									"end": 4317,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4302,
									"end": 4317,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 4302,
									"end": 4317,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 4302,
									"end": 4317,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4302,
									"end": 4317,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 4302,
									"end": 4317,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 4302,
									"end": 4317,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4301,
									"end": 4317,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4279,
									"end": 4317,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4279,
									"end": 4317,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4327,
									"end": 4345,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4348,
									"end": 4349,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4327,
									"end": 4362,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4327,
									"end": 4362,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4704,
									"end": 4721,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4739,
									"end": 4740,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4724,
									"end": 4735,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4724,
									"end": 4740,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4724,
									"end": 4740,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4724,
									"end": 4740,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 4724,
									"end": 4758,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4724,
									"end": 4758,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4724,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 4724,
									"end": 4758,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4724,
									"end": 4758,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4744,
									"end": 4758,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4724,
									"end": 4758,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 4724,
									"end": 4758,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4704,
									"end": 4758,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4704,
									"end": 4758,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4768,
									"end": 4785,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4803,
									"end": 4804,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4788,
									"end": 4799,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4788,
									"end": 4804,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4788,
									"end": 4804,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4788,
									"end": 4804,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 4788,
									"end": 4838,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4788,
									"end": 4838,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4788,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 4788,
									"end": 4838,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4788,
									"end": 4838,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4837,
									"end": 4838,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4816,
									"end": 4820,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 4808,
									"end": 4833,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4808,
									"end": 4833,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4808,
									"end": 4833,
									"name": "EXTCODESIZE",
									"source": 3
								},
								{
									"begin": 4808,
									"end": 4838,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 4788,
									"end": 4838,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 4788,
									"end": 4838,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4768,
									"end": 4838,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4768,
									"end": 4838,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4854,
									"end": 4866,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4853,
									"end": 4866,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4853,
									"end": 4883,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4853,
									"end": 4883,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4853,
									"end": 4883,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 4853,
									"end": 4883,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4853,
									"end": 4883,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4871,
									"end": 4883,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4870,
									"end": 4883,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4853,
									"end": 4883,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 4853,
									"end": 4883,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4849,
									"end": 4940,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4849,
									"end": 4940,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 4849,
									"end": 4940,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4906,
									"end": 4929,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4906,
									"end": 4929,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4906,
									"end": 4929,
									"name": "PUSH",
									"source": 3,
									"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4906,
									"end": 4929,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4906,
									"end": 4929,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4906,
									"end": 4929,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 4906,
									"end": 4929,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4906,
									"end": 4929,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4906,
									"end": 4929,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4906,
									"end": 4929,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4906,
									"end": 4929,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4906,
									"end": 4929,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 4906,
									"end": 4929,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4906,
									"end": 4929,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 4849,
									"end": 4940,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 4849,
									"end": 4940,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4949,
									"end": 4950,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4949,
									"end": 4963,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4949,
									"end": 4963,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4949,
									"end": 4963,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4949,
									"end": 4967,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4981,
									"end": 4995,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4977,
									"end": 5044,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4977,
									"end": 5044,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 4977,
									"end": 5044,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5029,
									"end": 5033,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 5011,
									"end": 5012,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5026,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5011,
									"end": 5026,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5026,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5011,
									"end": 5033,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4977,
									"end": 5044,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 4977,
									"end": 5044,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 707,
									"end": 728,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 722,
									"end": 727,
									"modifierDepth": 1,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 707,
									"end": 721,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 707,
									"end": 721,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 707,
									"end": 721,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 707,
									"end": 728,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 707,
									"end": 728,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 707,
									"end": 728,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 707,
									"end": 728,
									"modifierDepth": 1,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 707,
									"end": 728,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 739,
									"end": 763,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 739,
									"end": 761,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 739,
									"end": 761,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 739,
									"end": 761,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 739,
									"end": 763,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 739,
									"end": 763,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 739,
									"end": 763,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 739,
									"end": 763,
									"modifierDepth": 1,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 739,
									"end": 763,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5068,
									"end": 5082,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5064,
									"end": 5165,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5064,
									"end": 5165,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5064,
									"end": 5165,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5116,
									"end": 5121,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5098,
									"end": 5099,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5113,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5098,
									"end": 5113,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5113,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5098,
									"end": 5121,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "PUSH",
									"source": 3,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 5152,
									"end": 5153,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 5140,
									"end": 5154,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "LOG1",
									"source": 3
								},
								{
									"begin": 5064,
									"end": 5165,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5064,
									"end": 5165,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4092,
									"end": 5171,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4092,
									"end": 5171,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4092,
									"end": 5171,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4092,
									"end": 5171,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4092,
									"end": 5171,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 771,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 771,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9071,
									"end": 9276,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 9071,
									"end": 9276,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 9129,
									"end": 9159,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 9171,
									"end": 9183,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 9186,
									"end": 9213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 9186,
									"end": 9211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 9186,
									"end": 9211,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 9186,
									"end": 9211,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 9186,
									"end": 9213,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 9186,
									"end": 9213,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 9186,
									"end": 9213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 9186,
									"end": 9213,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 9186,
									"end": 9213,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 9171,
									"end": 9213,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 9171,
									"end": 9213,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 9256,
									"end": 9260,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 9246,
									"end": 9260,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 9246,
									"end": 9260,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 9232,
									"end": 9270,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 9071,
									"end": 9276,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 9071,
									"end": 9276,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1847,
									"end": 1974,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1847,
									"end": 1974,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6929,
									"end": 6949,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 6929,
									"end": 6947,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 6929,
									"end": 6947,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6929,
									"end": 6947,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 6929,
									"end": 6949,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6929,
									"end": 6949,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 6929,
									"end": 6949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6929,
									"end": 6949,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 6929,
									"end": 6949,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1929,
									"end": 1967,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1954,
									"end": 1966,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1929,
									"end": 1953,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1929,
									"end": 1953,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1929,
									"end": 1953,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1929,
									"end": 1967,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1929,
									"end": 1967,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1929,
									"end": 1967,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1929,
									"end": 1967,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1929,
									"end": 1967,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1847,
									"end": 1974,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1847,
									"end": 1974,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2970,
									"end": 3037,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2970,
									"end": 3037,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6929,
									"end": 6949,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6929,
									"end": 6947,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 6929,
									"end": 6947,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6929,
									"end": 6947,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 6929,
									"end": 6949,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6929,
									"end": 6949,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 6929,
									"end": 6949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6929,
									"end": 6949,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6929,
									"end": 6949,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2970,
									"end": 3037,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8819,
									"end": 8941,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 8819,
									"end": 8941,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8887,
									"end": 8894,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3147,
									"end": 3213,
									"name": "PUSH",
									"source": 3,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 8913,
									"end": 8934,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8913,
									"end": 8934,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 8906,
									"end": 8934,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 8906,
									"end": 8934,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 8819,
									"end": 8941,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 8819,
									"end": 8941,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7082,
									"end": 7223,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7082,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7149,
									"end": 7166,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7149,
									"end": 7164,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 7149,
									"end": 7164,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7149,
									"end": 7164,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7149,
									"end": 7166,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7149,
									"end": 7166,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7149,
									"end": 7166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7149,
									"end": 7166,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7149,
									"end": 7166,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7144,
									"end": 7217,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 7144,
									"end": 7217,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7189,
									"end": 7206,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7189,
									"end": 7206,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7189,
									"end": 7206,
									"name": "PUSH",
									"source": 3,
									"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7189,
									"end": 7206,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7189,
									"end": 7206,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7189,
									"end": 7206,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7189,
									"end": 7206,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7189,
									"end": 7206,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7189,
									"end": 7206,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7189,
									"end": 7206,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7189,
									"end": 7206,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7189,
									"end": 7206,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7189,
									"end": 7206,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7189,
									"end": 7206,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7144,
									"end": 7217,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 7144,
									"end": 7217,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7082,
									"end": 7223,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 2215,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1980,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6929,
									"end": 6949,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6929,
									"end": 6947,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 6929,
									"end": 6947,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6929,
									"end": 6947,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 6929,
									"end": 6949,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6929,
									"end": 6949,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 6929,
									"end": 6949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6929,
									"end": 6949,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6929,
									"end": 6949,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2100,
									"end": 2101,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2076,
									"end": 2102,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2076,
									"end": 2102,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2076,
									"end": 2088,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2076,
									"end": 2102,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2076,
									"end": 2102,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2076,
									"end": 2102,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2072,
									"end": 2167,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 2072,
									"end": 2167,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2153,
									"end": 2154,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 2125,
									"end": 2156,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2125,
									"end": 2156,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2072,
									"end": 2167,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 2072,
									"end": 2167,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2176,
									"end": 2208,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 2195,
									"end": 2207,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2176,
									"end": 2194,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 2176,
									"end": 2194,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2176,
									"end": 2194,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2176,
									"end": 2208,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2176,
									"end": 2208,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 2176,
									"end": 2208,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2176,
									"end": 2208,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 2176,
									"end": 2208,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8485,
									"end": 8605,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 8485,
									"end": 8605,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8535,
									"end": 8539,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8558,
									"end": 8584,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 8558,
									"end": 8582,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 8558,
									"end": 8582,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 8558,
									"end": 8582,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 8558,
									"end": 8584,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 8558,
									"end": 8584,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 8558,
									"end": 8584,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 8558,
									"end": 8584,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 8558,
									"end": 8584,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8558,
									"end": 8598,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8558,
									"end": 8598,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 8558,
									"end": 8598,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 8558,
									"end": 8598,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 8558,
									"end": 8598,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 8558,
									"end": 8598,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 8558,
									"end": 8598,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 8558,
									"end": 8598,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 8558,
									"end": 8598,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 8558,
									"end": 8598,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 8558,
									"end": 8598,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 8558,
									"end": 8598,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 8551,
									"end": 8598,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 8551,
									"end": 8598,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 8485,
									"end": 8605,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 8485,
									"end": 8605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3774,
									"end": 4022,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 3774,
									"end": 4022,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3847,
									"end": 3871,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3874,
									"end": 3894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 3874,
									"end": 3892,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 3874,
									"end": 3892,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3874,
									"end": 3892,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 3874,
									"end": 3894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3874,
									"end": 3894,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 3874,
									"end": 3894,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3874,
									"end": 3894,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 3874,
									"end": 3894,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3847,
									"end": 3894,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3847,
									"end": 3894,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3904,
									"end": 3920,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3923,
									"end": 3924,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3923,
									"end": 3931,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3923,
									"end": 3931,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3923,
									"end": 3931,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3923,
									"end": 3931,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3923,
									"end": 3931,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3923,
									"end": 3931,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3923,
									"end": 3931,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3923,
									"end": 3931,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3923,
									"end": 3931,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3923,
									"end": 3931,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 3923,
									"end": 3931,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3923,
									"end": 3931,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3904,
									"end": 3931,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3904,
									"end": 3931,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3952,
									"end": 3960,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3942,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3949,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3941,
									"end": 3949,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3949,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3941,
									"end": 3960,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4006,
									"end": 4014,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3975,
									"end": 4015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3975,
									"end": 4015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3996,
									"end": 4004,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3975,
									"end": 4015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3975,
									"end": 4015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3975,
									"end": 4015,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3975,
									"end": 4015,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3975,
									"end": 4015,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3975,
									"end": 4015,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3975,
									"end": 4015,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3975,
									"end": 4015,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3975,
									"end": 4015,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3975,
									"end": 4015,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3975,
									"end": 4015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3975,
									"end": 4015,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 3837,
									"end": 4022,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3837,
									"end": 4022,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3774,
									"end": 4022,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3774,
									"end": 4022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1192,
									"end": 1351,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 1192,
									"end": 1351,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1244,
									"end": 1268,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1313,
									"end": 1335,
									"name": "PUSH",
									"source": 2,
									"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
								},
								{
									"begin": 1303,
									"end": 1335,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1303,
									"end": 1335,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1192,
									"end": 1351,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1192,
									"end": 1351,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 92,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 7,
									"end": 92,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 52,
									"end": 59,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 86,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 70,
									"end": 86,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 70,
									"end": 86,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 92,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7,
									"end": 92,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 92,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 92,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 98,
									"end": 199,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 98,
									"end": 199,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 134,
									"end": 141,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 192,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 167,
									"end": 172,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 163,
									"end": 193,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 152,
									"end": 193,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 152,
									"end": 193,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 98,
									"end": 199,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 98,
									"end": 199,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 98,
									"end": 199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 98,
									"end": 199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 205,
									"end": 265,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 205,
									"end": 265,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 233,
									"end": 236,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 254,
									"end": 259,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 247,
									"end": 259,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 247,
									"end": 259,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 205,
									"end": 265,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 205,
									"end": 265,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 205,
									"end": 265,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 205,
									"end": 265,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 271,
									"end": 427,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 271,
									"end": 427,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 328,
									"end": 337,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 361,
									"end": 421,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 378,
									"end": 420,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 387,
									"end": 419,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 413,
									"end": 418,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 387,
									"end": 419,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 387,
									"end": 419,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 387,
									"end": 419,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 387,
									"end": 419,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 378,
									"end": 420,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 378,
									"end": 420,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 378,
									"end": 420,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 378,
									"end": 420,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 361,
									"end": 421,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 361,
									"end": 421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 361,
									"end": 421,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 361,
									"end": 421,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 348,
									"end": 421,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 348,
									"end": 421,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 271,
									"end": 427,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 271,
									"end": 427,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 271,
									"end": 427,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 271,
									"end": 427,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 433,
									"end": 578,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 433,
									"end": 578,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 527,
									"end": 571,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 565,
									"end": 570,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 527,
									"end": 571,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 527,
									"end": 571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 527,
									"end": 571,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 527,
									"end": 571,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 522,
									"end": 525,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 515,
									"end": 572,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 433,
									"end": 578,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 433,
									"end": 578,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 433,
									"end": 578,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 584,
									"end": 820,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 584,
									"end": 820,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 684,
									"end": 688,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 724,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 711,
									"end": 720,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 707,
									"end": 725,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 699,
									"end": 725,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 699,
									"end": 725,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 735,
									"end": 813,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 810,
									"end": 811,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 799,
									"end": 808,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 795,
									"end": 812,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 786,
									"end": 792,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 735,
									"end": 813,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 735,
									"end": 813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 735,
									"end": 813,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 735,
									"end": 813,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 584,
									"end": 820,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 584,
									"end": 820,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 584,
									"end": 820,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 584,
									"end": 820,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 584,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 826,
									"end": 952,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 826,
									"end": 952,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 903,
									"end": 945,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 896,
									"end": 901,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 892,
									"end": 946,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 881,
									"end": 946,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 881,
									"end": 946,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 826,
									"end": 952,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 826,
									"end": 952,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 826,
									"end": 952,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 826,
									"end": 952,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 958,
									"end": 1054,
									"name": "tag",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 958,
									"end": 1054,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 995,
									"end": 1002,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1024,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 1042,
									"end": 1047,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1024,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 1024,
									"end": 1048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1024,
									"end": 1048,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 1024,
									"end": 1048,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1013,
									"end": 1048,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1013,
									"end": 1048,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 958,
									"end": 1054,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 958,
									"end": 1054,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 958,
									"end": 1054,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 958,
									"end": 1054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1060,
									"end": 1178,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 1060,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1147,
									"end": 1171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1142,
									"end": 1145,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1172,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1060,
									"end": 1178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1060,
									"end": 1178,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1060,
									"end": 1178,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1184,
									"end": 1406,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 1184,
									"end": 1406,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1277,
									"end": 1281,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1317,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1304,
									"end": 1313,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1318,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1292,
									"end": 1318,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1292,
									"end": 1318,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1328,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 1396,
									"end": 1397,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1385,
									"end": 1394,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1381,
									"end": 1398,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1372,
									"end": 1378,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1328,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 1328,
									"end": 1399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1328,
									"end": 1399,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 1328,
									"end": 1399,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1184,
									"end": 1406,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1184,
									"end": 1406,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1184,
									"end": 1406,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1184,
									"end": 1406,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1184,
									"end": 1406,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "682"
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 1913,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cb213de6a705fca07ba3a58ea560471395dd5d65262d584e6d08981d5fc7166764736f6c634300081a0033",
									".code": [
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "AD3CB1CC"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "D0E30DB0"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "F8B2CB4F"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "2E1A7D4D"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "4F1EF286"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "52D1902D"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 319,
											"end": 1913,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1212,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1212,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1650,
											"end": 1910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1650,
											"end": 1910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 957,
											"end": 1152,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 957,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 957,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 957,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 957,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 957,
											"end": 1152,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 957,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 957,
											"end": 1152,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1527,
											"end": 1642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1527,
											"end": 1642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1527,
											"end": 1642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1302,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1313,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1313,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1275,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1275,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1368,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1379,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1349,
											"end": 1379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1349,
											"end": 1379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1379,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1349,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1379,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1379,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1408,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1418,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1390,
											"end": 1418,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 1419,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1462,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "PUSH",
											"source": 1,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 1464,
											"end": 1470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1442,
											"end": 1471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1471,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 811,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1746,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1756,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1756,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1718,
											"end": 1781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1718,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1811,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1792,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1833,
											"end": 1855,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 1856,
											"end": 1862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 1895,
											"end": 1901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1879,
											"end": 1902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1902,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 957,
											"end": 1152,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 957,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1034,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1013,
											"end": 1052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1013,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1096,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1082,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1063,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1132,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "PUSH",
											"source": 1,
											"value": "2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4"
										},
										{
											"begin": 1134,
											"end": 1143,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1112,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 957,
											"end": 1152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1633,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4578,
											"end": 4890,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4578,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "682"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4764,
											"end": 4770,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "682"
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4728,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4728,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 4,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 779,
											"end": 895,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 779,
											"end": 895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 779,
											"end": 895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 779,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6149,
											"end": 6166,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "PUSH",
											"source": 4,
											"value": "52D1902D"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 6131,
											"end": 6183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6535,
											"end": 6552,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 4,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 6493,
											"end": 6553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 8,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6233,
											"end": 6265,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6265,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6229,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6265,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6321,
											"end": 6325,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 4,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 6292,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6384,
											"end": 6401,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6403,
											"end": 6407,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6354,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6184,
											"end": 6419,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6032,
											"end": 6570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5007,
											"end": 5220,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5007,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5096,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "682"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5081,
											"end": 5085,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 4,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5007,
											"end": 5220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 8,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 1519,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2472,
											"end": 2473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2462,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1899,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1851,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1805,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 8,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 1872,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3999,
											"end": 4011,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4089,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 4065,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DELEGATECALL",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4149,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4151,
											"end": 4161,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4107,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 4107,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3916,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4593,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4610,
											"end": 4617,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 4641,
											"end": 4651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 4633,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4879,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4867,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4857,
											"end": 4879,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4889,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4906,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 10,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 4933,
											"end": 4957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 5019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5700,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5958,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5930,
											"end": 5940,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 5959,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 10,
											"value": "D6BDA27500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 1332,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1259,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 1487,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 1649,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 1532,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1641,
											"end": 1642,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1639,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1631,
											"end": 1643,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1655,
											"end": 1772,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1655,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1765,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1762,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1778,
											"end": 1880,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 1778,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1819,
											"end": 1825,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1872,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1866,
											"end": 1873,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1854,
											"end": 1859,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1850,
											"end": 1864,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1846,
											"end": 1874,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1836,
											"end": 1874,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1836,
											"end": 1874,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1778,
											"end": 1880,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1778,
											"end": 1880,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1778,
											"end": 1880,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1778,
											"end": 1880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1886,
											"end": 2066,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 1886,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1934,
											"end": 2011,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1931,
											"end": 1932,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 2012,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2031,
											"end": 2035,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2055,
											"end": 2059,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2052,
											"end": 2053,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2072,
											"end": 2353,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 2072,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2155,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 2177,
											"end": 2181,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2155,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 2155,
											"end": 2182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2155,
											"end": 2182,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 2155,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2147,
											"end": 2153,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2183,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2273,
											"end": 2283,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2270,
											"end": 2292,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2234,
											"end": 2268,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2231,
											"end": 2293,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2228,
											"end": 2316,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2228,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 2228,
											"end": 2316,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 2296,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2228,
											"end": 2316,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 2228,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2346,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2332,
											"end": 2334,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2347,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2353,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2072,
											"end": 2353,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2072,
											"end": 2353,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2072,
											"end": 2353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2359,
											"end": 2488,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 2359,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2420,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 2420,
											"end": 2440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2420,
											"end": 2440,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2420,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2410,
											"end": 2440,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2410,
											"end": 2440,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2449,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 2477,
											"end": 2481,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2449,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 2449,
											"end": 2482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2449,
											"end": 2482,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 2449,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2359,
											"end": 2488,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2359,
											"end": 2488,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2359,
											"end": 2488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2359,
											"end": 2488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2801,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 2494,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2555,
											"end": 2559,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2637,
											"end": 2643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2634,
											"end": 2664,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2687,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 2631,
											"end": 2687,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2667,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 2667,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 2667,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2667,
											"end": 2685,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 2667,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2687,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 2631,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 2727,
											"end": 2733,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 2705,
											"end": 2734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2734,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 2705,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2697,
											"end": 2734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2697,
											"end": 2734,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2789,
											"end": 2793,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2787,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2779,
											"end": 2794,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2771,
											"end": 2794,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2771,
											"end": 2794,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2801,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2801,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2801,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2807,
											"end": 2955,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 2807,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2905,
											"end": 2911,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2900,
											"end": 2903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2895,
											"end": 2898,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2912,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 2946,
											"end": 2947,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2943,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2932,
											"end": 2935,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2807,
											"end": 2955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2807,
											"end": 2955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2807,
											"end": 2955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2807,
											"end": 2955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2961,
											"end": 3384,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 2961,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3038,
											"end": 3043,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 3079,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3120,
											"end": 3126,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3079,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 3079,
											"end": 3127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3079,
											"end": 3127,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3079,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3063,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 3063,
											"end": 3128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3063,
											"end": 3128,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 3063,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3054,
											"end": 3128,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3054,
											"end": 3128,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3157,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3137,
											"end": 3158,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3189,
											"end": 3193,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3182,
											"end": 3187,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3194,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3227,
											"end": 3230,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3218,
											"end": 3224,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3216,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3209,
											"end": 3225,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3206,
											"end": 3231,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3203,
											"end": 3315,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3203,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 3203,
											"end": 3315,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3234,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 3234,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 3234,
											"end": 3313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3234,
											"end": 3313,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 3234,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3203,
											"end": 3315,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 3203,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3324,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3366,
											"end": 3369,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3361,
											"end": 3364,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3324,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 3324,
											"end": 3378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3324,
											"end": 3378,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 3324,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3044,
											"end": 3384,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2961,
											"end": 3384,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2961,
											"end": 3384,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2961,
											"end": 3384,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2961,
											"end": 3384,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2961,
											"end": 3384,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2961,
											"end": 3384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3741,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 3403,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3463,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3510,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3500,
											"end": 3504,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3492,
											"end": 3498,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3484,
											"end": 3511,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 3474,
											"end": 3596,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 3515,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 3515,
											"end": 3594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3594,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 3515,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3596,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 3474,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3632,
											"end": 3638,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3639,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3657,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3729,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3716,
											"end": 3720,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3708,
											"end": 3714,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3704,
											"end": 3721,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3657,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 3657,
											"end": 3735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3657,
											"end": 3735,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 3657,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3648,
											"end": 3735,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3648,
											"end": 3735,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3464,
											"end": 3741,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3741,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3741,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3741,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3741,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 4399,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3832,
											"end": 3838,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3881,
											"end": 3883,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 3878,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3867,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3856,
											"end": 3879,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3852,
											"end": 3884,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3849,
											"end": 3968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3849,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 3849,
											"end": 3968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3887,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 3887,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 3887,
											"end": 3966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3887,
											"end": 3966,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 3887,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3849,
											"end": 3968,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 3849,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4008,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 4077,
											"end": 4084,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4068,
											"end": 4074,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4057,
											"end": 4066,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4053,
											"end": 4075,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4032,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 4032,
											"end": 4085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4032,
											"end": 4085,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 4032,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4022,
											"end": 4085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4022,
											"end": 4085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3978,
											"end": 4095,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4162,
											"end": 4164,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4151,
											"end": 4160,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4147,
											"end": 4165,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4134,
											"end": 4166,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4211,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4185,
											"end": 4191,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4182,
											"end": 4212,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4296,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 4179,
											"end": 4296,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4215,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 4215,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 4215,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4215,
											"end": 4294,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 4215,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4296,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 4179,
											"end": 4296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 4374,
											"end": 4381,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4365,
											"end": 4371,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4354,
											"end": 4363,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4350,
											"end": 4372,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 4320,
											"end": 4382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4310,
											"end": 4382,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4310,
											"end": 4382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4392,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 4399,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 4399,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 4399,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 4399,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 4399,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 4399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4405,
											"end": 4482,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 4405,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4449,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4471,
											"end": 4476,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4460,
											"end": 4476,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4460,
											"end": 4476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4405,
											"end": 4482,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4405,
											"end": 4482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4405,
											"end": 4482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4405,
											"end": 4482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4488,
											"end": 4606,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 4488,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4575,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 4593,
											"end": 4598,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4575,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 4575,
											"end": 4599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4575,
											"end": 4599,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 4575,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4570,
											"end": 4573,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4600,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4488,
											"end": 4606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4488,
											"end": 4606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4488,
											"end": 4606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4612,
											"end": 4834,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 4612,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4705,
											"end": 4709,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4746,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4746,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 4824,
											"end": 4825,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 4822,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4809,
											"end": 4826,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4800,
											"end": 4806,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 4756,
											"end": 4827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4827,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 4756,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4612,
											"end": 4834,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4612,
											"end": 4834,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4612,
											"end": 4834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4612,
											"end": 4834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4612,
											"end": 4834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4840,
											"end": 4958,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 4840,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 4945,
											"end": 4950,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 4927,
											"end": 4951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 4951,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 4927,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4922,
											"end": 4925,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4915,
											"end": 4952,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4840,
											"end": 4958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4840,
											"end": 4958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4840,
											"end": 4958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 5186,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 4964,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5061,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5097,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5084,
											"end": 5093,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5072,
											"end": 5098,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5072,
											"end": 5098,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 5176,
											"end": 5177,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5174,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5178,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5152,
											"end": 5158,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 5108,
											"end": 5179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 5186,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 5186,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 5186,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 5186,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 5186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5192,
											"end": 5666,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 5192,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5260,
											"end": 5266,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5317,
											"end": 5319,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5305,
											"end": 5314,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5296,
											"end": 5303,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5315,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5288,
											"end": 5320,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5285,
											"end": 5404,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5285,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 5285,
											"end": 5404,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5323,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5323,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 5323,
											"end": 5402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5323,
											"end": 5402,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5323,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5285,
											"end": 5404,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 5285,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5443,
											"end": 5444,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5468,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 5513,
											"end": 5520,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5504,
											"end": 5510,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5493,
											"end": 5502,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5489,
											"end": 5511,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5468,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 5468,
											"end": 5521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5468,
											"end": 5521,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 5468,
											"end": 5521,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5458,
											"end": 5521,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5458,
											"end": 5521,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5414,
											"end": 5531,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5570,
											"end": 5572,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 5641,
											"end": 5648,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5632,
											"end": 5638,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5621,
											"end": 5630,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5617,
											"end": 5639,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 5596,
											"end": 5649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 5596,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5586,
											"end": 5649,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5586,
											"end": 5649,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5541,
											"end": 5659,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5192,
											"end": 5666,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5192,
											"end": 5666,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5192,
											"end": 5666,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5192,
											"end": 5666,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5192,
											"end": 5666,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5192,
											"end": 5666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5672,
											"end": 5771,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 5672,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5758,
											"end": 5763,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5752,
											"end": 5764,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5742,
											"end": 5764,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5742,
											"end": 5764,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5672,
											"end": 5771,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5672,
											"end": 5771,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5672,
											"end": 5771,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5672,
											"end": 5771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5946,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 5777,
											"end": 5946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5861,
											"end": 5872,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5895,
											"end": 5901,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5890,
											"end": 5893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5883,
											"end": 5902,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5935,
											"end": 5939,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5930,
											"end": 5933,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5926,
											"end": 5940,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5911,
											"end": 5940,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5911,
											"end": 5940,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5946,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5946,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5952,
											"end": 6091,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 5952,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6041,
											"end": 6047,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6036,
											"end": 6039,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6031,
											"end": 6034,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6025,
											"end": 6048,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 6082,
											"end": 6083,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6073,
											"end": 6079,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6068,
											"end": 6071,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6064,
											"end": 6080,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6057,
											"end": 6084,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5952,
											"end": 6091,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5952,
											"end": 6091,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5952,
											"end": 6091,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5952,
											"end": 6091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6097,
											"end": 6474,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 6097,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6185,
											"end": 6188,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 6246,
											"end": 6251,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6213,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 6213,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6213,
											"end": 6252,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 6213,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6268,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 6332,
											"end": 6338,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6327,
											"end": 6330,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6268,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 6268,
											"end": 6339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6268,
											"end": 6339,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 6268,
											"end": 6339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6261,
											"end": 6339,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6261,
											"end": 6339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6348,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 6406,
											"end": 6412,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6401,
											"end": 6404,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6394,
											"end": 6398,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6387,
											"end": 6392,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6383,
											"end": 6399,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6348,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 6348,
											"end": 6413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6348,
											"end": 6413,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 6348,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6438,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 6460,
											"end": 6466,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6438,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 6438,
											"end": 6467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6438,
											"end": 6467,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 6438,
											"end": 6467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6433,
											"end": 6436,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6429,
											"end": 6468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6422,
											"end": 6468,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6422,
											"end": 6468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6189,
											"end": 6474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6097,
											"end": 6474,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6097,
											"end": 6474,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6097,
											"end": 6474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6097,
											"end": 6474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6097,
											"end": 6474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6480,
											"end": 6793,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6480,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6593,
											"end": 6597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6631,
											"end": 6633,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6620,
											"end": 6629,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6616,
											"end": 6634,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6608,
											"end": 6634,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6608,
											"end": 6634,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6680,
											"end": 6689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6670,
											"end": 6690,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6666,
											"end": 6667,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6655,
											"end": 6664,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6651,
											"end": 6668,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6644,
											"end": 6691,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6708,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 6781,
											"end": 6785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6708,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 6708,
											"end": 6786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6708,
											"end": 6786,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 6708,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6700,
											"end": 6786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6700,
											"end": 6786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6480,
											"end": 6793,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6480,
											"end": 6793,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6480,
											"end": 6793,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6480,
											"end": 6793,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6480,
											"end": 6793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6799,
											"end": 7128,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 6799,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6858,
											"end": 6864,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6907,
											"end": 6909,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6895,
											"end": 6904,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6886,
											"end": 6893,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6905,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6878,
											"end": 6910,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6875,
											"end": 6994,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6875,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 6875,
											"end": 6994,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 6913,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 6913,
											"end": 6992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 6992,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 6913,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6875,
											"end": 6994,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 6875,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7033,
											"end": 7034,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7058,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 7103,
											"end": 7110,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7094,
											"end": 7100,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7083,
											"end": 7092,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7079,
											"end": 7101,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7058,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 7058,
											"end": 7111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7058,
											"end": 7111,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 7058,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7048,
											"end": 7111,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7048,
											"end": 7111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7004,
											"end": 7121,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6799,
											"end": 7128,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6799,
											"end": 7128,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6799,
											"end": 7128,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6799,
											"end": 7128,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6799,
											"end": 7128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7134,
											"end": 7252,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 7134,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 7239,
											"end": 7244,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 7221,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7245,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 7221,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7216,
											"end": 7219,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7246,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7134,
											"end": 7252,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7134,
											"end": 7252,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7134,
											"end": 7252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7258,
											"end": 7480,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 7258,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 7355,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7389,
											"end": 7391,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7378,
											"end": 7387,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7374,
											"end": 7392,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7366,
											"end": 7392,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7366,
											"end": 7392,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7402,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 7470,
											"end": 7471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7455,
											"end": 7472,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7446,
											"end": 7452,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7402,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 7402,
											"end": 7473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7402,
											"end": 7473,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 7402,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7258,
											"end": 7480,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7258,
											"end": 7480,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7258,
											"end": 7480,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7258,
											"end": 7480,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7258,
											"end": 7480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7486,
											"end": 7656,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 7486,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7626,
											"end": 7648,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 7622,
											"end": 7623,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7614,
											"end": 7620,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7624,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7603,
											"end": 7649,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7486,
											"end": 7656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7486,
											"end": 7656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7662,
											"end": 8028,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 7662,
											"end": 8028,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7804,
											"end": 7807,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7825,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 7889,
											"end": 7891,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 7884,
											"end": 7887,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 7825,
											"end": 7892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7892,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 7825,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7818,
											"end": 7892,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7818,
											"end": 7892,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7901,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 7990,
											"end": 7993,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7901,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 7901,
											"end": 7994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7901,
											"end": 7994,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 7901,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8019,
											"end": 8021,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8014,
											"end": 8017,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8010,
											"end": 8022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8003,
											"end": 8022,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8003,
											"end": 8022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7662,
											"end": 8028,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7662,
											"end": 8028,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7662,
											"end": 8028,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7662,
											"end": 8028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8034,
											"end": 8453,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 8034,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8200,
											"end": 8204,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8238,
											"end": 8240,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8227,
											"end": 8236,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8223,
											"end": 8241,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8215,
											"end": 8241,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8215,
											"end": 8241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8287,
											"end": 8296,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8281,
											"end": 8285,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8277,
											"end": 8297,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8273,
											"end": 8274,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8262,
											"end": 8271,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8258,
											"end": 8275,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8251,
											"end": 8298,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8315,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 8441,
											"end": 8445,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8315,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 8315,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8315,
											"end": 8446,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 8315,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8307,
											"end": 8446,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8307,
											"end": 8446,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8034,
											"end": 8453,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8034,
											"end": 8453,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8034,
											"end": 8453,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8034,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8459,
											"end": 8639,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 8459,
											"end": 8639,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8507,
											"end": 8584,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8504,
											"end": 8505,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8497,
											"end": 8585,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8604,
											"end": 8608,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 8601,
											"end": 8602,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8594,
											"end": 8609,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8628,
											"end": 8632,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8625,
											"end": 8626,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8618,
											"end": 8633,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8645,
											"end": 8839,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 8645,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8685,
											"end": 8689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 8723,
											"end": 8724,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 8705,
											"end": 8725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8700,
											"end": 8725,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8700,
											"end": 8725,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8739,
											"end": 8759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 8757,
											"end": 8758,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8739,
											"end": 8759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 8739,
											"end": 8759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8739,
											"end": 8759,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 8739,
											"end": 8759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8734,
											"end": 8759,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8734,
											"end": 8759,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8783,
											"end": 8784,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8780,
											"end": 8781,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8776,
											"end": 8785,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8768,
											"end": 8785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8768,
											"end": 8785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8807,
											"end": 8808,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8801,
											"end": 8805,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8798,
											"end": 8809,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8795,
											"end": 8832,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8795,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 8795,
											"end": 8832,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8812,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 8812,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 8812,
											"end": 8830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8812,
											"end": 8830,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 8812,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8795,
											"end": 8832,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 8795,
											"end": 8832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8645,
											"end": 8839,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8645,
											"end": 8839,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8645,
											"end": 8839,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8645,
											"end": 8839,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8645,
											"end": 8839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 9008,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 8845,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8985,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "4D7573742073656E642045544800000000000000000000000000000000000000"
										},
										{
											"begin": 8981,
											"end": 8982,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8973,
											"end": 8979,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8969,
											"end": 8983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8962,
											"end": 9001,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 9008,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 9008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9014,
											"end": 9380,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 9014,
											"end": 9380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9156,
											"end": 9159,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 9241,
											"end": 9243,
											"name": "PUSH",
											"source": 13,
											"value": "D"
										},
										{
											"begin": 9236,
											"end": 9239,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 9177,
											"end": 9244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9170,
											"end": 9244,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9170,
											"end": 9244,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9253,
											"end": 9346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 9342,
											"end": 9345,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9253,
											"end": 9346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 9253,
											"end": 9346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9253,
											"end": 9346,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 9253,
											"end": 9346,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9371,
											"end": 9373,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9366,
											"end": 9369,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9362,
											"end": 9374,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9355,
											"end": 9374,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9355,
											"end": 9374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9014,
											"end": 9380,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9014,
											"end": 9380,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9014,
											"end": 9380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9014,
											"end": 9380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9386,
											"end": 9805,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 9386,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9552,
											"end": 9556,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9590,
											"end": 9592,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9579,
											"end": 9588,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9575,
											"end": 9593,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9567,
											"end": 9593,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9567,
											"end": 9593,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9639,
											"end": 9648,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9633,
											"end": 9637,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9629,
											"end": 9649,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9625,
											"end": 9626,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9614,
											"end": 9623,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9610,
											"end": 9627,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9603,
											"end": 9650,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9667,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 9793,
											"end": 9797,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9667,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 9667,
											"end": 9798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9667,
											"end": 9798,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 9667,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9659,
											"end": 9798,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9659,
											"end": 9798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9386,
											"end": 9805,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9386,
											"end": 9805,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9386,
											"end": 9805,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9386,
											"end": 9805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9811,
											"end": 10002,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 9811,
											"end": 10002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9851,
											"end": 9854,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9870,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 9888,
											"end": 9889,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9870,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 9870,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9870,
											"end": 9890,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 9870,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9865,
											"end": 9890,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9865,
											"end": 9890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9904,
											"end": 9924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 9922,
											"end": 9923,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9904,
											"end": 9924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 9904,
											"end": 9924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9904,
											"end": 9924,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 9904,
											"end": 9924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9899,
											"end": 9924,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9899,
											"end": 9924,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9947,
											"end": 9948,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9944,
											"end": 9945,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9933,
											"end": 9949,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9933,
											"end": 9949,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9968,
											"end": 9971,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9965,
											"end": 9966,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9962,
											"end": 9972,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9959,
											"end": 9995,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9959,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 9959,
											"end": 9995,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 9975,
											"end": 9993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9959,
											"end": 9995,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 9959,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9811,
											"end": 10002,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9811,
											"end": 10002,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9811,
											"end": 10002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9811,
											"end": 10002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9811,
											"end": 10002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10008,
											"end": 10130,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 10008,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10081,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 10099,
											"end": 10104,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10081,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 10081,
											"end": 10105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10081,
											"end": 10105,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 10081,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10074,
											"end": 10079,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10071,
											"end": 10106,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 10061,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 10061,
											"end": 10124,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10120,
											"end": 10121,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10117,
											"end": 10118,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10110,
											"end": 10122,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10061,
											"end": 10124,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 10061,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10008,
											"end": 10130,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10008,
											"end": 10130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10136,
											"end": 10279,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 10136,
											"end": 10279,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10193,
											"end": 10198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10224,
											"end": 10230,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10218,
											"end": 10231,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10209,
											"end": 10231,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10209,
											"end": 10231,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10240,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 10267,
											"end": 10272,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10240,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 10240,
											"end": 10273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10240,
											"end": 10273,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 10240,
											"end": 10273,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10136,
											"end": 10279,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10136,
											"end": 10279,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10136,
											"end": 10279,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10136,
											"end": 10279,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10136,
											"end": 10279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10285,
											"end": 10636,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 10285,
											"end": 10636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10355,
											"end": 10361,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10404,
											"end": 10406,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10401,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10383,
											"end": 10390,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10379,
											"end": 10402,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10375,
											"end": 10407,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10372,
											"end": 10491,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10372,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 10372,
											"end": 10491,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10410,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 10410,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 10410,
											"end": 10489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10410,
											"end": 10489,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 10410,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10372,
											"end": 10491,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 10372,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10530,
											"end": 10531,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10555,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 10611,
											"end": 10618,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10602,
											"end": 10608,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10591,
											"end": 10600,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10587,
											"end": 10609,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10555,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 10555,
											"end": 10619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10555,
											"end": 10619,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 10555,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10545,
											"end": 10619,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10545,
											"end": 10619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10501,
											"end": 10629,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10285,
											"end": 10636,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10285,
											"end": 10636,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10285,
											"end": 10636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10285,
											"end": 10636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10285,
											"end": 10636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10642,
											"end": 10740,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 10642,
											"end": 10740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10693,
											"end": 10699,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10727,
											"end": 10732,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10721,
											"end": 10733,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10711,
											"end": 10733,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10711,
											"end": 10733,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10642,
											"end": 10740,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10642,
											"end": 10740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10642,
											"end": 10740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10642,
											"end": 10740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10746,
											"end": 10893,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 10746,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10847,
											"end": 10858,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10884,
											"end": 10887,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10869,
											"end": 10887,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10869,
											"end": 10887,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10746,
											"end": 10893,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10746,
											"end": 10893,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10746,
											"end": 10893,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10746,
											"end": 10893,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10746,
											"end": 10893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10899,
											"end": 11285,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 10899,
											"end": 11285,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11003,
											"end": 11006,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11031,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 11063,
											"end": 11068,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 11031,
											"end": 11069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11069,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 11031,
											"end": 11069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11085,
											"end": 11173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 11166,
											"end": 11172,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11164,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11085,
											"end": 11173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 11085,
											"end": 11173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11085,
											"end": 11173,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 11085,
											"end": 11173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11078,
											"end": 11173,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11078,
											"end": 11173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11182,
											"end": 11247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 11240,
											"end": 11246,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11235,
											"end": 11238,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11228,
											"end": 11232,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11221,
											"end": 11226,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11217,
											"end": 11233,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11182,
											"end": 11247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 11182,
											"end": 11247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11182,
											"end": 11247,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 11182,
											"end": 11247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11272,
											"end": 11278,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11267,
											"end": 11270,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11263,
											"end": 11279,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11256,
											"end": 11279,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11256,
											"end": 11279,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11007,
											"end": 11285,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10899,
											"end": 11285,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10899,
											"end": 11285,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10899,
											"end": 11285,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10899,
											"end": 11285,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10899,
											"end": 11285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11291,
											"end": 11562,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 11291,
											"end": 11562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11421,
											"end": 11424,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11443,
											"end": 11536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 11532,
											"end": 11535,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11523,
											"end": 11529,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11443,
											"end": 11536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 11443,
											"end": 11536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11443,
											"end": 11536,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 11443,
											"end": 11536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 11536,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 11536,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11553,
											"end": 11556,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11546,
											"end": 11556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11546,
											"end": 11556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11291,
											"end": 11562,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11291,
											"end": 11562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11291,
											"end": 11562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11291,
											"end": 11562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11291,
											"end": 11562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								".git/Proxy/IBank.sol",
								".git/Proxy/bankV2.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"deposit()": "d0e30db0",
							"getBalance(address)": "f8b2cb4f",
							"owner()": "8da5cb5b",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".git/Proxy/bankV2.sol\":\"Bank\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".git/Proxy/IBank.sol\":{\"keccak256\":\"0xeaee611b83509115665161a83238dbaa7633b9b81b693791600da737d4a149a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dc654a649cd8a0e82458fbff6245930412c318cf838af878e4a800bc3375a67\",\"dweb:/ipfs/Qmaw2yvhsb9Sa3vUyB1UbGkxna3bnfEBLDFFtxpQ2Z2ow4\"]},\".git/Proxy/bankV2.sol\":{\"keccak256\":\"0xbe0727e5dc46e6861c29b10680867ea49a15dc55a12b7405389419c01b1bdfa9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://690d7f7e2caecc33d8b715cbcd80cf15d6894db961f4bc9c30130c55bc2f65de\",\"dweb:/ipfs/QmVqo3xaEaH9UPoyopYJFivHjhANGQGgT77jpCtPMZS64X\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 35,
								"contract": ".git/Proxy/bankV2.sol:Bank",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d5b4280f28f2e9e5c70978b391e29239cb2ddb8da64eb6c00253d7d5a286906564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d5b4280f28f2e9e5c70978b391e29239cb2ddb8da64eb6c00253d7d5a286906564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xB4 0x28 0xF 0x28 CALLCODE 0xE9 0xE5 0xC7 MULMOD PUSH25 0xB391E29239CB2DDB8DA64EB6C00253D7D5A286906564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "496:5741:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d5b4280f28f2e9e5c70978b391e29239cb2ddb8da64eb6c00253d7d5a286906564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xB4 0x28 0xF 0x28 CALLCODE 0xE9 0xE5 0xC7 MULMOD PUSH25 0xB391E29239CB2DDB8DA64EB6C00253D7D5A286906564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "496:5741:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5b4280f28f2e9e5c70978b391e29239cb2ddb8da64eb6c00253d7d5a286906564736f6c634300081a0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								".git/Proxy/IBank.sol",
								".git/Proxy/bankV2.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206774dc4ff634adbd0528b3cbe504985305b328754b8ed3a8ede8ae34adce94c864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206774dc4ff634adbd0528b3cbe504985305b328754b8ed3a8ede8ae34adce94c864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x74DC4FF634ADBD05 0x28 0xB3 0xCB 0xE5 DIV SWAP9 MSTORE8 SDIV 0xB3 0x28 PUSH22 0x4B8ED3A8EDE8AE34ADCE94C864736F6C634300081A00 CALLER ",
							"sourceMap": "233:5815:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206774dc4ff634adbd0528b3cbe504985305b328754b8ed3a8ede8ae34adce94c864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x74DC4FF634ADBD05 0x28 0xB3 0xCB 0xE5 DIV SWAP9 MSTORE8 SDIV 0xB3 0x28 PUSH22 0x4B8ED3A8EDE8AE34ADCE94C864736F6C634300081A00 CALLER ",
							"sourceMap": "233:5815:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206774dc4ff634adbd0528b3cbe504985305b328754b8ed3a8ede8ae34adce94c864736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								".git/Proxy/IBank.sol",
								".git/Proxy/bankV2.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								".git/Proxy/IBank.sol",
								".git/Proxy/bankV2.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xA7 SIGNEXTEND PUSH26 0xDDE3A68BE008AD909ECEB9714B0A021B843D5091DCC7DF482D70 PUSH17 0xC364736F6C634300081A00330000000000 ",
							"sourceMap": "1407:2774:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xA7 SIGNEXTEND PUSH26 0xDDE3A68BE008AD909ECEB9714B0A021B843D5091DCC7DF482D70 PUSH17 0xC364736F6C634300081A00330000000000 ",
							"sourceMap": "1407:2774:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								".git/Proxy/IBank.sol",
								".git/Proxy/bankV2.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".git/Proxy/IBank.sol": {
				"ast": {
					"absolutePath": ".git/Proxy/IBank.sol",
					"exportedSymbols": {
						"IBank": [
							17
						]
					},
					"id": 18,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBank",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "IBank",
							"nameLocation": "71:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 4,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "93:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "100:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "119:0:0"
									},
									"scope": 17,
									"src": "84:36:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "135:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "152:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "144:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "143:16:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "168:0:0"
									},
									"scope": 17,
									"src": "126:43:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f8b2cb4f",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "194:14:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "232:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:9:0"
									},
									"scope": 17,
									"src": "175:66:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 18,
							"src": "61:183:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:211:0"
				},
				"id": 0
			},
			".git/Proxy/bankV2.sol": {
				"ast": {
					"absolutePath": ".git/Proxy/bankV2.sol",
					"exportedSymbols": {
						"Bank": [
							199
						],
						"ContextUpgradeable": [
							890
						],
						"ERC1967Utils": [
							1215
						],
						"IBank": [
							17
						],
						"IERC1822Proxiable": [
							921
						],
						"Initializable": [
							662
						],
						"OwnableUpgradeable": [
							394
						],
						"UUPSUpgradeable": [
							844
						]
					},
					"id": 200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 19,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 20,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 200,
							"sourceUnit": 663,
							"src": "61:75:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 21,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 200,
							"sourceUnit": 845,
							"src": "138:77:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 22,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 200,
							"sourceUnit": 395,
							"src": "217:75:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".git/Proxy/IBank.sol",
							"file": "./IBank.sol",
							"id": 23,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 200,
							"sourceUnit": 18,
							"src": "294:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 24,
										"name": "Initializable",
										"nameLocations": [
											"336:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 662,
										"src": "336:13:1"
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "336:13:1"
								},
								{
									"baseName": {
										"id": 26,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"351:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "351:15:1"
									},
									"id": 27,
									"nodeType": "InheritanceSpecifier",
									"src": "351:15:1"
								},
								{
									"baseName": {
										"id": 28,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"368:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 394,
										"src": "368:18:1"
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "368:18:1"
								},
								{
									"baseName": {
										"id": 30,
										"name": "IBank",
										"nameLocations": [
											"388:5:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 17,
										"src": "388:5:1"
									},
									"id": 31,
									"nodeType": "InheritanceSpecifier",
									"src": "388:5:1"
								}
							],
							"canonicalName": "Bank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 199,
							"linearizedBaseContracts": [
								199,
								17,
								394,
								890,
								844,
								921,
								662
							],
							"name": "Bank",
							"nameLocation": "328:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "437:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 199,
									"src": "401:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 34,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 32,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "409:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "401:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 33,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "420:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4",
									"id": 41,
									"name": "Deposited",
									"nameLocation": "460:9:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "486:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "470:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "500:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "492:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:38:1"
									},
									"src": "454:54:1"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 47,
									"name": "Withdrawn",
									"nameLocation": "520:9:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "546:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "530:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "560:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "552:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "529:38:1"
									},
									"src": "514:54:1"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "590:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 51,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "613:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "617:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "613:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 50,
														"name": "_initialize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "601:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "601:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "601:23:1"
											}
										]
									},
									"id": 56,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "590:0:1"
									},
									"scope": 199,
									"src": "576:56:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "696:75:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "722:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 63,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "707:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "707:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "707:21:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 67,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "739:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "739:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "739:24:1"
											}
										]
									},
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 61,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 60,
												"name": "initializer",
												"nameLocations": [
													"684:11:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 502,
												"src": "684:11:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "684:11:1"
										}
									],
									"name": "_initialize",
									"nameLocation": "649:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "669:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "661:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:15:1"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "696:0:1"
									},
									"scope": 199,
									"src": "640:131:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										798
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "893:2:1",
										"statements": []
									},
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 77,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 76,
												"name": "onlyOwner",
												"nameLocations": [
													"878:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 289,
												"src": "878:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "878:9:1"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "788:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 75,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "860:8:1"
									},
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "814:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "806:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:27:1"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "893:0:1"
									},
									"scope": 199,
									"src": "779:116:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										4
									],
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1002:150:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 85,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1021:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1025:5:1",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1021:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1033:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1021:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e6420455448",
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1036:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480",
																"typeString": "literal_string \"Must send ETH\""
															},
															"value": "Must send ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebfa112dcede3b10ff28b3a118f2beb993367dd3bc98443adc7df7774b616480",
																"typeString": "literal_string \"Must send ETH\""
															}
														],
														"id": 84,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1013:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1013:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1013:39:1"
											},
											{
												"expression": {
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 92,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "1063:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 95,
														"indexExpression": {
															"expression": {
																"id": 93,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1072:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1076:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1072:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1063:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 96,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1087:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1091:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1087:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1063:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "1063:33:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 101,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1122:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1126:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1122:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 103,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1134:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1138:5:1",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1134:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 100,
														"name": "Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1112:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "EmitStatement",
												"src": "1107:37:1"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "966:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 82,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "993:8:1"
									},
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "973:2:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1002:0:1"
									},
									"scope": 199,
									"src": "957:195:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										9
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "1264:215:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 115,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "1283:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 118,
																"indexExpression": {
																	"expression": {
																		"id": 116,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1292:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1296:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1292:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1283:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 119,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "1307:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1283:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1315:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1275:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1275:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "1275:63:1"
											},
											{
												"expression": {
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 124,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "1349:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 127,
														"indexExpression": {
															"expression": {
																"id": 125,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1358:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1362:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1358:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1349:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 128,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "1373:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1349:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "1349:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 137,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "1419:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 133,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1398:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1402:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1398:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1390:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 131,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1390:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1390:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1410:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1390:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1390:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "1390:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 141,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1452:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1456:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1452:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 143,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "1464:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 140,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1442:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1442:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "EmitStatement",
												"src": "1437:34:1"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1221:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 112,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1255:8:1"
									},
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1238:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "1230:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:16:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1264:0:1"
									},
									"scope": 199,
									"src": "1212:267:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "1602:40:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 155,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "1620:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 157,
													"indexExpression": {
														"id": 156,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "1629:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1620:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 154,
												"id": 158,
												"nodeType": "Return",
												"src": "1613:21:1"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "1536:10:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 151,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1575:8:1"
									},
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1555:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1547:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1546:14:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1593:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:9:1"
									},
									"scope": 199,
									"src": "1527:115:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "1707:203:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 168,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "1726:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 171,
																"indexExpression": {
																	"expression": {
																		"id": 169,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1735:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1739:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1735:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1726:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 172,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "1750:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1726:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1758:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 167,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1718:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "1718:63:1"
											},
											{
												"expression": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 177,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "1792:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 180,
														"indexExpression": {
															"expression": {
																"id": 178,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1801:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1805:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1801:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1792:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 181,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "1816:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1792:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "1792:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 189,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "1856:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 186,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "1841:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1833:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 184,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1833:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1833:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1847:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1833:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1833:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "1833:30:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 193,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "1889:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 194,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "1895:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 192,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1879:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1879:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "EmitStatement",
												"src": "1874:28:1"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1659:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1690:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1682:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1667:30:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1707:0:1"
									},
									"scope": 199,
									"src": "1650:260:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 200,
							"src": "319:1594:1",
							"usedErrors": [
								230,
								235,
								411,
								414,
								689,
								694,
								941,
								954,
								1235,
								1498
							],
							"usedEvents": [
								41,
								47,
								241,
								419,
								898
							]
						}
					],
					"src": "33:1882:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							890
						],
						"Initializable": [
							662
						],
						"OwnableUpgradeable": [
							394
						]
					},
					"id": 395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 203,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 891,
							"src": "128:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 202,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 890,
										"src": "136:18:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 205,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 663,
							"src": "196:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 204,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 662,
										"src": "204:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 207,
										"name": "Initializable",
										"nameLocations": [
											"789:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 662,
										"src": "789:13:2"
									},
									"id": 208,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:2"
								},
								{
									"baseName": {
										"id": 209,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 890,
										"src": "804:18:2"
									},
									"id": 210,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:2"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 206,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 394,
							"linearizedBaseContracts": [
								394,
								890,
								662
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:2",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 214,
									"members": [
										{
											"constant": false,
											"id": 213,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 214,
											"src": "931:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 212,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:2",
									"nodeType": "StructDefinition",
									"scope": 394,
									"src": "899:53:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 217,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 394,
									"src": "1069:116:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 215,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 216,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "1270:81:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:2",
													"nodeType": "YulBlock",
													"src": "1289:56:2",
													"statements": [
														{
															"nativeSrc": "1303:32:2",
															"nodeType": "YulAssignment",
															"src": "1303:32:2",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:2",
																"nodeType": "YulIdentifier",
																"src": "1313:22:2"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 221,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 217,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:2",
														"valueSize": 1
													}
												],
												"id": 223,
												"nodeType": "InlineAssembly",
												"src": "1280:65:2"
											}
										]
									},
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "1244:24:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$214_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 220,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 219,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 214,
														"src": "1244:14:2"
													},
													"referencedDeclaration": 214,
													"src": "1244:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$214_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:2"
									},
									"scope": 394,
									"src": "1192:159:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:2",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 230,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1480:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:2"
									},
									"src": "1447:50:2"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:2",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 235,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "1616:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:2"
									},
									"src": "1590:41:2"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 241,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1664:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1695:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:2"
									},
									"src": "1637:84:2"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "1919:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 250,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "1954:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 249,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "1929:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:2"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:2",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 247,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 246,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 557,
												"src": "1902:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:2"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "1871:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:2"
									},
									"scope": 394,
									"src": "1847:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "2062:153:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 261,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2076:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 262,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 275,
												"nodeType": "IfStatement",
												"src": "2072:95:2",
												"trueBody": {
													"id": 274,
													"nodeType": "Block",
													"src": "2104:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 268,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 267,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "2125:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 273,
															"nodeType": "RevertStatement",
															"src": "2118:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 277,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "2195:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 276,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "2176:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:2"
											}
										]
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 259,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 258,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 557,
												"src": "2045:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:2"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2014:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:2"
									},
									"scope": 394,
									"src": "1980:235:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "2324:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 284,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "2334:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:2"
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:2"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 289,
									"name": "onlyOwner",
									"nameLocation": "2312:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:2"
									},
									"src": "2303:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "2496:89:2",
										"statements": [
											{
												"assignments": [
													297
												],
												"declarations": [
													{
														"constant": false,
														"id": 297,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 304,
														"src": "2506:24:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$214_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 296,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 295,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 214,
																"src": "2506:14:2"
															},
															"referencedDeclaration": 214,
															"src": "2506:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$214_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 300,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 298,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "2533:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$214_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$214_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:2"
											},
											{
												"expression": {
													"expression": {
														"id": 301,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "2570:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$214_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:2",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 213,
													"src": "2570:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 294,
												"id": 303,
												"nodeType": "Return",
												"src": "2563:15:2"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:2"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2487:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:2"
									},
									"scope": 394,
									"src": "2441:144:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "2703:117:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 309,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "2717:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 311,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2728:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 320,
												"nodeType": "IfStatement",
												"src": "2713:101:2",
												"trueBody": {
													"id": 319,
													"nodeType": "Block",
													"src": "2742:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 315,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 872,
																			"src": "2790:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 314,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "2763:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 318,
															"nodeType": "RevertStatement",
															"src": "2756:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:2"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:2"
									},
									"scope": 394,
									"src": "2658:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "3209:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 329,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 328,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "3219:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:2"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 326,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 325,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 289,
												"src": "3199:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:2"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:2"
									},
									"scope": 394,
									"src": "3155:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "3475:145:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "3489:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "3485:91:2",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "3513:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "3527:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 360,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "3604:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 359,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "3585:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 342,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 341,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 289,
												"src": "3465:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "3432:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:2"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:2"
									},
									"scope": 394,
									"src": "3405:215:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "3837:185:2",
										"statements": [
											{
												"assignments": [
													372
												],
												"declarations": [
													{
														"constant": false,
														"id": 372,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "3847:24:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$214_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 371,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 370,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 214,
																"src": "3847:14:2"
															},
															"referencedDeclaration": 214,
															"src": "3847:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$214_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 373,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "3874:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$214_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$214_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:2"
											},
											{
												"assignments": [
													377
												],
												"declarations": [
													{
														"constant": false,
														"id": 377,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "3904:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 376,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"expression": {
														"id": 378,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3923:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$214_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:2",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 213,
													"src": "3923:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:2"
											},
											{
												"expression": {
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 381,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3941:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$214_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:2",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 213,
														"src": "3941:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 384,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "3952:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 388,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3996:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "4006:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 387,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "3975:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "EmitStatement",
												"src": "3970:45:2"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3802:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:2"
									},
									"scope": 394,
									"src": "3774:248:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 395,
							"src": "749:3275:2",
							"usedErrors": [
								230,
								235,
								411,
								414
							],
							"usedEvents": [
								241,
								419
							]
						}
					],
					"src": "102:3923:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							662
						]
					},
					"id": 663,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 397,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:3",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 662,
							"linearizedBaseContracts": [
								662
							],
							"name": "Initializable",
							"nameLocation": "2367:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:3",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 405,
									"members": [
										{
											"constant": false,
											"id": 401,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 405,
											"src": "2813:19:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 400,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 404,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:3",
											"nodeType": "VariableDeclaration",
											"scope": 405,
											"src": "2950:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 403,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:3",
									"nodeType": "StructDefinition",
									"scope": 662,
									"src": "2685:290:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 408,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 662,
									"src": "3098:115:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 406,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 407,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:3",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 411,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:3"
									},
									"src": "3285:30:3"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:3",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 414,
									"name": "NotInitializing",
									"nameLocation": "3389:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:3"
									},
									"src": "3383:24:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:3",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 419,
									"name": "Initialized",
									"nameLocation": "3514:11:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "3526:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 416,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:3"
									},
									"src": "3508:34:3"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "4092:1079:3",
										"statements": [
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "4158:30:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 423,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 422,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 405,
																"src": "4158:20:3"
															},
															"referencedDeclaration": 405,
															"src": "4158:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 427,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 425,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "4191:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$405_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:3"
											},
											{
												"assignments": [
													429
												],
												"declarations": [
													{
														"constant": false,
														"id": 429,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "4279:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 428,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:3",
													"subExpression": {
														"expression": {
															"id": 430,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "4302:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:3",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 404,
														"src": "4302:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:3"
											},
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "4327:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 434,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"expression": {
														"id": 436,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "4348:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:3",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 401,
													"src": "4348:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:3"
											},
											{
												"assignments": [
													440
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "4704:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 439,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 446,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 441,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "4724:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 444,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "4744:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:3"
											},
											{
												"assignments": [
													448
												],
												"declarations": [
													{
														"constant": false,
														"id": 448,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "4768:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 447,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 461,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 449,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "4788:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 454,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$662",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$662",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 452,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:3",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:3",
														"subExpression": {
															"id": 462,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "4854:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:3",
														"subExpression": {
															"id": 464,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "4871:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 471,
												"nodeType": "IfStatement",
												"src": "4849:91:3",
												"trueBody": {
													"id": 470,
													"nodeType": "Block",
													"src": "4885:55:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 467,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "4906:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 469,
															"nodeType": "RevertStatement",
															"src": "4899:30:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 472,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "4949:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:3",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 401,
														"src": "4949:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:3"
											},
											{
												"condition": {
													"id": 478,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "4981:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 486,
												"nodeType": "IfStatement",
												"src": "4977:67:3",
												"trueBody": {
													"id": 485,
													"nodeType": "Block",
													"src": "4997:47:3",
													"statements": [
														{
															"expression": {
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 479,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "5011:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:3",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 404,
																	"src": "5011:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 484,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:3"
														}
													]
												}
											},
											{
												"id": 487,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:3"
											},
											{
												"condition": {
													"id": 488,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "5068:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "5064:101:3",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "5084:81:3",
													"statements": [
														{
															"expression": {
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 489,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "5098:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:3",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 404,
																	"src": "5098:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 494,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 495,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "5140:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 498,
															"nodeType": "EmitStatement",
															"src": "5135:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:3",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 502,
									"name": "initializer",
									"nameLocation": "4078:11:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:3"
									},
									"src": "4069:1102:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "6289:392:3",
										"statements": [
											{
												"assignments": [
													509
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "6355:30:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 508,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 507,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 405,
																"src": "6355:20:3"
															},
															"referencedDeclaration": 405,
															"src": "6355:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 512,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 510,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "6388:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$405_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 513,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "6429:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 514,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:3",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 404,
														"src": "6429:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 515,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "6448:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:3",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 401,
															"src": "6448:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 517,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "6466:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 524,
												"nodeType": "IfStatement",
												"src": "6425:105:3",
												"trueBody": {
													"id": 523,
													"nodeType": "Block",
													"src": "6475:55:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 520,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "6496:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 522,
															"nodeType": "RevertStatement",
															"src": "6489:30:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 525,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "6539:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 527,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:3",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 401,
														"src": "6539:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 528,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "6556:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:3"
											},
											{
												"expression": {
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 531,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "6573:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:3",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 404,
														"src": "6573:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:3"
											},
											{
												"id": 537,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:3"
											},
											{
												"expression": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 538,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "6616:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:3",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 404,
														"src": "6616:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 545,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "6666:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 544,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "6654:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "EmitStatement",
												"src": "6649:25:3"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:3",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 549,
									"name": "reinitializer",
									"nameLocation": "6259:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "6273:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 504,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:3"
									},
									"src": "6250:431:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "6919:48:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 552,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "6929:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:3"
											},
											{
												"id": 555,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:3"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:3",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 557,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:3"
									},
									"src": "6891:76:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "7134:89:3",
										"statements": [
											{
												"condition": {
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:3",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 561,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "7149:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "7144:73:3",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "7168:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 564,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "7189:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "7182:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:3",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:3"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:3"
									},
									"scope": 662,
									"src": "7082:141:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "7758:373:3",
										"statements": [
											{
												"assignments": [
													576
												],
												"declarations": [
													{
														"constant": false,
														"id": 576,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "7824:30:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 575,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 574,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 405,
																"src": "7824:20:3"
															},
															"referencedDeclaration": 405,
															"src": "7824:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 579,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 577,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "7857:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$405_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:3"
											},
											{
												"condition": {
													"expression": {
														"id": 580,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "7898:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:3",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 404,
													"src": "7898:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "7894:76:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "7915:55:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 582,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "7936:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "7929:30:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 587,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "7983:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:3",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 401,
														"src": "7983:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 590,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 589,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "7979:146:3",
												"trueBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "8019:106:3",
													"statements": [
														{
															"expression": {
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 595,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "8033:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:3",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 401,
																	"src": "8033:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 600,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 599,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:3",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 598,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:3",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 604,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 608,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 607,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:3",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 606,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:3",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 605,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "8085:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 612,
															"nodeType": "EmitStatement",
															"src": "8080:34:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:3",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:3"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:3"
									},
									"scope": 662,
									"src": "7709:422:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "8306:63:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 622,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "8323:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$405_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:3",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 401,
													"src": "8323:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 621,
												"id": 625,
												"nodeType": "Return",
												"src": "8316:46:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:3",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:3"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "8298:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 619,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:3"
									},
									"scope": 662,
									"src": "8241:128:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "8541:64:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 633,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "8558:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$405_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:3",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 404,
													"src": "8558:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 632,
												"id": 636,
												"nodeType": "Return",
												"src": "8551:47:3"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:3",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:3"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "8535:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 630,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:3"
									},
									"scope": 662,
									"src": "8485:120:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "8896:45:3",
										"statements": [
											{
												"expression": {
													"id": 644,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 408,
													"src": "8913:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 643,
												"id": 645,
												"nodeType": "Return",
												"src": "8906:28:3"
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:3",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:3"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "8887:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 641,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:3"
									},
									"scope": 662,
									"src": "8819:122:3",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "9161:115:3",
										"statements": [
											{
												"assignments": [
													655
												],
												"declarations": [
													{
														"constant": false,
														"id": 655,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "9171:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 654,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 658,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 656,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "9186:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:3"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:3",
													"nodeType": "YulBlock",
													"src": "9232:38:3",
													"statements": [
														{
															"nativeSrc": "9246:14:3",
															"nodeType": "YulAssignment",
															"src": "9246:14:3",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:3",
																"nodeType": "YulIdentifier",
																"src": "9256:4:3"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 652,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:3",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 655,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:3",
														"valueSize": 1
													}
												],
												"id": 659,
												"nodeType": "InlineAssembly",
												"src": "9223:47:3"
											}
										]
									},
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:3",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:3"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "9129:30:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 651,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 650,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 405,
														"src": "9129:20:3"
													},
													"referencedDeclaration": 405,
													"src": "9129:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$405_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:3"
									},
									"scope": 662,
									"src": "9071:205:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 663,
							"src": "2349:6929:3",
							"usedErrors": [
								411,
								414
							],
							"usedEvents": [
								419
							]
						}
					],
					"src": "113:9166:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1215
						],
						"IERC1822Proxiable": [
							921
						],
						"Initializable": [
							662
						],
						"UUPSUpgradeable": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 922,
							"src": "141:88:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 665,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 921,
										"src": "149:17:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 668,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 1216,
							"src": "230:84:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 667,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1215,
										"src": "238:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 670,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 663,
							"src": "315:50:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 669,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 662,
										"src": "323:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 672,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 662,
										"src": "1023:13:4"
									},
									"id": 673,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:4"
								},
								{
									"baseName": {
										"id": 674,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 921,
										"src": "1038:17:4"
									},
									"id": 675,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:4"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 671,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:4",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 844,
							"linearizedBaseContracts": [
								844,
								921,
								662
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:4",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 682,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 844,
									"src": "1128:48:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 677,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 680,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$844",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$844",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 679,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 678,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:4",
												"typeDescriptions": {}
											}
										},
										"id": 681,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:4",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 686,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:4",
									"nodeType": "VariableDeclaration",
									"scope": 844,
									"src": "1819:58:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 684,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 685,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:4",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 689,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:4"
									},
									"src": "1954:36:4"
								},
								{
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:4",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 694,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "2104:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 691,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:4"
									},
									"src": "2069:49:4"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "2645:41:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 697,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "2655:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:4"
											},
											{
												"id": 700,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:4"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:4",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 702,
									"name": "onlyProxy",
									"nameLocation": "2633:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:4"
									},
									"src": "2624:62:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "2916:48:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 705,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "2926:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:4"
											},
											{
												"id": 708,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:4"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:4",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 710,
									"name": "notDelegated",
									"nameLocation": "2901:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:4"
									},
									"src": "2892:72:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "3030:7:4",
										"statements": []
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 713,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 712,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 557,
												"src": "3013:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:4"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:4"
									},
									"scope": 844,
									"src": "2970:67:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "3113:7:4",
										"statements": []
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 719,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 718,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 557,
												"src": "3096:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:4"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:4"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:4"
									},
									"scope": 844,
									"src": "3043:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										920
									],
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "3786:56:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 730,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "3803:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1215_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:4",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 936,
													"src": "3803:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 729,
												"id": 732,
												"nodeType": "Return",
												"src": "3796:39:4"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:4",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 726,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 725,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 710,
												"src": "3755:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:4"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "3777:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 727,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:4"
									},
									"scope": 844,
									"src": "3708:134:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "4266:109:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 745,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "4294:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 744,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4276:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 749,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "4344:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "4363:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 748,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "4322:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:4"
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:4",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 742,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 741,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 702,
												"src": "4256:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:4"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "4187:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "4214:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:4"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:4"
									},
									"scope": 844,
									"src": "4161:214:4",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "4623:267:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 760,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4658:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$844",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$844",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4650:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 758,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4650:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4650:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 762,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "4667:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4650:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 764,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "4728:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1215_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4741:17:4",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "4728:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4728:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 767,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "4764:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4728:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4650:120:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "4633:251:4",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "4823:61:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 770,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "4844:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4844:29:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 772,
															"nodeType": "RevertStatement",
															"src": "4837:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "4381:192:4",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4587:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4598:2:4"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:0:4"
									},
									"scope": 844,
									"src": "4578:312:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "5059:161:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 782,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5081:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$844",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$844",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5073:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 780,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5073:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5073:13:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 784,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "5090:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5073:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 790,
												"nodeType": "IfStatement",
												"src": "5069:145:4",
												"trueBody": {
													"id": 789,
													"nodeType": "Block",
													"src": "5098:116:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 786,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "5174:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5174:29:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 788,
															"nodeType": "RevertStatement",
															"src": "5167:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "4896:106:4",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5016:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5034:2:4"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:0:4"
									},
									"scope": 844,
									"src": "5007:213:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "5226:372:4",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5612:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5638:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "5630:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:27:4"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5673:0:4"
									},
									"scope": 844,
									"src": "5603:71:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "6117:453:4",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 831,
															"nodeType": "Block",
															"src": "6207:212:4",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 814,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 812,
																			"src": "6225:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 815,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1215,
																				"src": "6233:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1215_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6246:19:4",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 936,
																			"src": "6233:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6225:40:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 823,
																	"nodeType": "IfStatement",
																	"src": "6221:120:4",
																	"trueBody": {
																		"id": 822,
																		"nodeType": "Block",
																		"src": "6267:74:4",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 819,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 812,
																							"src": "6321:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 818,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 694,
																						"src": "6292:28:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 820,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6292:34:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 821,
																				"nodeType": "RevertStatement",
																				"src": "6285:41:4"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 827,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "6384:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 828,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 803,
																				"src": "6403:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 824,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1215,
																				"src": "6354:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1215_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6367:16:4",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1030,
																			"src": "6354:29:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6354:54:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 830,
																	"nodeType": "ExpressionStatement",
																	"src": "6354:54:4"
																}
															]
														},
														"errorName": "",
														"id": 832,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 813,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 812,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6201:4:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 832,
																	"src": "6193:12:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 811,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6193:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6192:14:4"
														},
														"src": "6184:235:4"
													},
													{
														"block": {
															"id": 839,
															"nodeType": "Block",
															"src": "6426:138:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 836,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "6535:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 833,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1215,
																				"src": "6493:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1215_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6506:28:4",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 941,
																			"src": "6493:41:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6493:60:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 838,
																	"nodeType": "RevertStatement",
																	"src": "6486:67:4"
																}
															]
														},
														"errorName": "",
														"id": 840,
														"nodeType": "TryCatchClause",
														"src": "6420:144:4"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 807,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "6149:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 806,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "6131:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$921_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6131:36:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$921",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6168:13:4",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 920,
														"src": "6131:50:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:52:4",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 841,
												"nodeType": "TryStatement",
												"src": "6127:437:4"
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "5680:347:4",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6041:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6071:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "6063:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6063:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6103:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "6090:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 802,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6090:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6062:46:4"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6117:0:4"
									},
									"scope": 844,
									"src": "6032:538:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 845,
							"src": "986:5586:4",
							"usedErrors": [
								411,
								414,
								689,
								694,
								941,
								954,
								1235,
								1498
							],
							"usedEvents": [
								419,
								898
							]
						}
					],
					"src": "115:6458:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							890
						],
						"Initializable": [
							662
						]
					},
					"id": 891,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 848,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 891,
							"sourceUnit": 663,
							"src": "126:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 847,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 662,
										"src": "134:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 850,
										"name": "Initializable",
										"nameLocations": [
											"728:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 662,
										"src": "728:13:5"
									},
									"id": 851,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:5"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 849,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 890,
							"linearizedBaseContracts": [
								890,
								662
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "800:7:5",
										"statements": []
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 854,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 853,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 557,
												"src": "783:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:5"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:5"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:5"
									},
									"scope": 890,
									"src": "748:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "875:7:5",
										"statements": []
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 860,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 859,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 557,
												"src": "858:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:5"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:5"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:5"
									},
									"scope": 890,
									"src": "813:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "949:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 868,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 867,
												"id": 870,
												"nodeType": "Return",
												"src": "959:17:5"
											}
										]
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:5"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "940:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:5"
									},
									"scope": 890,
									"src": "887:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "1056:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 877,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 876,
												"id": 879,
												"nodeType": "Return",
												"src": "1066:15:5"
											}
										]
									},
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:5"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "1040:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:5"
									},
									"scope": 890,
									"src": "989:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "1166:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 885,
												"id": 887,
												"nodeType": "Return",
												"src": "1176:8:5"
											}
										]
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:5"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "1157:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:5"
									},
									"scope": 890,
									"src": "1094:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 891,
							"src": "688:505:5",
							"usedErrors": [
								411,
								414
							],
							"usedEvents": [
								419
							]
						}
					],
					"src": "101:1093:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							911
						]
					},
					"id": 912,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 892,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 893,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:6",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 911,
							"linearizedBaseContracts": [
								911
							],
							"name": "IERC1967",
							"nameLocation": "245:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:6",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 898,
									"name": "Upgraded",
									"nameLocation": "339:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "348:30:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:6"
									},
									"src": "333:47:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:6",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 905,
									"name": "AdminChanged",
									"nameLocation": "464:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "477:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "500:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:6"
									},
									"src": "458:60:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:6",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 910,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "609:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:6"
									},
									"src": "588:45:6"
								}
							],
							"scope": 912,
							"src": "235:400:6",
							"usedErrors": [],
							"usedEvents": [
								898,
								905,
								910
							]
						}
					],
					"src": "107:529:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							921
						]
					},
					"id": 922,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 913,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 914,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:7",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 921,
							"linearizedBaseContracts": [
								921
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:7",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 920,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:7"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "869:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 917,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:7"
									},
									"scope": 921,
									"src": "821:57:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 922,
							"src": "344:536:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1485
						],
						"ERC1967Utils": [
							1215
						],
						"IBeacon": [
							1225
						],
						"IERC1967": [
							911
						],
						"StorageSlot": [
							1631
						]
					},
					"id": 1216,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 923,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 925,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1216,
							"sourceUnit": 1226,
							"src": "140:46:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 924,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1225,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1216,
							"sourceUnit": 912,
							"src": "187:55:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 911,
										"src": "195:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1216,
							"sourceUnit": 1486,
							"src": "243:48:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 928,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1485,
										"src": "251:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 931,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1216,
							"sourceUnit": 1632,
							"src": "292:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 930,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1631,
										"src": "300:11:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 932,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:8",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 1215,
							"linearizedBaseContracts": [
								1215
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:8",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 936,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1215,
									"src": "763:114:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 934,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 935,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:8",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 941,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "993:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:8"
									},
									"src": "958:59:8"
								},
								{
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:8",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 946,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "1114:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:8"
									},
									"src": "1088:41:8"
								},
								{
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:8",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 951,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "1228:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:8"
									},
									"src": "1201:43:8"
								},
								{
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:8",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 954,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:8"
									},
									"src": "1337:26:8"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "1502:77:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 962,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "1546:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 960,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "1519:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1631_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1542,
															"src": "1519:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1513_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1513_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1512,
													"src": "1519:53:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 959,
												"id": 965,
												"nodeType": "Return",
												"src": "1512:60:8"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:8",
										"text": " @dev Returns the current implementation address."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:8"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "1493:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:8"
									},
									"scope": 1215,
									"src": "1441:138:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "1734:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 973,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "1748:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 983,
												"nodeType": "IfStatement",
												"src": "1744:119:8",
												"trueBody": {
													"id": 982,
													"nodeType": "Block",
													"src": "1784:79:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 979,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 970,
																		"src": "1834:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 978,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "1805:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 981,
															"nodeType": "RevertStatement",
															"src": "1798:54:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 987,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "1899:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 984,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "1872:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1631_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1542,
																"src": "1872:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1513_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1513_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1512,
														"src": "1872:53:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 990,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "1928:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:8"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:8",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "1699:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:8"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:8"
									},
									"scope": 1215,
									"src": "1671:281:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "2345:263:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1003,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "2374:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1002,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "2355:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1009,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "2425:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1006,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "2407:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$911_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:8",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 898,
														"src": "2407:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "EmitStatement",
												"src": "2402:41:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1012,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "2458:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1027,
													"nodeType": "Block",
													"src": "2559:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1024,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "2573:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1026,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:8"
														}
													]
												},
												"id": 1028,
												"nodeType": "IfStatement",
												"src": "2454:148:8",
												"trueBody": {
													"id": 1023,
													"nodeType": "Block",
													"src": "2475:78:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1019,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "2518:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1020,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "2537:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1016,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1485,
																		"src": "2489:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1485_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:8",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1402,
																	"src": "2489:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1022,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:8",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "2290:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "2317:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 998,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:8"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:8"
									},
									"scope": 1215,
									"src": "2264:344:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:8",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1034,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1215,
									"src": "2829:105:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1032,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1033,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "3339:68:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1042,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "3383:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1040,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "3356:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1631_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1542,
															"src": "3356:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1513_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1513_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1512,
													"src": "3356:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1039,
												"id": 1045,
												"nodeType": "Return",
												"src": "3349:51:8"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:8",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:8"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3330:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:8"
									},
									"scope": 1215,
									"src": "3287:120:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "3535:172:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1053,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "3549:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1054,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1067,
												"nodeType": "IfStatement",
												"src": "3545:91:8",
												"trueBody": {
													"id": 1066,
													"nodeType": "Block",
													"src": "3573:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1060,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1059,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "3594:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1065,
															"nodeType": "RevertStatement",
															"src": "3587:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1071,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "3672:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1068,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "3645:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1631_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1542,
																"src": "3645:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1513_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1513_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1512,
														"src": "3645:44:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1074,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "3692:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:8"
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:8",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "3509:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:8"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:8"
									},
									"scope": 1215,
									"src": "3490:217:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "3875:94:8",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1087,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "3912:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1089,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "3924:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1084,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "3890:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$911_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:8",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 905,
														"src": "3890:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "EmitStatement",
												"src": "3885:48:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1093,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "3953:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1092,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "3943:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:8"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:8",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "3848:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:8"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:8"
									},
									"scope": 1215,
									"src": "3827:142:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:8",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1101,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1215,
									"src": "4246:106:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1099,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1100,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "4468:69:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1109,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "4512:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1107,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "4485:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1631_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1542,
															"src": "4485:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1513_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1513_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1512,
													"src": "4485:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1106,
												"id": 1112,
												"nodeType": "Return",
												"src": "4478:52:8"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:8",
										"text": " @dev Returns the current beacon."
									},
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:8"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "4459:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:8"
									},
									"scope": 1215,
									"src": "4415:122:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "4667:390:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1120,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "4681:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1130,
												"nodeType": "IfStatement",
												"src": "4677:95:8",
												"trueBody": {
													"id": 1129,
													"nodeType": "Block",
													"src": "4709:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1126,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "4751:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1125,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "4730:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1128,
															"nodeType": "RevertStatement",
															"src": "4723:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1134,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "4809:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1131,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "4782:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1631_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1542,
																"src": "4782:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1513_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1513_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1136,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1512,
														"src": "4782:45:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1137,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "4830:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:8"
											},
											{
												"assignments": [
													1141
												],
												"declarations": [
													{
														"constant": false,
														"id": 1141,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:8",
														"nodeType": "VariableDeclaration",
														"scope": 1159,
														"src": "4850:28:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1140,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1147,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1143,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "4889:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1142,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1225,
																"src": "4881:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1225_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1225",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:8",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1224,
														"src": "4881:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1148,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "4930:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1158,
												"nodeType": "IfStatement",
												"src": "4926:125:8",
												"trueBody": {
													"id": 1157,
													"nodeType": "Block",
													"src": "4969:82:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1154,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1141,
																		"src": "5019:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1153,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "4990:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1156,
															"nodeType": "RevertStatement",
															"src": "4983:57:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:8",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "4640:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:8"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:8"
									},
									"scope": 1215,
									"src": "4620:437:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "5661:263:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1169,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "5682:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1168,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "5671:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1175,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "5731:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1172,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "5707:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$911_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:8",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 910,
														"src": "5707:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1177,
												"nodeType": "EmitStatement",
												"src": "5702:39:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1178,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "5756:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1197,
													"nodeType": "Block",
													"src": "5875:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1194,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "5889:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1196,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:8"
														}
													]
												},
												"id": 1198,
												"nodeType": "IfStatement",
												"src": "5752:166:8",
												"trueBody": {
													"id": 1193,
													"nodeType": "Block",
													"src": "5773:96:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1186,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1163,
																						"src": "5824:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1185,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1225,
																					"src": "5816:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1225_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1225",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:8",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1224,
																			"src": "5816:33:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1190,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1165,
																		"src": "5853:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1182,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1485,
																		"src": "5787:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1485_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:8",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1402,
																	"src": "5787:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1192,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:8",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "5614:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "5633:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:8"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:8"
									},
									"scope": 1215,
									"src": "5582:342:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "6149:86:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1204,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1212,
												"nodeType": "IfStatement",
												"src": "6159:70:8",
												"trueBody": {
													"id": 1211,
													"nodeType": "Block",
													"src": "6178:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1208,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "6199:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1210,
															"nodeType": "RevertStatement",
															"src": "6192:26:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:8",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:8"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:8"
									},
									"scope": 1215,
									"src": "6113:122:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1216,
							"src": "496:5741:8",
							"usedErrors": [
								941,
								946,
								951,
								954
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1225
						]
					},
					"id": 1226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1217,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1218,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:9",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1225,
							"linearizedBaseContracts": [
								1225
							],
							"name": "IBeacon",
							"nameLocation": "224:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:9",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:9"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "460:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:9"
									},
									"scope": 1225,
									"src": "411:58:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1226,
							"src": "214:257:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1485
						],
						"Errors": [
							1507
						]
					},
					"id": 1486,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1486,
							"sourceUnit": 1508,
							"src": "127:36:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1228,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1507,
										"src": "135:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1230,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:10",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1485,
							"linearizedBaseContracts": [
								1485
							],
							"name": "Address",
							"nameLocation": "241:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:10",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1235,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "358:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:10"
									},
									"src": "335:39:10"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "1361:294:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1245,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1485",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1485",
																		"typeString": "library Address"
																	}
																],
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1243,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1248,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "1399:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1262,
												"nodeType": "IfStatement",
												"src": "1371:125:10",
												"trueBody": {
													"id": 1261,
													"nodeType": "Block",
													"src": "1407:89:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1255,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1485",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1485",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1253,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:10",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1258,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1240,
																		"src": "1478:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1250,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1507,
																		"src": "1428:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1507_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:10",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1495,
																	"src": "1428:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1260,
															"nodeType": "RevertStatement",
															"src": "1421:64:10"
														}
													]
												}
											},
											{
												"assignments": [
													1264,
													1266
												],
												"declarations": [
													{
														"constant": false,
														"id": 1264,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1282,
														"src": "1507:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1263,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1266,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1282,
														"src": "1521:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1265,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1273,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1267,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1238,
																"src": "1548:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1269,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1240,
																"src": "1570:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:10"
											},
											{
												"condition": {
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:10",
													"subExpression": {
														"id": 1274,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "1596:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1281,
												"nodeType": "IfStatement",
												"src": "1591:58:10",
												"trueBody": {
													"id": 1280,
													"nodeType": "Block",
													"src": "1605:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1277,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1266,
																		"src": "1627:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1276,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "1619:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1279,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:10",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "1309:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "1336:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:10"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:10"
									},
									"scope": 1485,
									"src": "1290:365:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "2589:62:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1294,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "2628:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1295,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "2636:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1293,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "2606:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1292,
												"id": 1298,
												"nodeType": "Return",
												"src": "2599:45:10"
											}
										]
									},
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:10",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "2522:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "2538:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:10"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "2575:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1290,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:10"
									},
									"scope": 1485,
									"src": "2500:151:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "3088:294:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1314,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1485",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1485",
																		"typeString": "library Address"
																	}
																],
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1312,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1317,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "3126:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1331,
												"nodeType": "IfStatement",
												"src": "3098:123:10",
												"trueBody": {
													"id": 1330,
													"nodeType": "Block",
													"src": "3133:88:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1324,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1485",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1485",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1322,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:10",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1327,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "3204:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1319,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1507,
																		"src": "3154:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1507_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:10",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1495,
																	"src": "3154:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1329,
															"nodeType": "RevertStatement",
															"src": "3147:63:10"
														}
													]
												}
											},
											{
												"assignments": [
													1333,
													1335
												],
												"declarations": [
													{
														"constant": false,
														"id": 1333,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1349,
														"src": "3231:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1332,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1335,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1349,
														"src": "3245:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1334,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1342,
												"initialValue": {
													"arguments": [
														{
															"id": 1340,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "3298:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1336,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "3272:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1338,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "3291:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1344,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "3347:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1345,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "3355:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1346,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "3364:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1343,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "3320:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1311,
												"id": 1348,
												"nodeType": "Return",
												"src": "3313:62:10"
											}
										]
									},
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "3006:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "3022:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "3041:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:10"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "3074:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:10"
									},
									"scope": 1485,
									"src": "2975:407:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "3621:154:10",
										"statements": [
											{
												"assignments": [
													1361,
													1363
												],
												"declarations": [
													{
														"constant": false,
														"id": 1361,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "3632:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1360,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1363,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "3646:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1362,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1368,
												"initialValue": {
													"arguments": [
														{
															"id": 1366,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "3691:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1364,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "3673:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:10",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1370,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "3740:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1371,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "3748:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1372,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "3757:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1369,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "3713:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1359,
												"id": 1374,
												"nodeType": "Return",
												"src": "3706:62:10"
											}
										]
									},
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "3549:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "3565:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1354,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:10"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "3607:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1357,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:10"
									},
									"scope": 1485,
									"src": "3521:254:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "4013:156:10",
										"statements": [
											{
												"assignments": [
													1387,
													1389
												],
												"declarations": [
													{
														"constant": false,
														"id": 1387,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1401,
														"src": "4024:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1386,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1389,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1401,
														"src": "4038:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1388,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1394,
												"initialValue": {
													"arguments": [
														{
															"id": 1392,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "4085:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1390,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "4065:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:10",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1396,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "4134:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1397,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "4142:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1398,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "4151:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1395,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "4107:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1385,
												"id": 1400,
												"nodeType": "Return",
												"src": "4100:62:10"
											}
										]
									},
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "3946:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "3962:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1380,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:10"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "3999:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:10"
									},
									"scope": 1485,
									"src": "3916:253:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "4595:424:10",
										"statements": [
											{
												"condition": {
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:10",
													"subExpression": {
														"id": 1414,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "4610:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1439,
													"nodeType": "Block",
													"src": "4669:344:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1421,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1409,
																			"src": "4857:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1425,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1405,
																				"src": "4883:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:10",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1436,
															"nodeType": "IfStatement",
															"src": "4853:119:10",
															"trueBody": {
																"id": 1435,
																"nodeType": "Block",
																"src": "4908:64:10",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1432,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1405,
																					"src": "4950:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1431,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1235,
																				"src": "4933:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1434,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:10"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1437,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "4992:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1413,
															"id": 1438,
															"nodeType": "Return",
															"src": "4985:17:10"
														}
													]
												},
												"id": 1440,
												"nodeType": "IfStatement",
												"src": "4605:408:10",
												"trueBody": {
													"id": 1420,
													"nodeType": "Block",
													"src": "4619:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1417,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1409,
																		"src": "4641:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1416,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "4633:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1419,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:10",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "4482:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "4506:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "4528:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1408,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:10"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "4581:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1411,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:10"
									},
									"scope": 1485,
									"src": "4437:582:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "5323:122:10",
										"statements": [
											{
												"condition": {
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:10",
													"subExpression": {
														"id": 1452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "5338:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1461,
													"nodeType": "Block",
													"src": "5397:42:10",
													"statements": [
														{
															"expression": {
																"id": 1459,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "5418:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1451,
															"id": 1460,
															"nodeType": "Return",
															"src": "5411:17:10"
														}
													]
												},
												"id": 1462,
												"nodeType": "IfStatement",
												"src": "5333:106:10",
												"trueBody": {
													"id": 1458,
													"nodeType": "Block",
													"src": "5347:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1455,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "5369:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1454,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "5361:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1457,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:10",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "5247:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "5261:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:10"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "5309:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:10"
									},
									"scope": 1485,
									"src": "5221:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "5614:432:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1470,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "5690:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1481,
													"nodeType": "Block",
													"src": "5989:51:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1476,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1507,
																		"src": "6010:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1507_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:10",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1498,
																	"src": "6010:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1480,
															"nodeType": "RevertStatement",
															"src": "6003:26:10"
														}
													]
												},
												"id": 1482,
												"nodeType": "IfStatement",
												"src": "5686:354:10",
												"trueBody": {
													"id": 1475,
													"nodeType": "Block",
													"src": "5713:270:10",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:10",
																"nodeType": "YulBlock",
																"src": "5840:133:10",
																"statements": [
																	{
																		"nativeSrc": "5858:40:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:10"
																			},
																			"nativeSrc": "5881:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:10"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:10",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:10",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:10",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:10"
																					},
																					"nativeSrc": "5922:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:10"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:10",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:10"
																			},
																			"nativeSrc": "5915:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:10"
																		},
																		"nativeSrc": "5915:44:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:10"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1467,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:10",
																	"valueSize": 1
																},
																{
																	"declaration": 1467,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:10",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1474,
															"nodeType": "InlineAssembly",
															"src": "5815:158:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:10",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "5576:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1466,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:10"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:10"
									},
									"scope": 1485,
									"src": "5559:487:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1486,
							"src": "233:5815:10",
							"usedErrors": [
								1235
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1507
						]
					},
					"id": 1508,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1487,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1488,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:11",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1507,
							"linearizedBaseContracts": [
								1507
							],
							"name": "Errors",
							"nameLocation": "419:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:11",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1495,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "557:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "574:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:11"
									},
									"src": "531:59:11"
								},
								{
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:11",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1498,
									"name": "FailedCall",
									"nameLocation": "696:10:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:11"
									},
									"src": "690:19:11"
								},
								{
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:11",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1501,
									"name": "FailedDeployment",
									"nameLocation": "772:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:11"
									},
									"src": "766:25:11"
								},
								{
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:11",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1506,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "884:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:11"
									},
									"src": "860:33:11"
								}
							],
							"scope": 1508,
							"src": "411:484:11",
							"usedErrors": [
								1495,
								1498,
								1501,
								1506
							],
							"usedEvents": []
						}
					],
					"src": "100:796:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1631
						]
					},
					"id": 1632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1509,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1510,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:12",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 1631,
							"linearizedBaseContracts": [
								1631
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1513,
									"members": [
										{
											"constant": false,
											"id": 1512,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1513,
											"src": "1462:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1511,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:12",
									"nodeType": "StructDefinition",
									"scope": 1631,
									"src": "1433:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1516,
									"members": [
										{
											"constant": false,
											"id": 1515,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1516,
											"src": "1517:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1514,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:12",
									"nodeType": "StructDefinition",
									"scope": 1631,
									"src": "1488:46:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1519,
									"members": [
										{
											"constant": false,
											"id": 1518,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1519,
											"src": "1569:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1517,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:12",
									"nodeType": "StructDefinition",
									"scope": 1631,
									"src": "1540:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1522,
									"members": [
										{
											"constant": false,
											"id": 1521,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1522,
											"src": "1624:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1520,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:12",
									"nodeType": "StructDefinition",
									"scope": 1631,
									"src": "1595:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 1525,
									"members": [
										{
											"constant": false,
											"id": 1524,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1525,
											"src": "1678:12:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1523,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:12",
									"nodeType": "StructDefinition",
									"scope": 1631,
									"src": "1650:47:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1528,
									"members": [
										{
											"constant": false,
											"id": 1527,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1528,
											"src": "1731:12:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1526,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:12",
									"nodeType": "StructDefinition",
									"scope": 1631,
									"src": "1703:47:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1531,
									"members": [
										{
											"constant": false,
											"id": 1530,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1531,
											"src": "1783:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1529,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:12",
									"nodeType": "StructDefinition",
									"scope": 1631,
									"src": "1756:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "1983:79:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:12",
													"nodeType": "YulBlock",
													"src": "2018:38:12",
													"statements": [
														{
															"nativeSrc": "2032:14:12",
															"nodeType": "YulAssignment",
															"src": "2032:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:12",
																"nodeType": "YulIdentifier",
																"src": "2042:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1538,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1534,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1540,
												"nodeType": "InlineAssembly",
												"src": "1993:63:12"
											}
										]
									},
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:12",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1923:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1533,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:12"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1960:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1513_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1537,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1536,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1513,
														"src": "1960:11:12"
													},
													"referencedDeclaration": 1513,
													"src": "1960:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1513_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:12"
									},
									"scope": 1631,
									"src": "1899:163:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1552,
										"nodeType": "Block",
										"src": "2243:79:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:12",
													"nodeType": "YulBlock",
													"src": "2278:38:12",
													"statements": [
														{
															"nativeSrc": "2292:14:12",
															"nodeType": "YulAssignment",
															"src": "2292:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:12",
																"nodeType": "YulIdentifier",
																"src": "2302:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1549,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1545,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1551,
												"nodeType": "InlineAssembly",
												"src": "2253:63:12"
											}
										]
									},
									"documentation": {
										"id": 1543,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:12",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "2183:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1544,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:12"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "2220:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1516_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1548,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1547,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1516,
														"src": "2220:11:12"
													},
													"referencedDeclaration": 1516,
													"src": "2220:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1516_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:12"
									},
									"scope": 1631,
									"src": "2159:163:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "2503:79:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:12",
													"nodeType": "YulBlock",
													"src": "2538:38:12",
													"statements": [
														{
															"nativeSrc": "2552:14:12",
															"nodeType": "YulAssignment",
															"src": "2552:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:12",
																"nodeType": "YulIdentifier",
																"src": "2562:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1560,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1556,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1562,
												"nodeType": "InlineAssembly",
												"src": "2513:63:12"
											}
										]
									},
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:12",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2443:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1555,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:12"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2480:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1519_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1559,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1558,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1519,
														"src": "2480:11:12"
													},
													"referencedDeclaration": 1519,
													"src": "2480:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1519_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:12"
									},
									"scope": 1631,
									"src": "2419:163:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "2763:79:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:12",
													"nodeType": "YulBlock",
													"src": "2798:38:12",
													"statements": [
														{
															"nativeSrc": "2812:14:12",
															"nodeType": "YulAssignment",
															"src": "2812:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:12",
																"nodeType": "YulIdentifier",
																"src": "2822:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1571,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1567,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1573,
												"nodeType": "InlineAssembly",
												"src": "2773:63:12"
											}
										]
									},
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:12",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "2703:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1566,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:12"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "2740:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1522_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1570,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1569,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1522,
														"src": "2740:11:12"
													},
													"referencedDeclaration": 1522,
													"src": "2740:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1522_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:12"
									},
									"scope": 1631,
									"src": "2679:163:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "3020:79:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:12",
													"nodeType": "YulBlock",
													"src": "3055:38:12",
													"statements": [
														{
															"nativeSrc": "3069:14:12",
															"nodeType": "YulAssignment",
															"src": "3069:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:12",
																"nodeType": "YulIdentifier",
																"src": "3079:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1582,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1578,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1584,
												"nodeType": "InlineAssembly",
												"src": "3030:63:12"
											}
										]
									},
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:12",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "2961:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1577,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:12"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "2998:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$1525_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 1581,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1580,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1525,
														"src": "2998:10:12"
													},
													"referencedDeclaration": 1525,
													"src": "2998:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$1525_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:12"
									},
									"scope": 1631,
									"src": "2938:161:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "3277:79:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:12",
													"nodeType": "YulBlock",
													"src": "3312:38:12",
													"statements": [
														{
															"nativeSrc": "3326:14:12",
															"nodeType": "YulAssignment",
															"src": "3326:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:12",
																"nodeType": "YulIdentifier",
																"src": "3336:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1593,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1589,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1595,
												"nodeType": "InlineAssembly",
												"src": "3287:63:12"
											}
										]
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:12",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "3218:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1588,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:12"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "3255:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1528_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1591,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1528,
														"src": "3255:10:12"
													},
													"referencedDeclaration": 1528,
													"src": "3255:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1528_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:12"
									},
									"scope": 1631,
									"src": "3195:161:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1607,
										"nodeType": "Block",
										"src": "3558:85:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:12",
													"nodeType": "YulBlock",
													"src": "3593:44:12",
													"statements": [
														{
															"nativeSrc": "3607:20:12",
															"nodeType": "YulAssignment",
															"src": "3607:20:12",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:12",
																"nodeType": "YulIdentifier",
																"src": "3617:10:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1604,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1600,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:12",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1606,
												"nodeType": "InlineAssembly",
												"src": "3568:69:12"
											}
										]
									},
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:12",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "3491:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1599,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:12"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "3536:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1528_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1603,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1602,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1528,
														"src": "3536:10:12"
													},
													"referencedDeclaration": 1528,
													"src": "3536:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1528_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:12"
									},
									"scope": 1631,
									"src": "3468:175:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "3818:79:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:12",
													"nodeType": "YulBlock",
													"src": "3853:38:12",
													"statements": [
														{
															"nativeSrc": "3867:14:12",
															"nodeType": "YulAssignment",
															"src": "3867:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:12",
																"nodeType": "YulIdentifier",
																"src": "3877:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1615,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1611,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1617,
												"nodeType": "InlineAssembly",
												"src": "3828:63:12"
											}
										]
									},
									"documentation": {
										"id": 1609,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:12",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "3760:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1610,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:12"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "3797:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1531_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1614,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1613,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1531,
														"src": "3797:9:12"
													},
													"referencedDeclaration": 1531,
													"src": "3797:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1531_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:12"
									},
									"scope": 1631,
									"src": "3738:159:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "4094:85:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:12",
													"nodeType": "YulBlock",
													"src": "4129:44:12",
													"statements": [
														{
															"nativeSrc": "4143:20:12",
															"nodeType": "YulAssignment",
															"src": "4143:20:12",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:12",
																"nodeType": "YulIdentifier",
																"src": "4153:10:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1626,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1622,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:12",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1628,
												"nodeType": "InlineAssembly",
												"src": "4104:69:12"
											}
										]
									},
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:12",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "4029:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:12"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "4073:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1531_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1625,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1624,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1531,
														"src": "4073:9:12"
													},
													"referencedDeclaration": 1531,
													"src": "4073:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1531_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:12"
									},
									"scope": 1631,
									"src": "4007:172:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1632,
							"src": "1407:2774:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:12"
				},
				"id": 12
			}
		}
	}
}